/*================================================================================
  code generated by: java2cpp
  class: org.xmlpull.v1.XmlPullParserException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XMLPULL_V1_XMLPULLPARSEREXCEPTION_HPP_DECL
#define J2CPP_ORG_XMLPULL_V1_XMLPULLPARSEREXCEPTION_HPP_DECL


namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlPullParser; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }


#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>
#include <org/xmlpull/v1/XmlPullParser.hpp>


namespace j2cpp {

namespace org { namespace xmlpull { namespace v1 {

	class XmlPullParserException;
	class XmlPullParserException
		: public cpp_object<XmlPullParserException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		XmlPullParserException(jobject jobj)
		: cpp_object<XmlPullParserException>(jobj)
		{
		}

		local_ref< java::lang::Throwable > getDetail();
		cpp_int getLineNumber();
		cpp_int getColumnNumber();
		void printStackTrace();

	}; //class XmlPullParserException

} //namespace v1
} //namespace xmlpull
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_XMLPULL_V1_XMLPULLPARSEREXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XMLPULL_V1_XMLPULLPARSEREXCEPTION_HPP_IMPL
#define J2CPP_ORG_XMLPULL_V1_XMLPULLPARSEREXCEPTION_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::xmlpull::v1::XmlPullParserException > create< org::xmlpull::v1::XmlPullParserException>(local_ref< java::lang::String > const &a0)
{
	return local_ref< org::xmlpull::v1::XmlPullParserException >(
		environment::get().get_jenv()->NewObject(
			get_class<org::xmlpull::v1::XmlPullParserException::J2CPP_CLASS_NAME>(),
			get_method_id<org::xmlpull::v1::XmlPullParserException::J2CPP_CLASS_NAME, org::xmlpull::v1::XmlPullParserException::J2CPP_METHOD_NAME(0), org::xmlpull::v1::XmlPullParserException::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< org::xmlpull::v1::XmlPullParserException > create< org::xmlpull::v1::XmlPullParserException>(local_ref< java::lang::String > const &a0, local_ref< org::xmlpull::v1::XmlPullParser > const &a1, local_ref< java::lang::Throwable > const &a2)
{
	return local_ref< org::xmlpull::v1::XmlPullParserException >(
		environment::get().get_jenv()->NewObject(
			get_class<org::xmlpull::v1::XmlPullParserException::J2CPP_CLASS_NAME>(),
			get_method_id<org::xmlpull::v1::XmlPullParserException::J2CPP_CLASS_NAME, org::xmlpull::v1::XmlPullParserException::J2CPP_METHOD_NAME(1), org::xmlpull::v1::XmlPullParserException::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::Throwable > org::xmlpull::v1::XmlPullParserException::getDetail()
{
	return local_ref< java::lang::Throwable >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int org::xmlpull::v1::XmlPullParserException::getLineNumber()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_int org::xmlpull::v1::XmlPullParserException::getColumnNumber()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void org::xmlpull::v1::XmlPullParserException::printStackTrace()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}



J2CPP_DEFINE_CLASS(org::xmlpull::v1::XmlPullParserException,"org/xmlpull/v1/XmlPullParserException")
J2CPP_DEFINE_METHOD(org::xmlpull::v1::XmlPullParserException,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xmlpull::v1::XmlPullParserException,1,"<init>","(Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(org::xmlpull::v1::XmlPullParserException,2,"getDetail","()Ljava/lang/Throwable;")
J2CPP_DEFINE_METHOD(org::xmlpull::v1::XmlPullParserException,3,"getLineNumber","()I")
J2CPP_DEFINE_METHOD(org::xmlpull::v1::XmlPullParserException,4,"getColumnNumber","()I")
J2CPP_DEFINE_METHOD(org::xmlpull::v1::XmlPullParserException,5,"printStackTrace","()V")
J2CPP_DEFINE_FIELD(org::xmlpull::v1::XmlPullParserException,0,"detail","Ljava/lang/Throwable;")
J2CPP_DEFINE_FIELD(org::xmlpull::v1::XmlPullParserException,1,"row","I")
J2CPP_DEFINE_FIELD(org::xmlpull::v1::XmlPullParserException,2,"column","I")

} //namespace j2cpp

#endif //J2CPP_ORG_XMLPULL_V1_XMLPULLPARSEREXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
