/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.impl.client.DefaultHttpRequestRetryHandler
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTHTTPREQUESTRETRYHANDLER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTHTTPREQUESTRETRYHANDLER_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpContext; } } } } }
namespace j2cpp { namespace java { namespace io { class IOException; } } }


#include <java/io/IOException.hpp>
#include <org/apache/http/protocol/HttpContext.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace impl { namespace client {

	class DefaultHttpRequestRetryHandler;
	class DefaultHttpRequestRetryHandler
		: public cpp_object<DefaultHttpRequestRetryHandler>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		DefaultHttpRequestRetryHandler(jobject jobj)
		: cpp_object<DefaultHttpRequestRetryHandler>(jobj)
		{
		}

		cpp_boolean retryRequest(local_ref< java::io::IOException > const&, cpp_int const&, local_ref< org::apache::http::protocol::HttpContext > const&);
		cpp_boolean isRequestSentRetryEnabled();
		cpp_int getRetryCount();
	}; //class DefaultHttpRequestRetryHandler

} //namespace client
} //namespace impl
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTHTTPREQUESTRETRYHANDLER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTHTTPREQUESTRETRYHANDLER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTHTTPREQUESTRETRYHANDLER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::apache::http::impl::client::DefaultHttpRequestRetryHandler > create< org::apache::http::impl::client::DefaultHttpRequestRetryHandler>(cpp_int const &a0, cpp_boolean const &a1)
{
	return local_ref< org::apache::http::impl::client::DefaultHttpRequestRetryHandler >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_CLASS_NAME, org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_METHOD_NAME(0), org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< org::apache::http::impl::client::DefaultHttpRequestRetryHandler > create< org::apache::http::impl::client::DefaultHttpRequestRetryHandler>()
{
	return local_ref< org::apache::http::impl::client::DefaultHttpRequestRetryHandler >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_CLASS_NAME, org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_METHOD_NAME(1), org::apache::http::impl::client::DefaultHttpRequestRetryHandler::J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_boolean org::apache::http::impl::client::DefaultHttpRequestRetryHandler::retryRequest(local_ref< java::io::IOException > const &a0, cpp_int const &a1, local_ref< org::apache::http::protocol::HttpContext > const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean org::apache::http::impl::client::DefaultHttpRequestRetryHandler::isRequestSentRetryEnabled()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_int org::apache::http::impl::client::DefaultHttpRequestRetryHandler::getRetryCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::impl::client::DefaultHttpRequestRetryHandler,"org/apache/http/impl/client/DefaultHttpRequestRetryHandler")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultHttpRequestRetryHandler,0,"<init>","(IZ)V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultHttpRequestRetryHandler,1,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultHttpRequestRetryHandler,2,"retryRequest","(Ljava/io/IOException;ILorg/apache/http/protocol/HttpContext;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultHttpRequestRetryHandler,3,"isRequestSentRetryEnabled","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::impl::client::DefaultHttpRequestRetryHandler,4,"getRetryCount","()I")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_IMPL_CLIENT_DEFAULTHTTPREQUESTRETRYHANDLER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
