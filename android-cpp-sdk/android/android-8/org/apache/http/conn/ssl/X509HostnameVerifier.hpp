/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.conn.ssl.X509HostnameVerifier
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_SSL_X509HOSTNAMEVERIFIER_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CONN_SSL_X509HOSTNAMEVERIFIER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class X509Certificate; } } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { class SSLSocket; } } } }
namespace j2cpp { namespace javax { namespace net { namespace ssl { class SSLSession; } } } }


#include <java/lang/String.hpp>
#include <java/security/cert/X509Certificate.hpp>
#include <javax/net/ssl/SSLSession.hpp>
#include <javax/net/ssl/SSLSocket.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace conn { namespace ssl {

	class X509HostnameVerifier;
	class X509HostnameVerifier
		: public cpp_object<X509HostnameVerifier>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		X509HostnameVerifier(jobject jobj)
		: cpp_object<X509HostnameVerifier>(jobj)
		{
		}

		cpp_boolean verify(local_ref< java::lang::String > const&, local_ref< javax::net::ssl::SSLSession > const&);
		void verify(local_ref< java::lang::String > const&, local_ref< javax::net::ssl::SSLSocket > const&);
		void verify(local_ref< java::lang::String > const&, local_ref< java::security::cert::X509Certificate > const&);
		void verify(local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::String, 1> > const&, local_ref< cpp_object_array<java::lang::String, 1> > const&);
	}; //class X509HostnameVerifier

} //namespace ssl
} //namespace conn
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_SSL_X509HOSTNAMEVERIFIER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_SSL_X509HOSTNAMEVERIFIER_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CONN_SSL_X509HOSTNAMEVERIFIER_HPP_IMPL

namespace j2cpp {


cpp_boolean org::apache::http::conn::ssl::X509HostnameVerifier::verify(local_ref< java::lang::String > const &a0, local_ref< javax::net::ssl::SSLSession > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void org::apache::http::conn::ssl::X509HostnameVerifier::verify(local_ref< java::lang::String > const &a0, local_ref< javax::net::ssl::SSLSocket > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void org::apache::http::conn::ssl::X509HostnameVerifier::verify(local_ref< java::lang::String > const &a0, local_ref< java::security::cert::X509Certificate > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void org::apache::http::conn::ssl::X509HostnameVerifier::verify(local_ref< java::lang::String > const &a0, local_ref< cpp_object_array<java::lang::String, 1> > const &a1, local_ref< cpp_object_array<java::lang::String, 1> > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::conn::ssl::X509HostnameVerifier,"org/apache/http/conn/ssl/X509HostnameVerifier")
J2CPP_DEFINE_METHOD(org::apache::http::conn::ssl::X509HostnameVerifier,0,"verify","(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::conn::ssl::X509HostnameVerifier,1,"verify","(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::ssl::X509HostnameVerifier,2,"verify","(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::ssl::X509HostnameVerifier,3,"verify","(Ljava/lang/String;[java.lang.String[java.lang.String)V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_SSL_X509HOSTNAMEVERIFIER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
