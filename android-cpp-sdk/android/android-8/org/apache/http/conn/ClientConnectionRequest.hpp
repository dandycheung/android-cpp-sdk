/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.conn.ClientConnectionRequest
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_CLIENTCONNECTIONREQUEST_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CONN_CLIENTCONNECTIONREQUEST_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { class ManagedClientConnection; } } } } }
namespace j2cpp { namespace java { namespace util { namespace concurrent { class TimeUnit; } } } }


#include <java/util/concurrent/TimeUnit.hpp>
#include <org/apache/http/conn/ManagedClientConnection.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace conn {

	class ClientConnectionRequest;
	class ClientConnectionRequest
		: public cpp_object<ClientConnectionRequest>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		ClientConnectionRequest(jobject jobj)
		: cpp_object<ClientConnectionRequest>(jobj)
		{
		}

		local_ref< org::apache::http::conn::ManagedClientConnection > getConnection(cpp_long const&, local_ref< java::util::concurrent::TimeUnit > const&);
		void abortRequest();
	}; //class ClientConnectionRequest

} //namespace conn
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_CLIENTCONNECTIONREQUEST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_CLIENTCONNECTIONREQUEST_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CONN_CLIENTCONNECTIONREQUEST_HPP_IMPL

namespace j2cpp {


local_ref< org::apache::http::conn::ManagedClientConnection > org::apache::http::conn::ClientConnectionRequest::getConnection(cpp_long const &a0, local_ref< java::util::concurrent::TimeUnit > const &a1)
{
	return local_ref< org::apache::http::conn::ManagedClientConnection >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void org::apache::http::conn::ClientConnectionRequest::abortRequest()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::conn::ClientConnectionRequest,"org/apache/http/conn/ClientConnectionRequest")
J2CPP_DEFINE_METHOD(org::apache::http::conn::ClientConnectionRequest,0,"getConnection","(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/conn/ManagedClientConnection;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::ClientConnectionRequest,1,"abortRequest","()V")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_CLIENTCONNECTIONREQUEST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
