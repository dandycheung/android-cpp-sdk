/*================================================================================
  code generated by: java2cpp
  class: android.text.method.SingleLineTransformationMethod
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_SINGLELINETRANSFORMATIONMETHOD_HPP_DECL
#define J2CPP_ANDROID_TEXT_METHOD_SINGLELINETRANSFORMATIONMETHOD_HPP_DECL






namespace j2cpp {

namespace android { namespace text { namespace method {

	class SingleLineTransformationMethod;
	class SingleLineTransformationMethod
		: public cpp_object<SingleLineTransformationMethod>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		SingleLineTransformationMethod(jobject jobj)
		: cpp_object<SingleLineTransformationMethod>(jobj)
		{
		}

		static local_ref< android::text::method::SingleLineTransformationMethod > getInstance();
	}; //class SingleLineTransformationMethod

} //namespace method
} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_SINGLELINETRANSFORMATIONMETHOD_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_SINGLELINETRANSFORMATIONMETHOD_HPP_IMPL
#define J2CPP_ANDROID_TEXT_METHOD_SINGLELINETRANSFORMATIONMETHOD_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::text::method::SingleLineTransformationMethod > create< android::text::method::SingleLineTransformationMethod>()
{
	return local_ref< android::text::method::SingleLineTransformationMethod >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::method::SingleLineTransformationMethod::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::method::SingleLineTransformationMethod::J2CPP_CLASS_NAME, android::text::method::SingleLineTransformationMethod::J2CPP_METHOD_NAME(0), android::text::method::SingleLineTransformationMethod::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}



local_ref< android::text::method::SingleLineTransformationMethod > android::text::method::SingleLineTransformationMethod::getInstance()
{
	return local_ref< android::text::method::SingleLineTransformationMethod >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::method::SingleLineTransformationMethod,"android/text/method/SingleLineTransformationMethod")
J2CPP_DEFINE_METHOD(android::text::method::SingleLineTransformationMethod,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::method::SingleLineTransformationMethod,1,"getOriginal","()[C")
J2CPP_DEFINE_METHOD(android::text::method::SingleLineTransformationMethod,2,"getReplacement","()[C")
J2CPP_DEFINE_METHOD(android::text::method::SingleLineTransformationMethod,3,"getInstance","()Landroid/text/method/SingleLineTransformationMethod;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_SINGLELINETRANSFORMATIONMETHOD_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
