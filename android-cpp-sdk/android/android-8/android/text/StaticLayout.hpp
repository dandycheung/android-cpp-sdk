/*================================================================================
  code generated by: java2cpp
  class: android.text.StaticLayout
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STATICLAYOUT_HPP_DECL
#define J2CPP_ANDROID_TEXT_STATICLAYOUT_HPP_DECL


namespace j2cpp { namespace android { namespace text { namespace Layout_ { class Alignment; } } } }
namespace j2cpp { namespace android { namespace text { namespace Layout_ { class Directions; } } } }
namespace j2cpp { namespace android { namespace text { namespace TextUtils_ { class TruncateAt; } } } }
namespace j2cpp { namespace android { namespace text { class TextPaint; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }


#include <android/text/Layout.hpp>
#include <android/text/TextPaint.hpp>
#include <android/text/TextUtils.hpp>
#include <java/lang/CharSequence.hpp>


namespace j2cpp {

namespace android { namespace text {

	class StaticLayout;
	class StaticLayout
		: public cpp_object<StaticLayout>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)

		StaticLayout(jobject jobj)
		: cpp_object<StaticLayout>(jobj)
		{
		}

		cpp_int getLineForVertical(cpp_int const&);
		cpp_int getLineCount();
		cpp_int getLineTop(cpp_int const&);
		cpp_int getLineDescent(cpp_int const&);
		cpp_int getLineStart(cpp_int const&);
		cpp_int getParagraphDirection(cpp_int const&);
		cpp_boolean getLineContainsTab(cpp_int const&);
		local_ref< android::text::Layout_::Directions > getLineDirections(cpp_int const&);
		cpp_int getTopPadding();
		cpp_int getBottomPadding();
		cpp_int getEllipsisCount(cpp_int const&);
		cpp_int getEllipsisStart(cpp_int const&);
		cpp_int getEllipsizedWidth();
	}; //class StaticLayout

} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STATICLAYOUT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STATICLAYOUT_HPP_IMPL
#define J2CPP_ANDROID_TEXT_STATICLAYOUT_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::text::StaticLayout > create< android::text::StaticLayout>(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, cpp_boolean const &a6)
{
	return local_ref< android::text::StaticLayout >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::StaticLayout::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::StaticLayout::J2CPP_CLASS_NAME, android::text::StaticLayout::J2CPP_METHOD_NAME(0), android::text::StaticLayout::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}

template <>
local_ref< android::text::StaticLayout > create< android::text::StaticLayout>(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::text::TextPaint > const &a3, cpp_int const &a4, local_ref< android::text::Layout_::Alignment > const &a5, cpp_float const &a6, cpp_float const &a7, cpp_boolean const &a8)
{
	return local_ref< android::text::StaticLayout >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::StaticLayout::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::StaticLayout::J2CPP_CLASS_NAME, android::text::StaticLayout::J2CPP_METHOD_NAME(1), android::text::StaticLayout::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype()
		)
	);
}

template <>
local_ref< android::text::StaticLayout > create< android::text::StaticLayout>(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::text::TextPaint > const &a3, cpp_int const &a4, local_ref< android::text::Layout_::Alignment > const &a5, cpp_float const &a6, cpp_float const &a7, cpp_boolean const &a8, local_ref< android::text::TextUtils_::TruncateAt > const &a9, cpp_int const &a10)
{
	return local_ref< android::text::StaticLayout >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::StaticLayout::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::StaticLayout::J2CPP_CLASS_NAME, android::text::StaticLayout::J2CPP_METHOD_NAME(2), android::text::StaticLayout::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getLineForVertical(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getLineCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

cpp_int android::text::StaticLayout::getLineTop(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getLineDescent(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getLineStart(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getParagraphDirection(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::text::StaticLayout::getLineContainsTab(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::text::Layout_::Directions > android::text::StaticLayout::getLineDirections(cpp_int const &a0)
{
	return local_ref< android::text::Layout_::Directions >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getTopPadding()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

cpp_int android::text::StaticLayout::getBottomPadding()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_int android::text::StaticLayout::getEllipsisCount(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getEllipsisStart(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::StaticLayout::getEllipsizedWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::StaticLayout,"android/text/StaticLayout")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,0,"<init>","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,1,"<init>","(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,2,"<init>","(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,3,"getLineForVertical","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,4,"getLineCount","()I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,5,"getLineTop","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,6,"getLineDescent","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,7,"getLineStart","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,8,"getParagraphDirection","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,9,"getLineContainsTab","(I)Z")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,10,"getLineDirections","(I)Landroid/text/Layout$Directions;")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,11,"getTopPadding","()I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,12,"getBottomPadding","()I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,13,"getEllipsisCount","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,14,"getEllipsisStart","(I)I")
J2CPP_DEFINE_METHOD(android::text::StaticLayout,15,"getEllipsizedWidth","()I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STATICLAYOUT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
