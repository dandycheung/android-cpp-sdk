/*================================================================================
  code generated by: java2cpp
  class: android.os.MessageQueue
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_MESSAGEQUEUE_HPP_DECL
#define J2CPP_ANDROID_OS_MESSAGEQUEUE_HPP_DECL


namespace j2cpp { namespace android { namespace os { namespace MessageQueue_ { class IdleHandler; } } } }


#include <android/os/MessageQueue.hpp>


namespace j2cpp {

namespace android { namespace os {

	class MessageQueue;
	namespace MessageQueue_ {

		class IdleHandler;
		class IdleHandler
			: public cpp_object<IdleHandler>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			IdleHandler(jobject jobj)
			: cpp_object<IdleHandler>(jobj)
			{
			}

			cpp_boolean queueIdle();
		}; //class IdleHandler

	} //namespace MessageQueue_

	class MessageQueue
		: public cpp_object<MessageQueue>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		typedef MessageQueue_::IdleHandler IdleHandler;

		MessageQueue(jobject jobj)
		: cpp_object<MessageQueue>(jobj)
		{
		}

		void addIdleHandler(local_ref< android::os::MessageQueue_::IdleHandler > const&);
		void removeIdleHandler(local_ref< android::os::MessageQueue_::IdleHandler > const&);
	}; //class MessageQueue

} //namespace os
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_MESSAGEQUEUE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_MESSAGEQUEUE_HPP_IMPL
#define J2CPP_ANDROID_OS_MESSAGEQUEUE_HPP_IMPL

namespace j2cpp {



cpp_boolean android::os::MessageQueue_::IdleHandler::queueIdle()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::MessageQueue_::IdleHandler,"android/os/MessageQueue$IdleHandler")
J2CPP_DEFINE_METHOD(android::os::MessageQueue_::IdleHandler,0,"queueIdle","()Z")


template <>
local_ref< android::os::MessageQueue > create< android::os::MessageQueue>()
{
	return local_ref< android::os::MessageQueue >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::MessageQueue::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::MessageQueue::J2CPP_CLASS_NAME, android::os::MessageQueue::J2CPP_METHOD_NAME(0), android::os::MessageQueue::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::os::MessageQueue::addIdleHandler(local_ref< android::os::MessageQueue_::IdleHandler > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::MessageQueue::removeIdleHandler(local_ref< android::os::MessageQueue_::IdleHandler > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::MessageQueue,"android/os/MessageQueue")
J2CPP_DEFINE_METHOD(android::os::MessageQueue,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::MessageQueue,1,"addIdleHandler","(Landroid/os/MessageQueue$IdleHandler;)V")
J2CPP_DEFINE_METHOD(android::os::MessageQueue,2,"removeIdleHandler","(Landroid/os/MessageQueue$IdleHandler;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_MESSAGEQUEUE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
