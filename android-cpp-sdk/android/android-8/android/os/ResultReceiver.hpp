/*================================================================================
  code generated by: java2cpp
  class: android.os.ResultReceiver
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_DECL
#define J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_DECL


namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }


#include <android/os/Bundle.hpp>
#include <android/os/Handler.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>


namespace j2cpp {

namespace android { namespace os {

	class ResultReceiver;
	class ResultReceiver
		: public cpp_object<ResultReceiver>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_FIELD(0)

		ResultReceiver(jobject jobj)
		: cpp_object<ResultReceiver>(jobj)
		{
		}

		void send(cpp_int const&, local_ref< android::os::Bundle > const&);
		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class ResultReceiver

} //namespace os
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_IMPL
#define J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::os::ResultReceiver > create< android::os::ResultReceiver>(local_ref< android::os::Handler > const &a0)
{
	return local_ref< android::os::ResultReceiver >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::ResultReceiver::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::ResultReceiver::J2CPP_CLASS_NAME, android::os::ResultReceiver::J2CPP_METHOD_NAME(0), android::os::ResultReceiver::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::ResultReceiver::send(cpp_int const &a0, local_ref< android::os::Bundle > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


cpp_int android::os::ResultReceiver::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::os::ResultReceiver::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::os::ResultReceiver::J2CPP_CLASS_NAME,
	android::os::ResultReceiver::J2CPP_FIELD_NAME(0),
	android::os::ResultReceiver::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::os::ResultReceiver::CREATOR;


J2CPP_DEFINE_CLASS(android::os::ResultReceiver,"android/os/ResultReceiver")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,0,"<init>","(Landroid/os/Handler;)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,1,"send","(ILandroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,2,"onReceiveResult","(ILandroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,3,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,4,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::os::ResultReceiver,5,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::os::ResultReceiver,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_RESULTRECEIVER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
