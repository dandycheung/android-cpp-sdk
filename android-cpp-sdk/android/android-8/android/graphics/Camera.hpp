/*================================================================================
  code generated by: java2cpp
  class: android.graphics.Camera
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { class Matrix; } } }


#include <android/graphics/Canvas.hpp>
#include <android/graphics/Matrix.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Camera;
	class Camera
		: public cpp_object<Camera>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		Camera(jobject jobj)
		: cpp_object<Camera>(jobj)
		{
		}

		void save();
		void restore();
		void translate(cpp_float const&, cpp_float const&, cpp_float const&);
		void rotateX(cpp_float const&);
		void rotateY(cpp_float const&);
		void rotateZ(cpp_float const&);
		void getMatrix(local_ref< android::graphics::Matrix > const&);
		void applyToCanvas(local_ref< android::graphics::Canvas > const&);
		cpp_float dotWithNormal(cpp_float const&, cpp_float const&, cpp_float const&);
	}; //class Camera

} //namespace graphics
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::graphics::Camera > create< android::graphics::Camera>()
{
	return local_ref< android::graphics::Camera >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Camera::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Camera::J2CPP_CLASS_NAME, android::graphics::Camera::J2CPP_METHOD_NAME(0), android::graphics::Camera::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::graphics::Camera::save()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::graphics::Camera::restore()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::graphics::Camera::translate(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Camera::rotateX(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Camera::rotateY(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Camera::rotateZ(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Camera::getMatrix(local_ref< android::graphics::Matrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Camera::applyToCanvas(local_ref< android::graphics::Canvas > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::graphics::Camera::dotWithNormal(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::graphics::Camera,"android/graphics/Camera")
J2CPP_DEFINE_METHOD(android::graphics::Camera,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,1,"save","()V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,2,"restore","()V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,3,"translate","(FFF)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,4,"rotateX","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,5,"rotateY","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,6,"rotateZ","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,7,"getMatrix","(Landroid/graphics/Matrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,8,"applyToCanvas","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::graphics::Camera,9,"dotWithNormal","(FFF)F")
J2CPP_DEFINE_METHOD(android::graphics::Camera,10,"finalize","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_CAMERA_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
