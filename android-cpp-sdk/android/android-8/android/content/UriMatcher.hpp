/*================================================================================
  code generated by: java2cpp
  class: android.content.UriMatcher
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_DECL
#define J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_DECL


namespace j2cpp { namespace android { namespace net { class Uri; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <android/net/Uri.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace content {

	class UriMatcher;
	class UriMatcher
		: public cpp_object<UriMatcher>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_FIELD(0)

		UriMatcher(jobject jobj)
		: cpp_object<UriMatcher>(jobj)
		{
		}

		void addURI(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, cpp_int const&);
		cpp_int match(local_ref< android::net::Uri > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > NO_MATCH;
	}; //class UriMatcher

} //namespace content
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::content::UriMatcher > create< android::content::UriMatcher>(cpp_int const &a0)
{
	return local_ref< android::content::UriMatcher >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::UriMatcher::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::UriMatcher::J2CPP_CLASS_NAME, android::content::UriMatcher::J2CPP_METHOD_NAME(0), android::content::UriMatcher::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::content::UriMatcher::addURI(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::content::UriMatcher::match(local_ref< android::net::Uri > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::content::UriMatcher::J2CPP_CLASS_NAME,
	android::content::UriMatcher::J2CPP_FIELD_NAME(0),
	android::content::UriMatcher::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::content::UriMatcher::NO_MATCH;


J2CPP_DEFINE_CLASS(android::content::UriMatcher,"android/content/UriMatcher")
J2CPP_DEFINE_METHOD(android::content::UriMatcher,0,"<init>","(I)V")
J2CPP_DEFINE_METHOD(android::content::UriMatcher,1,"addURI","(Ljava/lang/String;Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::content::UriMatcher,2,"match","(Landroid/net/Uri;)I")
J2CPP_DEFINE_FIELD(android::content::UriMatcher,0,"NO_MATCH","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_URIMATCHER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
