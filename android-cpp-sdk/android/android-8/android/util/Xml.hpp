/*================================================================================
  code generated by: java2cpp
  class: android.util.Xml
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_XML_HPP_DECL
#define J2CPP_ANDROID_UTIL_XML_HPP_DECL


namespace j2cpp { namespace org { namespace xml { namespace sax { class ContentHandler; } } } }
namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlPullParser; } } } }
namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlSerializer; } } } }
namespace j2cpp { namespace android { namespace util { namespace Xml_ { class Encoding; } } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class Reader; } } }


#include <android/util/AttributeSet.hpp>
#include <android/util/Xml.hpp>
#include <java/io/InputStream.hpp>
#include <java/io/Reader.hpp>
#include <java/lang/String.hpp>
#include <org/xml/sax/ContentHandler.hpp>
#include <org/xmlpull/v1/XmlPullParser.hpp>
#include <org/xmlpull/v1/XmlSerializer.hpp>


namespace j2cpp {

namespace android { namespace util {

	class Xml;
	namespace Xml_ {

		class Encoding;
		class Encoding
			: public cpp_object<Encoding>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			Encoding(jobject jobj)
			: cpp_object<Encoding>(jobj)
			{
			}

			static local_ref< cpp_object_array<android::util::Xml_::Encoding, 1> > values();
			static local_ref< android::util::Xml_::Encoding > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::util::Xml_::Encoding > > ISO_8859_1;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::util::Xml_::Encoding > > US_ASCII;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::util::Xml_::Encoding > > UTF_16;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), local_ref< android::util::Xml_::Encoding > > UTF_8;
		}; //class Encoding

	} //namespace Xml_

	class Xml
		: public cpp_object<Xml>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_FIELD(0)

		typedef Xml_::Encoding Encoding;

		Xml(jobject jobj)
		: cpp_object<Xml>(jobj)
		{
		}

		static void parse(local_ref< java::lang::String > const&, local_ref< org::xml::sax::ContentHandler > const&);
		static void parse(local_ref< java::io::Reader > const&, local_ref< org::xml::sax::ContentHandler > const&);
		static void parse(local_ref< java::io::InputStream > const&, local_ref< android::util::Xml_::Encoding > const&, local_ref< org::xml::sax::ContentHandler > const&);
		static local_ref< org::xmlpull::v1::XmlPullParser > newPullParser();
		static local_ref< org::xmlpull::v1::XmlSerializer > newSerializer();
		static local_ref< android::util::Xml_::Encoding > findEncodingByName(local_ref< java::lang::String > const&);
		static local_ref< android::util::AttributeSet > asAttributeSet(local_ref< org::xmlpull::v1::XmlPullParser > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > FEATURE_RELAXED;
	}; //class Xml

} //namespace util
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_XML_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_XML_HPP_IMPL
#define J2CPP_ANDROID_UTIL_XML_HPP_IMPL

namespace j2cpp {



local_ref< cpp_object_array<android::util::Xml_::Encoding, 1> > android::util::Xml_::Encoding::values()
{
	return local_ref< cpp_object_array<android::util::Xml_::Encoding, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< android::util::Xml_::Encoding > android::util::Xml_::Encoding::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::util::Xml_::Encoding >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::util::Xml_::Encoding > create< android::util::Xml_::Encoding>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< android::util::Xml_::Encoding >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::Xml_::Encoding::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::Xml_::Encoding::J2CPP_CLASS_NAME, android::util::Xml_::Encoding::J2CPP_METHOD_NAME(2), android::util::Xml_::Encoding::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::util::Xml_::Encoding::J2CPP_CLASS_NAME,
	android::util::Xml_::Encoding::J2CPP_FIELD_NAME(0),
	android::util::Xml_::Encoding::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::util::Xml_::Encoding >
> android::util::Xml_::Encoding::ISO_8859_1;

static_field<
	android::util::Xml_::Encoding::J2CPP_CLASS_NAME,
	android::util::Xml_::Encoding::J2CPP_FIELD_NAME(1),
	android::util::Xml_::Encoding::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::util::Xml_::Encoding >
> android::util::Xml_::Encoding::US_ASCII;

static_field<
	android::util::Xml_::Encoding::J2CPP_CLASS_NAME,
	android::util::Xml_::Encoding::J2CPP_FIELD_NAME(2),
	android::util::Xml_::Encoding::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::util::Xml_::Encoding >
> android::util::Xml_::Encoding::UTF_16;

static_field<
	android::util::Xml_::Encoding::J2CPP_CLASS_NAME,
	android::util::Xml_::Encoding::J2CPP_FIELD_NAME(3),
	android::util::Xml_::Encoding::J2CPP_FIELD_SIGNATURE(3),
	local_ref< android::util::Xml_::Encoding >
> android::util::Xml_::Encoding::UTF_8;


J2CPP_DEFINE_CLASS(android::util::Xml_::Encoding,"android/util/Xml$Encoding")
J2CPP_DEFINE_METHOD(android::util::Xml_::Encoding,0,"values","()[android.util.Xml.Encoding")
J2CPP_DEFINE_METHOD(android::util::Xml_::Encoding,1,"valueOf","(Ljava/lang/String;)Landroid/util/Xml$Encoding;")
J2CPP_DEFINE_METHOD(android::util::Xml_::Encoding,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::util::Xml_::Encoding,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::util::Xml_::Encoding,0,"ISO_8859_1","Landroid/util/Xml$Encoding;")
J2CPP_DEFINE_FIELD(android::util::Xml_::Encoding,1,"US_ASCII","Landroid/util/Xml$Encoding;")
J2CPP_DEFINE_FIELD(android::util::Xml_::Encoding,2,"UTF_16","Landroid/util/Xml$Encoding;")
J2CPP_DEFINE_FIELD(android::util::Xml_::Encoding,3,"UTF_8","Landroid/util/Xml$Encoding;")
J2CPP_DEFINE_FIELD(android::util::Xml_::Encoding,4,"$VALUES","[android.util.Xml.Encoding")


template <>
local_ref< android::util::Xml > create< android::util::Xml>()
{
	return local_ref< android::util::Xml >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::Xml::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::Xml::J2CPP_CLASS_NAME, android::util::Xml::J2CPP_METHOD_NAME(0), android::util::Xml::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::util::Xml::parse(local_ref< java::lang::String > const &a0, local_ref< org::xml::sax::ContentHandler > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::util::Xml::parse(local_ref< java::io::Reader > const &a0, local_ref< org::xml::sax::ContentHandler > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::util::Xml::parse(local_ref< java::io::InputStream > const &a0, local_ref< android::util::Xml_::Encoding > const &a1, local_ref< org::xml::sax::ContentHandler > const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< org::xmlpull::v1::XmlPullParser > android::util::Xml::newPullParser()
{
	return local_ref< org::xmlpull::v1::XmlPullParser >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>()
		)
	);
}

local_ref< org::xmlpull::v1::XmlSerializer > android::util::Xml::newSerializer()
{
	return local_ref< org::xmlpull::v1::XmlSerializer >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>()
		)
	);
}

local_ref< android::util::Xml_::Encoding > android::util::Xml::findEncodingByName(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::util::Xml_::Encoding >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::util::AttributeSet > android::util::Xml::asAttributeSet(local_ref< org::xmlpull::v1::XmlPullParser > const &a0)
{
	return local_ref< android::util::AttributeSet >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::util::Xml::J2CPP_CLASS_NAME,
	android::util::Xml::J2CPP_FIELD_NAME(0),
	android::util::Xml::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> android::util::Xml::FEATURE_RELAXED;


J2CPP_DEFINE_CLASS(android::util::Xml,"android/util/Xml")
J2CPP_DEFINE_METHOD(android::util::Xml,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::Xml,1,"parse","(Ljava/lang/String;Lorg/xml/sax/ContentHandler;)V")
J2CPP_DEFINE_METHOD(android::util::Xml,2,"parse","(Ljava/io/Reader;Lorg/xml/sax/ContentHandler;)V")
J2CPP_DEFINE_METHOD(android::util::Xml,3,"parse","(Ljava/io/InputStream;Landroid/util/Xml$Encoding;Lorg/xml/sax/ContentHandler;)V")
J2CPP_DEFINE_METHOD(android::util::Xml,4,"newPullParser","()Lorg/xmlpull/v1/XmlPullParser;")
J2CPP_DEFINE_METHOD(android::util::Xml,5,"newSerializer","()Lorg/xmlpull/v1/XmlSerializer;")
J2CPP_DEFINE_METHOD(android::util::Xml,6,"findEncodingByName","(Ljava/lang/String;)Landroid/util/Xml$Encoding;")
J2CPP_DEFINE_METHOD(android::util::Xml,7,"asAttributeSet","(Lorg/xmlpull/v1/XmlPullParser;)Landroid/util/AttributeSet;")
J2CPP_DEFINE_FIELD(android::util::Xml,0,"FEATURE_RELAXED","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_XML_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
