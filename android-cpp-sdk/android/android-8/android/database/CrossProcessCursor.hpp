/*================================================================================
  code generated by: java2cpp
  class: android.database.CrossProcessCursor
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_CROSSPROCESSCURSOR_HPP_DECL
#define J2CPP_ANDROID_DATABASE_CROSSPROCESSCURSOR_HPP_DECL


namespace j2cpp { namespace android { namespace database { class CursorWindow; } } }


#include <android/database/CursorWindow.hpp>


namespace j2cpp {

namespace android { namespace database {

	class CrossProcessCursor;
	class CrossProcessCursor
		: public cpp_object<CrossProcessCursor>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		CrossProcessCursor(jobject jobj)
		: cpp_object<CrossProcessCursor>(jobj)
		{
		}

		local_ref< android::database::CursorWindow > getWindow();
		void fillWindow(cpp_int const&, local_ref< android::database::CursorWindow > const&);
		cpp_boolean onMove(cpp_int const&, cpp_int const&);
	}; //class CrossProcessCursor

} //namespace database
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_CROSSPROCESSCURSOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_CROSSPROCESSCURSOR_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_CROSSPROCESSCURSOR_HPP_IMPL

namespace j2cpp {


local_ref< android::database::CursorWindow > android::database::CrossProcessCursor::getWindow()
{
	return local_ref< android::database::CursorWindow >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::database::CrossProcessCursor::fillWindow(cpp_int const &a0, local_ref< android::database::CursorWindow > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::database::CrossProcessCursor::onMove(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::database::CrossProcessCursor,"android/database/CrossProcessCursor")
J2CPP_DEFINE_METHOD(android::database::CrossProcessCursor,0,"getWindow","()Landroid/database/CursorWindow;")
J2CPP_DEFINE_METHOD(android::database::CrossProcessCursor,1,"fillWindow","(ILandroid/database/CursorWindow;)V")
J2CPP_DEFINE_METHOD(android::database::CrossProcessCursor,2,"onMove","(II)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_CROSSPROCESSCURSOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
