/*================================================================================
  code generated by: java2cpp
  class: android.view.OrientationEventListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ORIENTATIONEVENTLISTENER_HPP_DECL
#define J2CPP_ANDROID_VIEW_ORIENTATIONEVENTLISTENER_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }


#include <android/content/Context.hpp>


namespace j2cpp {

namespace android { namespace view {

	class OrientationEventListener;
	class OrientationEventListener
		: public cpp_object<OrientationEventListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_FIELD(0)

		OrientationEventListener(jobject jobj)
		: cpp_object<OrientationEventListener>(jobj)
		{
		}

		void enable();
		void disable();
		cpp_boolean canDetectOrientation();
		void onOrientationChanged(cpp_int const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > ORIENTATION_UNKNOWN;
	}; //class OrientationEventListener

} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ORIENTATIONEVENTLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ORIENTATIONEVENTLISTENER_HPP_IMPL
#define J2CPP_ANDROID_VIEW_ORIENTATIONEVENTLISTENER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::view::OrientationEventListener > create< android::view::OrientationEventListener>(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::view::OrientationEventListener >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::OrientationEventListener::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::OrientationEventListener::J2CPP_CLASS_NAME, android::view::OrientationEventListener::J2CPP_METHOD_NAME(0), android::view::OrientationEventListener::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::view::OrientationEventListener > create< android::view::OrientationEventListener>(local_ref< android::content::Context > const &a0, cpp_int const &a1)
{
	return local_ref< android::view::OrientationEventListener >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::OrientationEventListener::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::OrientationEventListener::J2CPP_CLASS_NAME, android::view::OrientationEventListener::J2CPP_METHOD_NAME(1), android::view::OrientationEventListener::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::OrientationEventListener::enable()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::view::OrientationEventListener::disable()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_boolean android::view::OrientationEventListener::canDetectOrientation()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::view::OrientationEventListener::onOrientationChanged(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::view::OrientationEventListener::J2CPP_CLASS_NAME,
	android::view::OrientationEventListener::J2CPP_FIELD_NAME(0),
	android::view::OrientationEventListener::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::view::OrientationEventListener::ORIENTATION_UNKNOWN;


J2CPP_DEFINE_CLASS(android::view::OrientationEventListener,"android/view/OrientationEventListener")
J2CPP_DEFINE_METHOD(android::view::OrientationEventListener,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::view::OrientationEventListener,1,"<init>","(Landroid/content/Context;I)V")
J2CPP_DEFINE_METHOD(android::view::OrientationEventListener,2,"enable","()V")
J2CPP_DEFINE_METHOD(android::view::OrientationEventListener,3,"disable","()V")
J2CPP_DEFINE_METHOD(android::view::OrientationEventListener,4,"canDetectOrientation","()Z")
J2CPP_DEFINE_METHOD(android::view::OrientationEventListener,5,"onOrientationChanged","(I)V")
J2CPP_DEFINE_FIELD(android::view::OrientationEventListener,0,"ORIENTATION_UNKNOWN","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ORIENTATIONEVENTLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
