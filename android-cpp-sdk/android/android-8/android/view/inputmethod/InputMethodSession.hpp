/*================================================================================
  code generated by: java2cpp
  class: android.view.inputmethod.InputMethodSession
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_HPP_DECL
#define J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_HPP_DECL


namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { namespace InputMethodSession_ { class EventCallback; } } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class ExtractedText; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class CompletionInfo; } } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <android/graphics/Rect.hpp>
#include <android/os/Bundle.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/inputmethod/CompletionInfo.hpp>
#include <android/view/inputmethod/ExtractedText.hpp>
#include <android/view/inputmethod/InputMethodSession.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace view { namespace inputmethod {

	class InputMethodSession;
	namespace InputMethodSession_ {

		class EventCallback;
		class EventCallback
			: public cpp_object<EventCallback>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			EventCallback(jobject jobj)
			: cpp_object<EventCallback>(jobj)
			{
			}

			void finishedEvent(cpp_int const&, cpp_boolean const&);
		}; //class EventCallback

	} //namespace InputMethodSession_

	class InputMethodSession
		: public cpp_object<InputMethodSession>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)

		typedef InputMethodSession_::EventCallback EventCallback;

		InputMethodSession(jobject jobj)
		: cpp_object<InputMethodSession>(jobj)
		{
		}

		void finishInput();
		void updateSelection(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void updateCursor(local_ref< android::graphics::Rect > const&);
		void displayCompletions(local_ref< cpp_object_array<android::view::inputmethod::CompletionInfo, 1> > const&);
		void updateExtractedText(cpp_int const&, local_ref< android::view::inputmethod::ExtractedText > const&);
		void dispatchKeyEvent(cpp_int const&, local_ref< android::view::KeyEvent > const&, local_ref< android::view::inputmethod::InputMethodSession_::EventCallback > const&);
		void dispatchTrackballEvent(cpp_int const&, local_ref< android::view::MotionEvent > const&, local_ref< android::view::inputmethod::InputMethodSession_::EventCallback > const&);
		void appPrivateCommand(local_ref< java::lang::String > const&, local_ref< android::os::Bundle > const&);
		void toggleSoftInput(cpp_int const&, cpp_int const&);
	}; //class InputMethodSession

} //namespace inputmethod
} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_HPP_IMPL
#define J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_HPP_IMPL

namespace j2cpp {



void android::view::inputmethod::InputMethodSession_::EventCallback::finishedEvent(cpp_int const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::inputmethod::InputMethodSession_::EventCallback,"android/view/inputmethod/InputMethodSession$EventCallback")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession_::EventCallback,0,"finishedEvent","(IZ)V")


void android::view::inputmethod::InputMethodSession::finishInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::view::inputmethod::InputMethodSession::updateSelection(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::updateCursor(local_ref< android::graphics::Rect > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::displayCompletions(local_ref< cpp_object_array<android::view::inputmethod::CompletionInfo, 1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::updateExtractedText(cpp_int const &a0, local_ref< android::view::inputmethod::ExtractedText > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::dispatchKeyEvent(cpp_int const &a0, local_ref< android::view::KeyEvent > const &a1, local_ref< android::view::inputmethod::InputMethodSession_::EventCallback > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::dispatchTrackballEvent(cpp_int const &a0, local_ref< android::view::MotionEvent > const &a1, local_ref< android::view::inputmethod::InputMethodSession_::EventCallback > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::appPrivateCommand(local_ref< java::lang::String > const &a0, local_ref< android::os::Bundle > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::inputmethod::InputMethodSession::toggleSoftInput(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::inputmethod::InputMethodSession,"android/view/inputmethod/InputMethodSession")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,0,"finishInput","()V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,1,"updateSelection","(IIIIII)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,2,"updateCursor","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,3,"displayCompletions","([android.view.inputmethod.CompletionInfo)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,4,"updateExtractedText","(ILandroid/view/inputmethod/ExtractedText;)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,5,"dispatchKeyEvent","(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,6,"dispatchTrackballEvent","(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,7,"appPrivateCommand","(Ljava/lang/String;Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputMethodSession,8,"toggleSoftInput","(II)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
