/*================================================================================
  code generated by: java2cpp
  class: java.beans.PropertyChangeListenerProxy
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_HPP_DECL
#define J2CPP_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_HPP_DECL


namespace j2cpp { namespace java { namespace beans { class PropertyChangeListener; } } }
namespace j2cpp { namespace java { namespace beans { class PropertyChangeEvent; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/beans/PropertyChangeEvent.hpp>
#include <java/beans/PropertyChangeListener.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace beans {

	class PropertyChangeListenerProxy;
	class PropertyChangeListenerProxy
		: public cpp_object<PropertyChangeListenerProxy>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		PropertyChangeListenerProxy(jobject jobj)
		: cpp_object<PropertyChangeListenerProxy>(jobj)
		{
		}

		local_ref< java::lang::String > getPropertyName();
		void propertyChange(local_ref< java::beans::PropertyChangeEvent > const&);
	}; //class PropertyChangeListenerProxy

} //namespace beans
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_HPP_IMPL
#define J2CPP_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::beans::PropertyChangeListenerProxy > create< java::beans::PropertyChangeListenerProxy>(local_ref< java::lang::String > const &a0, local_ref< java::beans::PropertyChangeListener > const &a1)
{
	return local_ref< java::beans::PropertyChangeListenerProxy >(
		environment::get().get_jenv()->NewObject(
			get_class<java::beans::PropertyChangeListenerProxy::J2CPP_CLASS_NAME>(),
			get_method_id<java::beans::PropertyChangeListenerProxy::J2CPP_CLASS_NAME, java::beans::PropertyChangeListenerProxy::J2CPP_METHOD_NAME(0), java::beans::PropertyChangeListenerProxy::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::beans::PropertyChangeListenerProxy::getPropertyName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void java::beans::PropertyChangeListenerProxy::propertyChange(local_ref< java::beans::PropertyChangeEvent > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::beans::PropertyChangeListenerProxy,"java/beans/PropertyChangeListenerProxy")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeListenerProxy,0,"<init>","(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeListenerProxy,1,"getPropertyName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeListenerProxy,2,"propertyChange","(Ljava/beans/PropertyChangeEvent;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
