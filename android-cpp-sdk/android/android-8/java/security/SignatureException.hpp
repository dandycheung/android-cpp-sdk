/*================================================================================
  code generated by: java2cpp
  class: java.security.SignatureException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_SIGNATUREEXCEPTION_HPP_DECL
#define J2CPP_JAVA_SECURITY_SIGNATUREEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }


#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>


namespace j2cpp {

namespace java { namespace security {

	class SignatureException;
	class SignatureException
		: public cpp_object<SignatureException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		SignatureException(jobject jobj)
		: cpp_object<SignatureException>(jobj)
		{
		}

	}; //class SignatureException

} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_SIGNATUREEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_SIGNATUREEXCEPTION_HPP_IMPL
#define J2CPP_JAVA_SECURITY_SIGNATUREEXCEPTION_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::security::SignatureException > create< java::security::SignatureException>(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::security::SignatureException >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::SignatureException::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::SignatureException::J2CPP_CLASS_NAME, java::security::SignatureException::J2CPP_METHOD_NAME(0), java::security::SignatureException::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< java::security::SignatureException > create< java::security::SignatureException>()
{
	return local_ref< java::security::SignatureException >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::SignatureException::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::SignatureException::J2CPP_CLASS_NAME, java::security::SignatureException::J2CPP_METHOD_NAME(1), java::security::SignatureException::J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

template <>
local_ref< java::security::SignatureException > create< java::security::SignatureException>(local_ref< java::lang::String > const &a0, local_ref< java::lang::Throwable > const &a1)
{
	return local_ref< java::security::SignatureException >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::SignatureException::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::SignatureException::J2CPP_CLASS_NAME, java::security::SignatureException::J2CPP_METHOD_NAME(2), java::security::SignatureException::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< java::security::SignatureException > create< java::security::SignatureException>(local_ref< java::lang::Throwable > const &a0)
{
	return local_ref< java::security::SignatureException >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::SignatureException::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::SignatureException::J2CPP_CLASS_NAME, java::security::SignatureException::J2CPP_METHOD_NAME(3), java::security::SignatureException::J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::SignatureException,"java/security/SignatureException")
J2CPP_DEFINE_METHOD(java::security::SignatureException,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::SignatureException,1,"<init>","()V")
J2CPP_DEFINE_METHOD(java::security::SignatureException,2,"<init>","(Ljava/lang/String;Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(java::security::SignatureException,3,"<init>","(Ljava/lang/Throwable;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_SIGNATUREEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
