/*================================================================================
  code generated by: java2cpp
  class: java.security.Identity
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_IDENTITY_HPP_DECL
#define J2CPP_JAVA_SECURITY_IDENTITY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class IdentityScope; } } }
namespace j2cpp { namespace java { namespace security { class Certificate; } } }
namespace j2cpp { namespace java { namespace security { class PublicKey; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/security/Certificate.hpp>
#include <java/security/IdentityScope.hpp>
#include <java/security/PublicKey.hpp>


namespace j2cpp {

namespace java { namespace security {

	class Identity;
	class Identity
		: public cpp_object<Identity>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)

		Identity(jobject jobj)
		: cpp_object<Identity>(jobj)
		{
		}

		void addCertificate(local_ref< java::security::Certificate > const&);
		void removeCertificate(local_ref< java::security::Certificate > const&);
		local_ref< cpp_object_array<java::security::Certificate, 1> > certificates();
		local_ref< java::lang::String > toString(cpp_boolean const&);
		local_ref< java::security::IdentityScope > getScope();
		void setPublicKey(local_ref< java::security::PublicKey > const&);
		local_ref< java::security::PublicKey > getPublicKey();
		void setInfo(local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getInfo();
		cpp_boolean equals(local_ref< java::lang::Object > const&);
		local_ref< java::lang::String > getName();
		cpp_int hashCode();
		local_ref< java::lang::String > toString();
	}; //class Identity

} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_IDENTITY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_IDENTITY_HPP_IMPL
#define J2CPP_JAVA_SECURITY_IDENTITY_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::security::Identity > create< java::security::Identity>()
{
	return local_ref< java::security::Identity >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::Identity::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::Identity::J2CPP_CLASS_NAME, java::security::Identity::J2CPP_METHOD_NAME(0), java::security::Identity::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< java::security::Identity > create< java::security::Identity>(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::security::Identity >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::Identity::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::Identity::J2CPP_CLASS_NAME, java::security::Identity::J2CPP_METHOD_NAME(1), java::security::Identity::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< java::security::Identity > create< java::security::Identity>(local_ref< java::lang::String > const &a0, local_ref< java::security::IdentityScope > const &a1)
{
	return local_ref< java::security::Identity >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::Identity::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::Identity::J2CPP_CLASS_NAME, java::security::Identity::J2CPP_METHOD_NAME(2), java::security::Identity::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::security::Identity::addCertificate(local_ref< java::security::Certificate > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void java::security::Identity::removeCertificate(local_ref< java::security::Certificate > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::security::Certificate, 1> > java::security::Identity::certificates()
{
	return local_ref< cpp_object_array<java::security::Certificate, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}


local_ref< java::lang::String > java::security::Identity::toString(cpp_boolean const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::security::IdentityScope > java::security::Identity::getScope()
{
	return local_ref< java::security::IdentityScope >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

void java::security::Identity::setPublicKey(local_ref< java::security::PublicKey > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::security::PublicKey > java::security::Identity::getPublicKey()
{
	return local_ref< java::security::PublicKey >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

void java::security::Identity::setInfo(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::security::Identity::getInfo()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_boolean java::security::Identity::equals(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::security::Identity::getName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

cpp_int java::security::Identity::hashCode()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

local_ref< java::lang::String > java::security::Identity::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::Identity,"java/security/Identity")
J2CPP_DEFINE_METHOD(java::security::Identity,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::security::Identity,1,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,2,"<init>","(Ljava/lang/String;Ljava/security/IdentityScope;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,3,"addCertificate","(Ljava/security/Certificate;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,4,"removeCertificate","(Ljava/security/Certificate;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,5,"certificates","()[java.security.Certificate")
J2CPP_DEFINE_METHOD(java::security::Identity,6,"identityEquals","(Ljava/security/Identity;)Z")
J2CPP_DEFINE_METHOD(java::security::Identity,7,"toString","(Z)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Identity,8,"getScope","()Ljava/security/IdentityScope;")
J2CPP_DEFINE_METHOD(java::security::Identity,9,"setPublicKey","(Ljava/security/PublicKey;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,10,"getPublicKey","()Ljava/security/PublicKey;")
J2CPP_DEFINE_METHOD(java::security::Identity,11,"setInfo","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::Identity,12,"getInfo","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Identity,13,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::security::Identity,14,"getName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::Identity,15,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::security::Identity,16,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_IDENTITY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
