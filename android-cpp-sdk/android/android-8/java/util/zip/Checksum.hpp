/*================================================================================
  code generated by: java2cpp
  class: java.util.zip.Checksum
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ZIP_CHECKSUM_HPP_DECL
#define J2CPP_JAVA_UTIL_ZIP_CHECKSUM_HPP_DECL






namespace j2cpp {

namespace java { namespace util { namespace zip {

	class Checksum;
	class Checksum
		: public cpp_object<Checksum>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		Checksum(jobject jobj)
		: cpp_object<Checksum>(jobj)
		{
		}

		cpp_long getValue();
		void reset();
		void update(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
		void update(cpp_int const&);
	}; //class Checksum

} //namespace zip
} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ZIP_CHECKSUM_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ZIP_CHECKSUM_HPP_IMPL
#define J2CPP_JAVA_UTIL_ZIP_CHECKSUM_HPP_IMPL

namespace j2cpp {


cpp_long java::util::zip::Checksum::getValue()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void java::util::zip::Checksum::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void java::util::zip::Checksum::update(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::zip::Checksum::update(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::util::zip::Checksum,"java/util/zip/Checksum")
J2CPP_DEFINE_METHOD(java::util::zip::Checksum,0,"getValue","()J")
J2CPP_DEFINE_METHOD(java::util::zip::Checksum,1,"reset","()V")
J2CPP_DEFINE_METHOD(java::util::zip::Checksum,2,"update","([BII)V")
J2CPP_DEFINE_METHOD(java::util::zip::Checksum,3,"update","(I)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ZIP_CHECKSUM_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
