/*================================================================================
  code generated by: java2cpp
  class: java.util.prefs.NodeChangeEvent
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_PREFS_NODECHANGEEVENT_HPP_DECL
#define J2CPP_JAVA_UTIL_PREFS_NODECHANGEEVENT_HPP_DECL


namespace j2cpp { namespace java { namespace util { namespace prefs { class Preferences; } } } }


#include <java/util/prefs/Preferences.hpp>


namespace j2cpp {

namespace java { namespace util { namespace prefs {

	class NodeChangeEvent;
	class NodeChangeEvent
		: public cpp_object<NodeChangeEvent>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		NodeChangeEvent(jobject jobj)
		: cpp_object<NodeChangeEvent>(jobj)
		{
		}

		local_ref< java::util::prefs::Preferences > getParent();
		local_ref< java::util::prefs::Preferences > getChild();
	}; //class NodeChangeEvent

} //namespace prefs
} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_PREFS_NODECHANGEEVENT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_PREFS_NODECHANGEEVENT_HPP_IMPL
#define J2CPP_JAVA_UTIL_PREFS_NODECHANGEEVENT_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::util::prefs::NodeChangeEvent > create< java::util::prefs::NodeChangeEvent>(local_ref< java::util::prefs::Preferences > const &a0, local_ref< java::util::prefs::Preferences > const &a1)
{
	return local_ref< java::util::prefs::NodeChangeEvent >(
		environment::get().get_jenv()->NewObject(
			get_class<java::util::prefs::NodeChangeEvent::J2CPP_CLASS_NAME>(),
			get_method_id<java::util::prefs::NodeChangeEvent::J2CPP_CLASS_NAME, java::util::prefs::NodeChangeEvent::J2CPP_METHOD_NAME(0), java::util::prefs::NodeChangeEvent::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::prefs::Preferences > java::util::prefs::NodeChangeEvent::getParent()
{
	return local_ref< java::util::prefs::Preferences >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::util::prefs::Preferences > java::util::prefs::NodeChangeEvent::getChild()
{
	return local_ref< java::util::prefs::Preferences >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::util::prefs::NodeChangeEvent,"java/util/prefs/NodeChangeEvent")
J2CPP_DEFINE_METHOD(java::util::prefs::NodeChangeEvent,0,"<init>","(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V")
J2CPP_DEFINE_METHOD(java::util::prefs::NodeChangeEvent,1,"getParent","()Ljava/util/prefs/Preferences;")
J2CPP_DEFINE_METHOD(java::util::prefs::NodeChangeEvent,2,"getChild","()Ljava/util/prefs/Preferences;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_PREFS_NODECHANGEEVENT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
