/*================================================================================
  code generated by: java2cpp
  class: java.lang.reflect.GenericArrayType
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_REFLECT_GENERICARRAYTYPE_HPP_DECL
#define J2CPP_JAVA_LANG_REFLECT_GENERICARRAYTYPE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { namespace reflect { class Type; } } } }


#include <java/lang/reflect/Type.hpp>


namespace j2cpp {

namespace java { namespace lang { namespace reflect {

	class GenericArrayType;
	class GenericArrayType
		: public cpp_object<GenericArrayType>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		GenericArrayType(jobject jobj)
		: cpp_object<GenericArrayType>(jobj)
		{
		}

		local_ref< java::lang::reflect::Type > getGenericComponentType();
	}; //class GenericArrayType

} //namespace reflect
} //namespace lang
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_REFLECT_GENERICARRAYTYPE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_REFLECT_GENERICARRAYTYPE_HPP_IMPL
#define J2CPP_JAVA_LANG_REFLECT_GENERICARRAYTYPE_HPP_IMPL

namespace j2cpp {


local_ref< java::lang::reflect::Type > java::lang::reflect::GenericArrayType::getGenericComponentType()
{
	return local_ref< java::lang::reflect::Type >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::lang::reflect::GenericArrayType,"java/lang/reflect/GenericArrayType")
J2CPP_DEFINE_METHOD(java::lang::reflect::GenericArrayType,0,"getGenericComponentType","()Ljava/lang/reflect/Type;")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_REFLECT_GENERICARRAYTYPE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
