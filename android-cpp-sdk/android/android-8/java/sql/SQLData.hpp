/*================================================================================
  code generated by: java2cpp
  class: java.sql.SQLData
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_SQLDATA_HPP_DECL
#define J2CPP_JAVA_SQL_SQLDATA_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace sql { class SQLInput; } } }
namespace j2cpp { namespace java { namespace sql { class SQLOutput; } } }


#include <java/lang/String.hpp>
#include <java/sql/SQLInput.hpp>
#include <java/sql/SQLOutput.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class SQLData;
	class SQLData
		: public cpp_object<SQLData>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		SQLData(jobject jobj)
		: cpp_object<SQLData>(jobj)
		{
		}

		local_ref< java::lang::String > getSQLTypeName();
		void readSQL(local_ref< java::sql::SQLInput > const&, local_ref< java::lang::String > const&);
		void writeSQL(local_ref< java::sql::SQLOutput > const&);
	}; //class SQLData

} //namespace sql
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_SQLDATA_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_SQLDATA_HPP_IMPL
#define J2CPP_JAVA_SQL_SQLDATA_HPP_IMPL

namespace j2cpp {


local_ref< java::lang::String > java::sql::SQLData::getSQLTypeName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void java::sql::SQLData::readSQL(local_ref< java::sql::SQLInput > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::SQLData::writeSQL(local_ref< java::sql::SQLOutput > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::sql::SQLData,"java/sql/SQLData")
J2CPP_DEFINE_METHOD(java::sql::SQLData,0,"getSQLTypeName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::SQLData,1,"readSQL","(Ljava/sql/SQLInput;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::SQLData,2,"writeSQL","(Ljava/sql/SQLOutput;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_SQLDATA_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
