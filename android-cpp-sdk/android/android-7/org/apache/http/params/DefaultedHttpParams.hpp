/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.params.DefaultedHttpParams
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PARAMS_DEFAULTEDHTTPPARAMS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_PARAMS_DEFAULTEDHTTPPARAMS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/params/HttpParams.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace params {

	class DefaultedHttpParams;
	class DefaultedHttpParams
		: public cpp_object<DefaultedHttpParams>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		DefaultedHttpParams(jobject jobj)
		: cpp_object<DefaultedHttpParams>(jobj)
		{
		}

		local_ref< org::apache::http::params::HttpParams > copy();
		local_ref< java::lang::Object > getParameter(local_ref< java::lang::String > const&);
		cpp_boolean removeParameter(local_ref< java::lang::String > const&);
		local_ref< org::apache::http::params::HttpParams > setParameter(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&);
		local_ref< org::apache::http::params::HttpParams > getDefaults();
	}; //class DefaultedHttpParams

} //namespace params
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PARAMS_DEFAULTEDHTTPPARAMS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PARAMS_DEFAULTEDHTTPPARAMS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_PARAMS_DEFAULTEDHTTPPARAMS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::apache::http::params::DefaultedHttpParams > create< org::apache::http::params::DefaultedHttpParams>(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< org::apache::http::params::HttpParams > const &a1)
{
	return local_ref< org::apache::http::params::DefaultedHttpParams >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::params::DefaultedHttpParams::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::params::DefaultedHttpParams::J2CPP_CLASS_NAME, org::apache::http::params::DefaultedHttpParams::J2CPP_METHOD_NAME(0), org::apache::http::params::DefaultedHttpParams::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::DefaultedHttpParams::copy()
{
	return local_ref< org::apache::http::params::HttpParams >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::Object > org::apache::http::params::DefaultedHttpParams::getParameter(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean org::apache::http::params::DefaultedHttpParams::removeParameter(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::DefaultedHttpParams::setParameter(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return local_ref< org::apache::http::params::HttpParams >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< org::apache::http::params::HttpParams > org::apache::http::params::DefaultedHttpParams::getDefaults()
{
	return local_ref< org::apache::http::params::HttpParams >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::params::DefaultedHttpParams,"org/apache/http/params/DefaultedHttpParams")
J2CPP_DEFINE_METHOD(org::apache::http::params::DefaultedHttpParams,0,"<init>","(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V")
J2CPP_DEFINE_METHOD(org::apache::http::params::DefaultedHttpParams,1,"copy","()Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::DefaultedHttpParams,2,"getParameter","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::params::DefaultedHttpParams,3,"removeParameter","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::params::DefaultedHttpParams,4,"setParameter","(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;")
J2CPP_DEFINE_METHOD(org::apache::http::params::DefaultedHttpParams,5,"getDefaults","()Lorg/apache/http/params/HttpParams;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PARAMS_DEFAULTEDHTTPPARAMS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
