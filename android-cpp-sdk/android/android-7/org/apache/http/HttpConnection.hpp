/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.HttpConnection
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { class HttpConnectionMetrics; } } } }


#include <org/apache/http/HttpConnectionMetrics.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http {

	class HttpConnection;
	class HttpConnection
		: public cpp_object<HttpConnection>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		HttpConnection(jobject jobj)
		: cpp_object<HttpConnection>(jobj)
		{
		}

		void close();
		cpp_boolean isOpen();
		cpp_boolean isStale();
		void setSocketTimeout(cpp_int const&);
		cpp_int getSocketTimeout();
		void shutdown();
		local_ref< org::apache::http::HttpConnectionMetrics > getMetrics();
	}; //class HttpConnection

} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_IMPL

namespace j2cpp {


void org::apache::http::HttpConnection::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean org::apache::http::HttpConnection::isOpen()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_boolean org::apache::http::HttpConnection::isStale()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void org::apache::http::HttpConnection::setSocketTimeout(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int org::apache::http::HttpConnection::getSocketTimeout()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void org::apache::http::HttpConnection::shutdown()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< org::apache::http::HttpConnectionMetrics > org::apache::http::HttpConnection::getMetrics()
{
	return local_ref< org::apache::http::HttpConnectionMetrics >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::HttpConnection,"org/apache/http/HttpConnection")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,0,"close","()V")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,1,"isOpen","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,2,"isStale","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,3,"setSocketTimeout","(I)V")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,4,"getSocketTimeout","()I")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,5,"shutdown","()V")
J2CPP_DEFINE_METHOD(org::apache::http::HttpConnection,6,"getMetrics","()Lorg/apache/http/HttpConnectionMetrics;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_HTTPCONNECTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
