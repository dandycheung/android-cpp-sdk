/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.conn.params.ConnManagerParams
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_PARAMS_CONNMANAGERPARAMS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CONN_PARAMS_CONNMANAGERPARAMS_HPP_DECL


namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { namespace params { class ConnPerRoute; } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace params { class HttpParams; } } } } }


#include <org/apache/http/conn/params/ConnPerRoute.hpp>
#include <org/apache/http/params/HttpParams.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace conn { namespace params {

	class ConnManagerParams;
	class ConnManagerParams
		: public cpp_object<ConnManagerParams>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_FIELD(0)

		ConnManagerParams(jobject jobj)
		: cpp_object<ConnManagerParams>(jobj)
		{
		}

		static cpp_long getTimeout(local_ref< org::apache::http::params::HttpParams > const&);
		static void setTimeout(local_ref< org::apache::http::params::HttpParams > const&, cpp_long const&);
		static void setMaxConnectionsPerRoute(local_ref< org::apache::http::params::HttpParams > const&, local_ref< org::apache::http::conn::params::ConnPerRoute > const&);
		static local_ref< org::apache::http::conn::params::ConnPerRoute > getMaxConnectionsPerRoute(local_ref< org::apache::http::params::HttpParams > const&);
		static void setMaxTotalConnections(local_ref< org::apache::http::params::HttpParams > const&, cpp_int const&);
		static cpp_int getMaxTotalConnections(local_ref< org::apache::http::params::HttpParams > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > DEFAULT_MAX_TOTAL_CONNECTIONS;
	}; //class ConnManagerParams

} //namespace params
} //namespace conn
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_PARAMS_CONNMANAGERPARAMS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_PARAMS_CONNMANAGERPARAMS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CONN_PARAMS_CONNMANAGERPARAMS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::apache::http::conn::params::ConnManagerParams > create< org::apache::http::conn::params::ConnManagerParams>()
{
	return local_ref< org::apache::http::conn::params::ConnManagerParams >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::conn::params::ConnManagerParams::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::conn::params::ConnManagerParams::J2CPP_CLASS_NAME, org::apache::http::conn::params::ConnManagerParams::J2CPP_METHOD_NAME(0), org::apache::http::conn::params::ConnManagerParams::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_long org::apache::http::conn::params::ConnManagerParams::getTimeout(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallStaticLongMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

void org::apache::http::conn::params::ConnManagerParams::setTimeout(local_ref< org::apache::http::params::HttpParams > const &a0, cpp_long const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void org::apache::http::conn::params::ConnManagerParams::setMaxConnectionsPerRoute(local_ref< org::apache::http::params::HttpParams > const &a0, local_ref< org::apache::http::conn::params::ConnPerRoute > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< org::apache::http::conn::params::ConnPerRoute > org::apache::http::conn::params::ConnManagerParams::getMaxConnectionsPerRoute(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return local_ref< org::apache::http::conn::params::ConnPerRoute >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype()
		)
	);
}

void org::apache::http::conn::params::ConnManagerParams::setMaxTotalConnections(local_ref< org::apache::http::params::HttpParams > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int org::apache::http::conn::params::ConnManagerParams::getMaxTotalConnections(local_ref< org::apache::http::params::HttpParams > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}


static_field<
	org::apache::http::conn::params::ConnManagerParams::J2CPP_CLASS_NAME,
	org::apache::http::conn::params::ConnManagerParams::J2CPP_FIELD_NAME(0),
	org::apache::http::conn::params::ConnManagerParams::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> org::apache::http::conn::params::ConnManagerParams::DEFAULT_MAX_TOTAL_CONNECTIONS;


J2CPP_DEFINE_CLASS(org::apache::http::conn::params::ConnManagerParams,"org/apache/http/conn/params/ConnManagerParams")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,1,"getTimeout","(Lorg/apache/http/params/HttpParams;)J")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,2,"setTimeout","(Lorg/apache/http/params/HttpParams;J)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,3,"setMaxConnectionsPerRoute","(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/params/ConnPerRoute;)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,4,"getMaxConnectionsPerRoute","(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/params/ConnPerRoute;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,5,"setMaxTotalConnections","(Lorg/apache/http/params/HttpParams;I)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::params::ConnManagerParams,6,"getMaxTotalConnections","(Lorg/apache/http/params/HttpParams;)I")
J2CPP_DEFINE_FIELD(org::apache::http::conn::params::ConnManagerParams,0,"DEFAULT_MAX_TOTAL_CONNECTIONS","I")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_PARAMS_CONNMANAGERPARAMS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
