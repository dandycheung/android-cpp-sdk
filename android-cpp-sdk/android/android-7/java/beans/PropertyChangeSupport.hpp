/*================================================================================
  code generated by: java2cpp
  class: java.beans.PropertyChangeSupport
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_BEANS_PROPERTYCHANGESUPPORT_HPP_DECL
#define J2CPP_JAVA_BEANS_PROPERTYCHANGESUPPORT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace beans { class PropertyChangeEvent; } } }
namespace j2cpp { namespace java { namespace beans { class PropertyChangeListener; } } }


#include <java/beans/PropertyChangeEvent.hpp>
#include <java/beans/PropertyChangeListener.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace beans {

	class PropertyChangeSupport;
	class PropertyChangeSupport
		: public cpp_object<PropertyChangeSupport>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)

		PropertyChangeSupport(jobject jobj)
		: cpp_object<PropertyChangeSupport>(jobj)
		{
		}

		void firePropertyChange(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&, local_ref< java::lang::Object > const&);
		void fireIndexedPropertyChange(local_ref< java::lang::String > const&, cpp_int const&, local_ref< java::lang::Object > const&, local_ref< java::lang::Object > const&);
		void removePropertyChangeListener(local_ref< java::lang::String > const&, local_ref< java::beans::PropertyChangeListener > const&);
		void addPropertyChangeListener(local_ref< java::lang::String > const&, local_ref< java::beans::PropertyChangeListener > const&);
		local_ref< cpp_object_array<java::beans::PropertyChangeListener, 1> > getPropertyChangeListeners(local_ref< java::lang::String > const&);
		void firePropertyChange(local_ref< java::lang::String > const&, cpp_boolean const&, cpp_boolean const&);
		void fireIndexedPropertyChange(local_ref< java::lang::String > const&, cpp_int const&, cpp_boolean const&, cpp_boolean const&);
		void firePropertyChange(local_ref< java::lang::String > const&, cpp_int const&, cpp_int const&);
		void fireIndexedPropertyChange(local_ref< java::lang::String > const&, cpp_int const&, cpp_int const&, cpp_int const&);
		cpp_boolean hasListeners(local_ref< java::lang::String > const&);
		void removePropertyChangeListener(local_ref< java::beans::PropertyChangeListener > const&);
		void addPropertyChangeListener(local_ref< java::beans::PropertyChangeListener > const&);
		local_ref< cpp_object_array<java::beans::PropertyChangeListener, 1> > getPropertyChangeListeners();
		void firePropertyChange(local_ref< java::beans::PropertyChangeEvent > const&);
	}; //class PropertyChangeSupport

} //namespace beans
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_BEANS_PROPERTYCHANGESUPPORT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_BEANS_PROPERTYCHANGESUPPORT_HPP_IMPL
#define J2CPP_JAVA_BEANS_PROPERTYCHANGESUPPORT_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::beans::PropertyChangeSupport > create< java::beans::PropertyChangeSupport>(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::beans::PropertyChangeSupport >(
		environment::get().get_jenv()->NewObject(
			get_class<java::beans::PropertyChangeSupport::J2CPP_CLASS_NAME>(),
			get_method_id<java::beans::PropertyChangeSupport::J2CPP_CLASS_NAME, java::beans::PropertyChangeSupport::J2CPP_METHOD_NAME(0), java::beans::PropertyChangeSupport::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::firePropertyChange(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1, local_ref< java::lang::Object > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::fireIndexedPropertyChange(local_ref< java::lang::String > const &a0, cpp_int const &a1, local_ref< java::lang::Object > const &a2, local_ref< java::lang::Object > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::removePropertyChangeListener(local_ref< java::lang::String > const &a0, local_ref< java::beans::PropertyChangeListener > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::addPropertyChangeListener(local_ref< java::lang::String > const &a0, local_ref< java::beans::PropertyChangeListener > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::beans::PropertyChangeListener, 1> > java::beans::PropertyChangeSupport::getPropertyChangeListeners(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_object_array<java::beans::PropertyChangeListener, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::firePropertyChange(local_ref< java::lang::String > const &a0, cpp_boolean const &a1, cpp_boolean const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::fireIndexedPropertyChange(local_ref< java::lang::String > const &a0, cpp_int const &a1, cpp_boolean const &a2, cpp_boolean const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::firePropertyChange(local_ref< java::lang::String > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::fireIndexedPropertyChange(local_ref< java::lang::String > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_boolean java::beans::PropertyChangeSupport::hasListeners(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::removePropertyChangeListener(local_ref< java::beans::PropertyChangeListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

void java::beans::PropertyChangeSupport::addPropertyChangeListener(local_ref< java::beans::PropertyChangeListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::beans::PropertyChangeListener, 1> > java::beans::PropertyChangeSupport::getPropertyChangeListeners()
{
	return local_ref< cpp_object_array<java::beans::PropertyChangeListener, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

void java::beans::PropertyChangeSupport::firePropertyChange(local_ref< java::beans::PropertyChangeEvent > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::beans::PropertyChangeSupport,"java/beans/PropertyChangeSupport")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,0,"<init>","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,1,"firePropertyChange","(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,2,"fireIndexedPropertyChange","(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,3,"removePropertyChangeListener","(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,4,"addPropertyChangeListener","(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,5,"getPropertyChangeListeners","(Ljava/lang/String;)[java.beans.PropertyChangeListener")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,6,"firePropertyChange","(Ljava/lang/String;ZZ)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,7,"fireIndexedPropertyChange","(Ljava/lang/String;IZZ)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,8,"firePropertyChange","(Ljava/lang/String;II)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,9,"fireIndexedPropertyChange","(Ljava/lang/String;III)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,10,"hasListeners","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,11,"removePropertyChangeListener","(Ljava/beans/PropertyChangeListener;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,12,"addPropertyChangeListener","(Ljava/beans/PropertyChangeListener;)V")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,13,"getPropertyChangeListeners","()[java.beans.PropertyChangeListener")
J2CPP_DEFINE_METHOD(java::beans::PropertyChangeSupport,14,"firePropertyChange","(Ljava/beans/PropertyChangeEvent;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_BEANS_PROPERTYCHANGESUPPORT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
