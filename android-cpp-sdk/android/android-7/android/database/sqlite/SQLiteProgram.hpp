/*================================================================================
  code generated by: java2cpp
  class: android.database.sqlite.SQLiteProgram
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_DECL
#define J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace database { namespace sqlite {

	class SQLiteProgram;
	class SQLiteProgram
		: public cpp_object<SQLiteProgram>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		SQLiteProgram(jobject jobj)
		: cpp_object<SQLiteProgram>(jobj)
		{
		}

		cpp_int getUniqueId();
		void bindNull(cpp_int const&);
		void bindLong(cpp_int const&, cpp_long const&);
		void bindDouble(cpp_int const&, cpp_double const&);
		void bindString(cpp_int const&, local_ref< java::lang::String > const&);
		void bindBlob(cpp_int const&, local_ref< cpp_byte_array<1> > const&);
		void clearBindings();
		void close();

	}; //class SQLiteProgram

} //namespace sqlite
} //namespace database
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::database::sqlite::SQLiteProgram > create< android::database::sqlite::SQLiteProgram>()
{
	return local_ref< android::database::sqlite::SQLiteProgram >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::sqlite::SQLiteProgram::J2CPP_CLASS_NAME, android::database::sqlite::SQLiteProgram::J2CPP_METHOD_NAME(0), android::database::sqlite::SQLiteProgram::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}



cpp_int android::database::sqlite::SQLiteProgram::getUniqueId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}


void android::database::sqlite::SQLiteProgram::bindNull(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteProgram::bindLong(cpp_int const &a0, cpp_long const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteProgram::bindDouble(cpp_int const &a0, cpp_double const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteProgram::bindString(cpp_int const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteProgram::bindBlob(cpp_int const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteProgram::clearBindings()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

void android::database::sqlite::SQLiteProgram::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}











J2CPP_DEFINE_CLASS(android::database::sqlite::SQLiteProgram,"android/database/sqlite/SQLiteProgram")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,1,"onAllReferencesReleased","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,2,"onAllReferencesReleasedFromContainer","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,3,"getUniqueId","()I")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,4,"compile","(Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,5,"bindNull","(I)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,6,"bindLong","(IJ)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,7,"bindDouble","(ID)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,8,"bindString","(ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,9,"bindBlob","(I[B)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,10,"clearBindings","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,11,"close","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,12,"finalize","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,13,"native_compile","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,14,"native_finalize","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,15,"native_bind_null","(I)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,16,"native_bind_long","(IJ)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,17,"native_bind_double","(ID)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,18,"native_bind_string","(ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteProgram,19,"native_bind_blob","(I[B)V")
J2CPP_DEFINE_FIELD(android::database::sqlite::SQLiteProgram,0,"mDatabase","Landroid/database/sqlite/SQLiteDatabase;")
J2CPP_DEFINE_FIELD(android::database::sqlite::SQLiteProgram,1,"nHandle","I")
J2CPP_DEFINE_FIELD(android::database::sqlite::SQLiteProgram,2,"nStatement","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_SQLITE_SQLITEPROGRAM_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
