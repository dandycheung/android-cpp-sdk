/*================================================================================
  code generated by: java2cpp
  class: android.graphics.Canvas
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_CANVAS_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_CANVAS_HPP_DECL


namespace j2cpp { namespace javax { namespace microedition { namespace khronos { namespace opengles { class GL; } } } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace graphics { class Picture; } } }
namespace j2cpp { namespace android { namespace graphics { class Paint; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Canvas_ { class EdgeType; } } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace graphics { class DrawFilter; } } }
namespace j2cpp { namespace android { namespace graphics { class Matrix; } } }
namespace j2cpp { namespace android { namespace graphics { class Region; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Canvas_ { class VertexMode; } } } }
namespace j2cpp { namespace android { namespace graphics { class Path; } } }
namespace j2cpp { namespace android { namespace graphics { class RectF; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { namespace PorterDuff_ { class Mode; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace Region_ { class Op; } } } }


#include <android/graphics/Bitmap.hpp>
#include <android/graphics/Canvas.hpp>
#include <android/graphics/DrawFilter.hpp>
#include <android/graphics/Matrix.hpp>
#include <android/graphics/Paint.hpp>
#include <android/graphics/Path.hpp>
#include <android/graphics/Picture.hpp>
#include <android/graphics/PorterDuff.hpp>
#include <android/graphics/Rect.hpp>
#include <android/graphics/RectF.hpp>
#include <android/graphics/Region.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/String.hpp>
#include <javax/microedition/khronos/opengles/GL.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Canvas;
	namespace Canvas_ {

		class EdgeType;
		class EdgeType
			: public cpp_object<EdgeType>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)

			EdgeType(jobject jobj)
			: cpp_object<EdgeType>(jobj)
			{
			}

			static local_ref< cpp_object_array<android::graphics::Canvas_::EdgeType, 1> > values();
			static local_ref< android::graphics::Canvas_::EdgeType > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Canvas_::EdgeType > > AA;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Canvas_::EdgeType > > BW;
		}; //class EdgeType

		class VertexMode;
		class VertexMode
			: public cpp_object<VertexMode>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			VertexMode(jobject jobj)
			: cpp_object<VertexMode>(jobj)
			{
			}

			static local_ref< cpp_object_array<android::graphics::Canvas_::VertexMode, 1> > values();
			static local_ref< android::graphics::Canvas_::VertexMode > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Canvas_::VertexMode > > TRIANGLES;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Canvas_::VertexMode > > TRIANGLE_FAN;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::graphics::Canvas_::VertexMode > > TRIANGLE_STRIP;
		}; //class VertexMode

	} //namespace Canvas_

	class Canvas
		: public cpp_object<Canvas>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)

		typedef Canvas_::EdgeType EdgeType;
		typedef Canvas_::VertexMode VertexMode;

		Canvas(jobject jobj)
		: cpp_object<Canvas>(jobj)
		{
		}

		local_ref< javax::microedition::khronos::opengles::GL > getGL();
		static void freeGlCaches();
		void setBitmap(local_ref< android::graphics::Bitmap > const&);
		void setViewport(cpp_int const&, cpp_int const&);
		cpp_boolean isOpaque();
		cpp_int getWidth();
		cpp_int getHeight();
		cpp_int getDensity();
		void setDensity(cpp_int const&);
		cpp_int save();
		cpp_int save(cpp_int const&);
		cpp_int saveLayer(local_ref< android::graphics::RectF > const&, local_ref< android::graphics::Paint > const&, cpp_int const&);
		cpp_int saveLayer(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&, cpp_int const&);
		cpp_int saveLayerAlpha(local_ref< android::graphics::RectF > const&, cpp_int const&, cpp_int const&);
		cpp_int saveLayerAlpha(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_int const&);
		void restore();
		cpp_int getSaveCount();
		void restoreToCount(cpp_int const&);
		void translate(cpp_float const&, cpp_float const&);
		void scale(cpp_float const&, cpp_float const&);
		void scale(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		void rotate(cpp_float const&);
		void rotate(cpp_float const&, cpp_float const&, cpp_float const&);
		void skew(cpp_float const&, cpp_float const&);
		void concat(local_ref< android::graphics::Matrix > const&);
		void setMatrix(local_ref< android::graphics::Matrix > const&);
		void getMatrix(local_ref< android::graphics::Matrix > const&);
		local_ref< android::graphics::Matrix > getMatrix();
		cpp_boolean clipRect(local_ref< android::graphics::RectF > const&, local_ref< android::graphics::Region_::Op > const&);
		cpp_boolean clipRect(local_ref< android::graphics::Rect > const&, local_ref< android::graphics::Region_::Op > const&);
		cpp_boolean clipRect(local_ref< android::graphics::RectF > const&);
		cpp_boolean clipRect(local_ref< android::graphics::Rect > const&);
		cpp_boolean clipRect(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Region_::Op > const&);
		cpp_boolean clipRect(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		cpp_boolean clipRect(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		cpp_boolean clipPath(local_ref< android::graphics::Path > const&, local_ref< android::graphics::Region_::Op > const&);
		cpp_boolean clipPath(local_ref< android::graphics::Path > const&);
		cpp_boolean clipRegion(local_ref< android::graphics::Region > const&, local_ref< android::graphics::Region_::Op > const&);
		cpp_boolean clipRegion(local_ref< android::graphics::Region > const&);
		local_ref< android::graphics::DrawFilter > getDrawFilter();
		void setDrawFilter(local_ref< android::graphics::DrawFilter > const&);
		cpp_boolean quickReject(local_ref< android::graphics::RectF > const&, local_ref< android::graphics::Canvas_::EdgeType > const&);
		cpp_boolean quickReject(local_ref< android::graphics::Path > const&, local_ref< android::graphics::Canvas_::EdgeType > const&);
		cpp_boolean quickReject(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Canvas_::EdgeType > const&);
		cpp_boolean getClipBounds(local_ref< android::graphics::Rect > const&);
		local_ref< android::graphics::Rect > getClipBounds();
		void drawRGB(cpp_int const&, cpp_int const&, cpp_int const&);
		void drawARGB(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void drawColor(cpp_int const&);
		void drawColor(cpp_int const&, local_ref< android::graphics::PorterDuff_::Mode > const&);
		void drawPaint(local_ref< android::graphics::Paint > const&);
		void drawPoints(local_ref< cpp_float_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Paint > const&);
		void drawPoints(local_ref< cpp_float_array<1> > const&, local_ref< android::graphics::Paint > const&);
		void drawPoint(cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawLine(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawLines(local_ref< cpp_float_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Paint > const&);
		void drawLines(local_ref< cpp_float_array<1> > const&, local_ref< android::graphics::Paint > const&);
		void drawRect(local_ref< android::graphics::RectF > const&, local_ref< android::graphics::Paint > const&);
		void drawRect(local_ref< android::graphics::Rect > const&, local_ref< android::graphics::Paint > const&);
		void drawRect(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawOval(local_ref< android::graphics::RectF > const&, local_ref< android::graphics::Paint > const&);
		void drawCircle(cpp_float const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawArc(local_ref< android::graphics::RectF > const&, cpp_float const&, cpp_float const&, cpp_boolean const&, local_ref< android::graphics::Paint > const&);
		void drawRoundRect(local_ref< android::graphics::RectF > const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawPath(local_ref< android::graphics::Path > const&, local_ref< android::graphics::Paint > const&);
		void drawBitmap(local_ref< android::graphics::Bitmap > const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawBitmap(local_ref< android::graphics::Bitmap > const&, local_ref< android::graphics::Rect > const&, local_ref< android::graphics::RectF > const&, local_ref< android::graphics::Paint > const&);
		void drawBitmap(local_ref< android::graphics::Bitmap > const&, local_ref< android::graphics::Rect > const&, local_ref< android::graphics::Rect > const&, local_ref< android::graphics::Paint > const&);
		void drawBitmap(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_int const&, cpp_boolean const&, local_ref< android::graphics::Paint > const&);
		void drawBitmap(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_boolean const&, local_ref< android::graphics::Paint > const&);
		void drawBitmap(local_ref< android::graphics::Bitmap > const&, local_ref< android::graphics::Matrix > const&, local_ref< android::graphics::Paint > const&);
		void drawBitmapMesh(local_ref< android::graphics::Bitmap > const&, cpp_int const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_int_array<1> > const&, cpp_int const&, local_ref< android::graphics::Paint > const&);
		void drawVertices(local_ref< android::graphics::Canvas_::VertexMode > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_int_array<1> > const&, cpp_int const&, local_ref< cpp_short_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Paint > const&);
		void drawText(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawText(local_ref< java::lang::String > const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawText(local_ref< java::lang::String > const&, cpp_int const&, cpp_int const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawText(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawPosText(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, local_ref< android::graphics::Paint > const&);
		void drawPosText(local_ref< java::lang::String > const&, local_ref< cpp_float_array<1> > const&, local_ref< android::graphics::Paint > const&);
		void drawTextOnPath(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Path > const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawTextOnPath(local_ref< java::lang::String > const&, local_ref< android::graphics::Path > const&, cpp_float const&, cpp_float const&, local_ref< android::graphics::Paint > const&);
		void drawPicture(local_ref< android::graphics::Picture > const&);
		void drawPicture(local_ref< android::graphics::Picture > const&, local_ref< android::graphics::RectF > const&);
		void drawPicture(local_ref< android::graphics::Picture > const&, local_ref< android::graphics::Rect > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > MATRIX_SAVE_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > CLIP_SAVE_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > HAS_ALPHA_LAYER_SAVE_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > FULL_COLOR_LAYER_SAVE_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > CLIP_TO_LAYER_SAVE_FLAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > ALL_SAVE_FLAG;
	}; //class Canvas

} //namespace graphics
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_CANVAS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_CANVAS_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_CANVAS_HPP_IMPL

namespace j2cpp {



local_ref< cpp_object_array<android::graphics::Canvas_::EdgeType, 1> > android::graphics::Canvas_::EdgeType::values()
{
	return local_ref< cpp_object_array<android::graphics::Canvas_::EdgeType, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< android::graphics::Canvas_::EdgeType > android::graphics::Canvas_::EdgeType::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::graphics::Canvas_::EdgeType >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::Canvas_::EdgeType > create< android::graphics::Canvas_::EdgeType>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< android::graphics::Canvas_::EdgeType >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Canvas_::EdgeType::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Canvas_::EdgeType::J2CPP_CLASS_NAME, android::graphics::Canvas_::EdgeType::J2CPP_METHOD_NAME(2), android::graphics::Canvas_::EdgeType::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::graphics::Canvas_::EdgeType::J2CPP_CLASS_NAME,
	android::graphics::Canvas_::EdgeType::J2CPP_FIELD_NAME(0),
	android::graphics::Canvas_::EdgeType::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Canvas_::EdgeType >
> android::graphics::Canvas_::EdgeType::AA;

static_field<
	android::graphics::Canvas_::EdgeType::J2CPP_CLASS_NAME,
	android::graphics::Canvas_::EdgeType::J2CPP_FIELD_NAME(1),
	android::graphics::Canvas_::EdgeType::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Canvas_::EdgeType >
> android::graphics::Canvas_::EdgeType::BW;


J2CPP_DEFINE_CLASS(android::graphics::Canvas_::EdgeType,"android/graphics/Canvas$EdgeType")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::EdgeType,0,"values","()[android.graphics.Canvas.EdgeType")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::EdgeType,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Canvas$EdgeType;")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::EdgeType,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::EdgeType,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::EdgeType,0,"AA","Landroid/graphics/Canvas$EdgeType;")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::EdgeType,1,"BW","Landroid/graphics/Canvas$EdgeType;")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::EdgeType,2,"$VALUES","[android.graphics.Canvas.EdgeType")

local_ref< cpp_object_array<android::graphics::Canvas_::VertexMode, 1> > android::graphics::Canvas_::VertexMode::values()
{
	return local_ref< cpp_object_array<android::graphics::Canvas_::VertexMode, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< android::graphics::Canvas_::VertexMode > android::graphics::Canvas_::VertexMode::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::graphics::Canvas_::VertexMode >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::Canvas_::VertexMode > create< android::graphics::Canvas_::VertexMode>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< android::graphics::Canvas_::VertexMode >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Canvas_::VertexMode::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Canvas_::VertexMode::J2CPP_CLASS_NAME, android::graphics::Canvas_::VertexMode::J2CPP_METHOD_NAME(2), android::graphics::Canvas_::VertexMode::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::graphics::Canvas_::VertexMode::J2CPP_CLASS_NAME,
	android::graphics::Canvas_::VertexMode::J2CPP_FIELD_NAME(0),
	android::graphics::Canvas_::VertexMode::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Canvas_::VertexMode >
> android::graphics::Canvas_::VertexMode::TRIANGLES;

static_field<
	android::graphics::Canvas_::VertexMode::J2CPP_CLASS_NAME,
	android::graphics::Canvas_::VertexMode::J2CPP_FIELD_NAME(1),
	android::graphics::Canvas_::VertexMode::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Canvas_::VertexMode >
> android::graphics::Canvas_::VertexMode::TRIANGLE_FAN;

static_field<
	android::graphics::Canvas_::VertexMode::J2CPP_CLASS_NAME,
	android::graphics::Canvas_::VertexMode::J2CPP_FIELD_NAME(2),
	android::graphics::Canvas_::VertexMode::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::graphics::Canvas_::VertexMode >
> android::graphics::Canvas_::VertexMode::TRIANGLE_STRIP;


J2CPP_DEFINE_CLASS(android::graphics::Canvas_::VertexMode,"android/graphics/Canvas$VertexMode")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::VertexMode,0,"values","()[android.graphics.Canvas.VertexMode")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::VertexMode,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Canvas$VertexMode;")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::VertexMode,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas_::VertexMode,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::VertexMode,0,"TRIANGLES","Landroid/graphics/Canvas$VertexMode;")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::VertexMode,1,"TRIANGLE_FAN","Landroid/graphics/Canvas$VertexMode;")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::VertexMode,2,"TRIANGLE_STRIP","Landroid/graphics/Canvas$VertexMode;")
J2CPP_DEFINE_FIELD(android::graphics::Canvas_::VertexMode,3,"$VALUES","[android.graphics.Canvas.VertexMode")


template <>
local_ref< android::graphics::Canvas > create< android::graphics::Canvas>()
{
	return local_ref< android::graphics::Canvas >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Canvas::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Canvas::J2CPP_CLASS_NAME, android::graphics::Canvas::J2CPP_METHOD_NAME(0), android::graphics::Canvas::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< android::graphics::Canvas > create< android::graphics::Canvas>(local_ref< android::graphics::Bitmap > const &a0)
{
	return local_ref< android::graphics::Canvas >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Canvas::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Canvas::J2CPP_CLASS_NAME, android::graphics::Canvas::J2CPP_METHOD_NAME(1), android::graphics::Canvas::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::Canvas > create< android::graphics::Canvas>(local_ref< javax::microedition::khronos::opengles::GL > const &a0)
{
	return local_ref< android::graphics::Canvas >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Canvas::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Canvas::J2CPP_CLASS_NAME, android::graphics::Canvas::J2CPP_METHOD_NAME(2), android::graphics::Canvas::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< javax::microedition::khronos::opengles::GL > android::graphics::Canvas::getGL()
{
	return local_ref< javax::microedition::khronos::opengles::GL >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::graphics::Canvas::freeGlCaches()
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>()
		)
	);
}

void android::graphics::Canvas::setBitmap(local_ref< android::graphics::Bitmap > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::setViewport(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::isOpaque()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_int android::graphics::Canvas::getWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_int android::graphics::Canvas::getHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

cpp_int android::graphics::Canvas::getDensity()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

void android::graphics::Canvas::setDensity(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Canvas::save()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_int android::graphics::Canvas::save(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Canvas::saveLayer(local_ref< android::graphics::RectF > const &a0, local_ref< android::graphics::Paint > const &a1, cpp_int const &a2)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::graphics::Canvas::saveLayer(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, local_ref< android::graphics::Paint > const &a4, cpp_int const &a5)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

cpp_int android::graphics::Canvas::saveLayerAlpha(local_ref< android::graphics::RectF > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::graphics::Canvas::saveLayerAlpha(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::graphics::Canvas::restore()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_int android::graphics::Canvas::getSaveCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

void android::graphics::Canvas::restoreToCount(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::translate(cpp_float const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::scale(cpp_float const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::scale(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::rotate(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::rotate(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Canvas::skew(cpp_float const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::concat(local_ref< android::graphics::Matrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::setMatrix(local_ref< android::graphics::Matrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::getMatrix(local_ref< android::graphics::Matrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::graphics::Matrix > android::graphics::Canvas::getMatrix()
{
	return local_ref< android::graphics::Matrix >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(local_ref< android::graphics::RectF > const &a0, local_ref< android::graphics::Region_::Op > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(local_ref< android::graphics::Rect > const &a0, local_ref< android::graphics::Region_::Op > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(local_ref< android::graphics::RectF > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(local_ref< android::graphics::Rect > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, local_ref< android::graphics::Region_::Op > const &a4)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRect(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipPath(local_ref< android::graphics::Path > const &a0, local_ref< android::graphics::Region_::Op > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipPath(local_ref< android::graphics::Path > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRegion(local_ref< android::graphics::Region > const &a0, local_ref< android::graphics::Region_::Op > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(40), J2CPP_METHOD_SIGNATURE(40), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::clipRegion(local_ref< android::graphics::Region > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(41), J2CPP_METHOD_SIGNATURE(41), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::graphics::DrawFilter > android::graphics::Canvas::getDrawFilter()
{
	return local_ref< android::graphics::DrawFilter >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(42), J2CPP_METHOD_SIGNATURE(42), false>()
		)
	);
}

void android::graphics::Canvas::setDrawFilter(local_ref< android::graphics::DrawFilter > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(43), J2CPP_METHOD_SIGNATURE(43), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::quickReject(local_ref< android::graphics::RectF > const &a0, local_ref< android::graphics::Canvas_::EdgeType > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(44), J2CPP_METHOD_SIGNATURE(44), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::quickReject(local_ref< android::graphics::Path > const &a0, local_ref< android::graphics::Canvas_::EdgeType > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(45), J2CPP_METHOD_SIGNATURE(45), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::quickReject(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, local_ref< android::graphics::Canvas_::EdgeType > const &a4)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(46), J2CPP_METHOD_SIGNATURE(46), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Canvas::getClipBounds(local_ref< android::graphics::Rect > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(47), J2CPP_METHOD_SIGNATURE(47), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::graphics::Rect > android::graphics::Canvas::getClipBounds()
{
	return local_ref< android::graphics::Rect >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), false>()
		)
	);
}

void android::graphics::Canvas::drawRGB(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawARGB(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawColor(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(51), J2CPP_METHOD_SIGNATURE(51), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawColor(cpp_int const &a0, local_ref< android::graphics::PorterDuff_::Mode > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(52), J2CPP_METHOD_SIGNATURE(52), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPaint(local_ref< android::graphics::Paint > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(53), J2CPP_METHOD_SIGNATURE(53), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPoints(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPoints(local_ref< cpp_float_array<1> > const &a0, local_ref< android::graphics::Paint > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPoint(cpp_float const &a0, cpp_float const &a1, local_ref< android::graphics::Paint > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawLine(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, local_ref< android::graphics::Paint > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawLines(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawLines(local_ref< cpp_float_array<1> > const &a0, local_ref< android::graphics::Paint > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawRect(local_ref< android::graphics::RectF > const &a0, local_ref< android::graphics::Paint > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(60), J2CPP_METHOD_SIGNATURE(60), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawRect(local_ref< android::graphics::Rect > const &a0, local_ref< android::graphics::Paint > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawRect(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, local_ref< android::graphics::Paint > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(62), J2CPP_METHOD_SIGNATURE(62), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawOval(local_ref< android::graphics::RectF > const &a0, local_ref< android::graphics::Paint > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(63), J2CPP_METHOD_SIGNATURE(63), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawCircle(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(64), J2CPP_METHOD_SIGNATURE(64), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawArc(local_ref< android::graphics::RectF > const &a0, cpp_float const &a1, cpp_float const &a2, cpp_boolean const &a3, local_ref< android::graphics::Paint > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(65), J2CPP_METHOD_SIGNATURE(65), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawRoundRect(local_ref< android::graphics::RectF > const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPath(local_ref< android::graphics::Path > const &a0, local_ref< android::graphics::Paint > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmap(local_ref< android::graphics::Bitmap > const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmap(local_ref< android::graphics::Bitmap > const &a0, local_ref< android::graphics::Rect > const &a1, local_ref< android::graphics::RectF > const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmap(local_ref< android::graphics::Bitmap > const &a0, local_ref< android::graphics::Rect > const &a1, local_ref< android::graphics::Rect > const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmap(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_float const &a3, cpp_float const &a4, cpp_int const &a5, cpp_int const &a6, cpp_boolean const &a7, local_ref< android::graphics::Paint > const &a8)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(71), J2CPP_METHOD_SIGNATURE(71), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmap(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5, cpp_int const &a6, cpp_boolean const &a7, local_ref< android::graphics::Paint > const &a8)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(72), J2CPP_METHOD_SIGNATURE(72), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmap(local_ref< android::graphics::Bitmap > const &a0, local_ref< android::graphics::Matrix > const &a1, local_ref< android::graphics::Paint > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(73), J2CPP_METHOD_SIGNATURE(73), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawBitmapMesh(local_ref< android::graphics::Bitmap > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< cpp_float_array<1> > const &a3, cpp_int const &a4, local_ref< cpp_int_array<1> > const &a5, cpp_int const &a6, local_ref< android::graphics::Paint > const &a7)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(74), J2CPP_METHOD_SIGNATURE(74), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawVertices(local_ref< android::graphics::Canvas_::VertexMode > const &a0, cpp_int const &a1, local_ref< cpp_float_array<1> > const &a2, cpp_int const &a3, local_ref< cpp_float_array<1> > const &a4, cpp_int const &a5, local_ref< cpp_int_array<1> > const &a6, cpp_int const &a7, local_ref< cpp_short_array<1> > const &a8, cpp_int const &a9, cpp_int const &a10, local_ref< android::graphics::Paint > const &a11)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(75), J2CPP_METHOD_SIGNATURE(75), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype(), a11.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawText(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_float const &a3, cpp_float const &a4, local_ref< android::graphics::Paint > const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(76), J2CPP_METHOD_SIGNATURE(76), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawText(local_ref< java::lang::String > const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< android::graphics::Paint > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(77), J2CPP_METHOD_SIGNATURE(77), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawText(local_ref< java::lang::String > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_float const &a3, cpp_float const &a4, local_ref< android::graphics::Paint > const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(78), J2CPP_METHOD_SIGNATURE(78), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawText(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_float const &a3, cpp_float const &a4, local_ref< android::graphics::Paint > const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(79), J2CPP_METHOD_SIGNATURE(79), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPosText(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< cpp_float_array<1> > const &a3, local_ref< android::graphics::Paint > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(80), J2CPP_METHOD_SIGNATURE(80), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPosText(local_ref< java::lang::String > const &a0, local_ref< cpp_float_array<1> > const &a1, local_ref< android::graphics::Paint > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(81), J2CPP_METHOD_SIGNATURE(81), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawTextOnPath(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::graphics::Path > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::graphics::Paint > const &a6)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(82), J2CPP_METHOD_SIGNATURE(82), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawTextOnPath(local_ref< java::lang::String > const &a0, local_ref< android::graphics::Path > const &a1, cpp_float const &a2, cpp_float const &a3, local_ref< android::graphics::Paint > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(83), J2CPP_METHOD_SIGNATURE(83), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPicture(local_ref< android::graphics::Picture > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(84), J2CPP_METHOD_SIGNATURE(84), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPicture(local_ref< android::graphics::Picture > const &a0, local_ref< android::graphics::RectF > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(85), J2CPP_METHOD_SIGNATURE(85), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Canvas::drawPicture(local_ref< android::graphics::Picture > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(86), J2CPP_METHOD_SIGNATURE(86), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



static_field<
	android::graphics::Canvas::J2CPP_CLASS_NAME,
	android::graphics::Canvas::J2CPP_FIELD_NAME(0),
	android::graphics::Canvas::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::graphics::Canvas::MATRIX_SAVE_FLAG;

static_field<
	android::graphics::Canvas::J2CPP_CLASS_NAME,
	android::graphics::Canvas::J2CPP_FIELD_NAME(1),
	android::graphics::Canvas::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::graphics::Canvas::CLIP_SAVE_FLAG;

static_field<
	android::graphics::Canvas::J2CPP_CLASS_NAME,
	android::graphics::Canvas::J2CPP_FIELD_NAME(2),
	android::graphics::Canvas::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::graphics::Canvas::HAS_ALPHA_LAYER_SAVE_FLAG;

static_field<
	android::graphics::Canvas::J2CPP_CLASS_NAME,
	android::graphics::Canvas::J2CPP_FIELD_NAME(3),
	android::graphics::Canvas::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::graphics::Canvas::FULL_COLOR_LAYER_SAVE_FLAG;

static_field<
	android::graphics::Canvas::J2CPP_CLASS_NAME,
	android::graphics::Canvas::J2CPP_FIELD_NAME(4),
	android::graphics::Canvas::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::graphics::Canvas::CLIP_TO_LAYER_SAVE_FLAG;

static_field<
	android::graphics::Canvas::J2CPP_CLASS_NAME,
	android::graphics::Canvas::J2CPP_FIELD_NAME(5),
	android::graphics::Canvas::J2CPP_FIELD_SIGNATURE(5),
	cpp_int
> android::graphics::Canvas::ALL_SAVE_FLAG;


J2CPP_DEFINE_CLASS(android::graphics::Canvas,"android/graphics/Canvas")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,1,"<init>","(Landroid/graphics/Bitmap;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,2,"<init>","(Ljavax/microedition/khronos/opengles/GL;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,3,"getGL","()Ljavax/microedition/khronos/opengles/GL;")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,4,"freeGlCaches","()V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,5,"setBitmap","(Landroid/graphics/Bitmap;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,6,"setViewport","(II)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,7,"isOpaque","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,8,"getWidth","()I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,9,"getHeight","()I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,10,"getDensity","()I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,11,"setDensity","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,12,"save","()I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,13,"save","(I)I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,14,"saveLayer","(Landroid/graphics/RectF;Landroid/graphics/Paint;I)I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,15,"saveLayer","(FFFFLandroid/graphics/Paint;I)I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,16,"saveLayerAlpha","(Landroid/graphics/RectF;II)I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,17,"saveLayerAlpha","(FFFFII)I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,18,"restore","()V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,19,"getSaveCount","()I")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,20,"restoreToCount","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,21,"translate","(FF)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,22,"scale","(FF)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,23,"scale","(FFFF)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,24,"rotate","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,25,"rotate","(FFF)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,26,"skew","(FF)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,27,"concat","(Landroid/graphics/Matrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,28,"setMatrix","(Landroid/graphics/Matrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,29,"getMatrix","(Landroid/graphics/Matrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,30,"getMatrix","()Landroid/graphics/Matrix;")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,31,"clipRect","(Landroid/graphics/RectF;Landroid/graphics/Region$Op;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,32,"clipRect","(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,33,"clipRect","(Landroid/graphics/RectF;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,34,"clipRect","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,35,"clipRect","(FFFFLandroid/graphics/Region$Op;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,36,"clipRect","(FFFF)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,37,"clipRect","(IIII)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,38,"clipPath","(Landroid/graphics/Path;Landroid/graphics/Region$Op;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,39,"clipPath","(Landroid/graphics/Path;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,40,"clipRegion","(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,41,"clipRegion","(Landroid/graphics/Region;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,42,"getDrawFilter","()Landroid/graphics/DrawFilter;")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,43,"setDrawFilter","(Landroid/graphics/DrawFilter;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,44,"quickReject","(Landroid/graphics/RectF;Landroid/graphics/Canvas$EdgeType;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,45,"quickReject","(Landroid/graphics/Path;Landroid/graphics/Canvas$EdgeType;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,46,"quickReject","(FFFFLandroid/graphics/Canvas$EdgeType;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,47,"getClipBounds","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,48,"getClipBounds","()Landroid/graphics/Rect;")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,49,"drawRGB","(III)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,50,"drawARGB","(IIII)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,51,"drawColor","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,52,"drawColor","(ILandroid/graphics/PorterDuff$Mode;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,53,"drawPaint","(Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,54,"drawPoints","([FIILandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,55,"drawPoints","([FLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,56,"drawPoint","(FFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,57,"drawLine","(FFFFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,58,"drawLines","([FIILandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,59,"drawLines","([FLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,60,"drawRect","(Landroid/graphics/RectF;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,61,"drawRect","(Landroid/graphics/Rect;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,62,"drawRect","(FFFFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,63,"drawOval","(Landroid/graphics/RectF;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,64,"drawCircle","(FFFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,65,"drawArc","(Landroid/graphics/RectF;FFZLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,66,"drawRoundRect","(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,67,"drawPath","(Landroid/graphics/Path;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,68,"drawBitmap","(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,69,"drawBitmap","(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/RectF;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,70,"drawBitmap","(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,71,"drawBitmap","([IIIFFIIZLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,72,"drawBitmap","([IIIIIIIZLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,73,"drawBitmap","(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,74,"drawBitmapMesh","(Landroid/graphics/Bitmap;II[FI[IILandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,75,"drawVertices","(Landroid/graphics/Canvas$VertexMode;I[FI[FI[II[SIILandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,76,"drawText","([CIIFFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,77,"drawText","(Ljava/lang/String;FFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,78,"drawText","(Ljava/lang/String;IIFFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,79,"drawText","(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,80,"drawPosText","([CII[FLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,81,"drawPosText","(Ljava/lang/String;[FLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,82,"drawTextOnPath","([CIILandroid/graphics/Path;FFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,83,"drawTextOnPath","(Ljava/lang/String;Landroid/graphics/Path;FFLandroid/graphics/Paint;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,84,"drawPicture","(Landroid/graphics/Picture;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,85,"drawPicture","(Landroid/graphics/Picture;Landroid/graphics/RectF;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,86,"drawPicture","(Landroid/graphics/Picture;Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::graphics::Canvas,87,"finalize","()V")
J2CPP_DEFINE_FIELD(android::graphics::Canvas,0,"MATRIX_SAVE_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Canvas,1,"CLIP_SAVE_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Canvas,2,"HAS_ALPHA_LAYER_SAVE_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Canvas,3,"FULL_COLOR_LAYER_SAVE_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Canvas,4,"CLIP_TO_LAYER_SAVE_FLAG","I")
J2CPP_DEFINE_FIELD(android::graphics::Canvas,5,"ALL_SAVE_FLAG","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_CANVAS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
