/*================================================================================
  code generated by: java2cpp
  class: android.view.animation.BounceInterpolator
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_BOUNCEINTERPOLATOR_HPP_DECL
#define J2CPP_ANDROID_VIEW_ANIMATION_BOUNCEINTERPOLATOR_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }


#include <android/content/Context.hpp>
#include <android/util/AttributeSet.hpp>


namespace j2cpp {

namespace android { namespace view { namespace animation {

	class BounceInterpolator;
	class BounceInterpolator
		: public cpp_object<BounceInterpolator>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		BounceInterpolator(jobject jobj)
		: cpp_object<BounceInterpolator>(jobj)
		{
		}

		cpp_float getInterpolation(cpp_float const&);
	}; //class BounceInterpolator

} //namespace animation
} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_BOUNCEINTERPOLATOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_BOUNCEINTERPOLATOR_HPP_IMPL
#define J2CPP_ANDROID_VIEW_ANIMATION_BOUNCEINTERPOLATOR_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::view::animation::BounceInterpolator > create< android::view::animation::BounceInterpolator>()
{
	return local_ref< android::view::animation::BounceInterpolator >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::animation::BounceInterpolator::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::animation::BounceInterpolator::J2CPP_CLASS_NAME, android::view::animation::BounceInterpolator::J2CPP_METHOD_NAME(0), android::view::animation::BounceInterpolator::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< android::view::animation::BounceInterpolator > create< android::view::animation::BounceInterpolator>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
{
	return local_ref< android::view::animation::BounceInterpolator >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::animation::BounceInterpolator::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::animation::BounceInterpolator::J2CPP_CLASS_NAME, android::view::animation::BounceInterpolator::J2CPP_METHOD_NAME(1), android::view::animation::BounceInterpolator::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::animation::BounceInterpolator::getInterpolation(cpp_float const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::animation::BounceInterpolator,"android/view/animation/BounceInterpolator")
J2CPP_DEFINE_METHOD(android::view::animation::BounceInterpolator,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::animation::BounceInterpolator,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::animation::BounceInterpolator,2,"getInterpolation","(F)F")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_BOUNCEINTERPOLATOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
