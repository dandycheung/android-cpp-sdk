/*================================================================================
  code generated by: java2cpp
  class: android.webkit.PluginList
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_PLUGINLIST_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_PLUGINLIST_HPP_DECL


namespace j2cpp { namespace java { namespace util { class List; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace webkit { class Plugin; } } }


#include <android/content/Context.hpp>
#include <android/webkit/Plugin.hpp>
#include <java/util/List.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class PluginList;
	class PluginList
		: public cpp_object<PluginList>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		PluginList(jobject jobj)
		: cpp_object<PluginList>(jobj)
		{
		}

		local_ref< java::util::List > getList();
		void addPlugin(local_ref< android::webkit::Plugin > const&);
		void removePlugin(local_ref< android::webkit::Plugin > const&);
		void clear();
		void pluginClicked(local_ref< android::content::Context > const&, cpp_int const&);
	}; //class PluginList

} //namespace webkit
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_PLUGINLIST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_PLUGINLIST_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_PLUGINLIST_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::webkit::PluginList > create< android::webkit::PluginList>()
{
	return local_ref< android::webkit::PluginList >(
		environment::get().get_jenv()->NewObject(
			get_class<android::webkit::PluginList::J2CPP_CLASS_NAME>(),
			get_method_id<android::webkit::PluginList::J2CPP_CLASS_NAME, android::webkit::PluginList::J2CPP_METHOD_NAME(0), android::webkit::PluginList::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::util::List > android::webkit::PluginList::getList()
{
	return local_ref< java::util::List >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::webkit::PluginList::addPlugin(local_ref< android::webkit::Plugin > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::PluginList::removePlugin(local_ref< android::webkit::Plugin > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::PluginList::clear()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::webkit::PluginList::pluginClicked(local_ref< android::content::Context > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::webkit::PluginList,"android/webkit/PluginList")
J2CPP_DEFINE_METHOD(android::webkit::PluginList,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::PluginList,1,"getList","()Ljava/util/List;")
J2CPP_DEFINE_METHOD(android::webkit::PluginList,2,"addPlugin","(Landroid/webkit/Plugin;)V")
J2CPP_DEFINE_METHOD(android::webkit::PluginList,3,"removePlugin","(Landroid/webkit/Plugin;)V")
J2CPP_DEFINE_METHOD(android::webkit::PluginList,4,"clear","()V")
J2CPP_DEFINE_METHOD(android::webkit::PluginList,5,"pluginClicked","(Landroid/content/Context;I)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_PLUGINLIST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
