/*================================================================================
  code generated by: java2cpp
  class: android.opengl.GLU
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_GLU_HPP_DECL
#define J2CPP_ANDROID_OPENGL_GLU_HPP_DECL


namespace j2cpp { namespace javax { namespace microedition { namespace khronos { namespace opengles { class GL10; } } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>
#include <javax/microedition/khronos/opengles/GL10.hpp>


namespace j2cpp {

namespace android { namespace opengl {

	class GLU;
	class GLU
		: public cpp_object<GLU>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		GLU(jobject jobj)
		: cpp_object<GLU>(jobj)
		{
		}

		static local_ref< java::lang::String > gluErrorString(cpp_int const&);
		static void gluLookAt(local_ref< javax::microedition::khronos::opengles::GL10 > const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		static void gluOrtho2D(local_ref< javax::microedition::khronos::opengles::GL10 > const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		static void gluPerspective(local_ref< javax::microedition::khronos::opengles::GL10 > const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		static cpp_int gluProject(cpp_float const&, cpp_float const&, cpp_float const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_int_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&);
		static cpp_int gluUnProject(cpp_float const&, cpp_float const&, cpp_float const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_int_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&);
	}; //class GLU

} //namespace opengl
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_GLU_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_GLU_HPP_IMPL
#define J2CPP_ANDROID_OPENGL_GLU_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::opengl::GLU > create< android::opengl::GLU>()
{
	return local_ref< android::opengl::GLU >(
		environment::get().get_jenv()->NewObject(
			get_class<android::opengl::GLU::J2CPP_CLASS_NAME>(),
			get_method_id<android::opengl::GLU::J2CPP_CLASS_NAME, android::opengl::GLU::J2CPP_METHOD_NAME(0), android::opengl::GLU::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > android::opengl::GLU::gluErrorString(cpp_int const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

void android::opengl::GLU::gluLookAt(local_ref< javax::microedition::khronos::opengles::GL10 > const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, cpp_float const &a4, cpp_float const &a5, cpp_float const &a6, cpp_float const &a7, cpp_float const &a8, cpp_float const &a9)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype()
		)
	);
}

void android::opengl::GLU::gluOrtho2D(local_ref< javax::microedition::khronos::opengles::GL10 > const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, cpp_float const &a4)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::opengl::GLU::gluPerspective(local_ref< javax::microedition::khronos::opengles::GL10 > const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, cpp_float const &a4)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

cpp_int android::opengl::GLU::gluProject(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< cpp_float_array<1> > const &a3, cpp_int const &a4, local_ref< cpp_float_array<1> > const &a5, cpp_int const &a6, local_ref< cpp_int_array<1> > const &a7, cpp_int const &a8, local_ref< cpp_float_array<1> > const &a9, cpp_int const &a10)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype()
		)
	);
}

cpp_int android::opengl::GLU::gluUnProject(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< cpp_float_array<1> > const &a3, cpp_int const &a4, local_ref< cpp_float_array<1> > const &a5, cpp_int const &a6, local_ref< cpp_int_array<1> > const &a7, cpp_int const &a8, local_ref< cpp_float_array<1> > const &a9, cpp_int const &a10)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::opengl::GLU,"android/opengl/GLU")
J2CPP_DEFINE_METHOD(android::opengl::GLU,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::opengl::GLU,1,"gluErrorString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::opengl::GLU,2,"gluLookAt","(Ljavax/microedition/khronos/opengles/GL10;FFFFFFFFF)V")
J2CPP_DEFINE_METHOD(android::opengl::GLU,3,"gluOrtho2D","(Ljavax/microedition/khronos/opengles/GL10;FFFF)V")
J2CPP_DEFINE_METHOD(android::opengl::GLU,4,"gluPerspective","(Ljavax/microedition/khronos/opengles/GL10;FFFF)V")
J2CPP_DEFINE_METHOD(android::opengl::GLU,5,"gluProject","(FFF[FI[FI[II[FI)I")
J2CPP_DEFINE_METHOD(android::opengl::GLU,6,"gluUnProject","(FFF[FI[FI[II[FI)I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_GLU_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
