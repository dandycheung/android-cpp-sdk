/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.protocol.DefaultedHttpContext
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PROTOCOL_DEFAULTEDHTTPCONTEXT_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_PROTOCOL_DEFAULTEDHTTPCONTEXT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace protocol { class HttpContext; } } } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <org/apache/http/protocol/HttpContext.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace protocol {

	class DefaultedHttpContext;
	class DefaultedHttpContext
		: public cpp_object<DefaultedHttpContext>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit DefaultedHttpContext(jobject jobj)
		: cpp_object<DefaultedHttpContext>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<org::apache::http::protocol::HttpContext>() const;


		DefaultedHttpContext(local_ref< org::apache::http::protocol::HttpContext > const&, local_ref< org::apache::http::protocol::HttpContext > const&);
		local_ref< java::lang::Object > getAttribute(local_ref< java::lang::String > const&);
		local_ref< java::lang::Object > removeAttribute(local_ref< java::lang::String > const&);
		void setAttribute(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&);
		local_ref< org::apache::http::protocol::HttpContext > getDefaults();
	}; //class DefaultedHttpContext

} //namespace protocol
} //namespace http
} //namespace apache
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PROTOCOL_DEFAULTEDHTTPCONTEXT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_PROTOCOL_DEFAULTEDHTTPCONTEXT_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_PROTOCOL_DEFAULTEDHTTPCONTEXT_HPP_IMPL

namespace j2cpp {



org::apache::http::protocol::DefaultedHttpContext::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

org::apache::http::protocol::DefaultedHttpContext::operator local_ref<org::apache::http::protocol::HttpContext>() const
{
	return local_ref<org::apache::http::protocol::HttpContext>(get_jtype());
}


org::apache::http::protocol::DefaultedHttpContext::DefaultedHttpContext(local_ref< org::apache::http::protocol::HttpContext > const &a0, local_ref< org::apache::http::protocol::HttpContext > const &a1)
: cpp_object<org::apache::http::protocol::DefaultedHttpContext>(
	environment::get().get_jenv()->NewObject(
		get_class<org::apache::http::protocol::DefaultedHttpContext::J2CPP_CLASS_NAME>(),
		get_method_id<org::apache::http::protocol::DefaultedHttpContext::J2CPP_CLASS_NAME, org::apache::http::protocol::DefaultedHttpContext::J2CPP_METHOD_NAME(0), org::apache::http::protocol::DefaultedHttpContext::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}


local_ref< java::lang::Object > org::apache::http::protocol::DefaultedHttpContext::getAttribute(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > org::apache::http::protocol::DefaultedHttpContext::removeAttribute(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void org::apache::http::protocol::DefaultedHttpContext::setAttribute(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< org::apache::http::protocol::HttpContext > org::apache::http::protocol::DefaultedHttpContext::getDefaults()
{
	return local_ref< org::apache::http::protocol::HttpContext >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::protocol::DefaultedHttpContext,"org/apache/http/protocol/DefaultedHttpContext")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::DefaultedHttpContext,0,"<init>","(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/protocol/HttpContext;)V")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::DefaultedHttpContext,1,"getAttribute","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::DefaultedHttpContext,2,"removeAttribute","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::DefaultedHttpContext,3,"setAttribute","(Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(org::apache::http::protocol::DefaultedHttpContext,4,"getDefaults","()Lorg/apache/http/protocol/HttpContext;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_PROTOCOL_DEFAULTEDHTTPCONTEXT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
