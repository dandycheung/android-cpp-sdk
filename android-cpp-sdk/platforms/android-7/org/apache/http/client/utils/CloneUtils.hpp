/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.client.utils.CloneUtils
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_UTILS_CLONEUTILS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_UTILS_CLONEUTILS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace client { namespace utils {

	class CloneUtils;
	class CloneUtils
		: public cpp_object<CloneUtils>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		CloneUtils(jobject jobj)
		: cpp_object<CloneUtils>(jobj)
		{
		}

		static local_ref< java::lang::Object > clone(local_ref< java::lang::Object > const&);
	}; //class CloneUtils

} //namespace utils
} //namespace client
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_UTILS_CLONEUTILS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CLIENT_UTILS_CLONEUTILS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CLIENT_UTILS_CLONEUTILS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::apache::http::client::utils::CloneUtils > create< org::apache::http::client::utils::CloneUtils>()
{
	return local_ref< org::apache::http::client::utils::CloneUtils >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::client::utils::CloneUtils::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::client::utils::CloneUtils::J2CPP_CLASS_NAME, org::apache::http::client::utils::CloneUtils::J2CPP_METHOD_NAME(0), org::apache::http::client::utils::CloneUtils::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::Object > org::apache::http::client::utils::CloneUtils::clone(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::client::utils::CloneUtils,"org/apache/http/client/utils/CloneUtils")
J2CPP_DEFINE_METHOD(org::apache::http::client::utils::CloneUtils,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::apache::http::client::utils::CloneUtils,1,"clone","(Ljava/lang/Object;)Ljava/lang/Object;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CLIENT_UTILS_CLONEUTILS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
