/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.conn.routing.RouteInfo
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_ROUTING_ROUTEINFO_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_CONN_ROUTING_ROUTEINFO_HPP_DECL


namespace j2cpp { namespace java { namespace net { class InetAddress; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { namespace routing { namespace RouteInfo_ { class TunnelType; } } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { namespace conn { namespace routing { namespace RouteInfo_ { class LayerType; } } } } } } }
namespace j2cpp { namespace org { namespace apache { namespace http { class HttpHost; } } } }


#include <java/lang/String.hpp>
#include <java/net/InetAddress.hpp>
#include <org/apache/http/HttpHost.hpp>
#include <org/apache/http/conn/routing/RouteInfo.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace conn { namespace routing {

	class RouteInfo;
	namespace RouteInfo_ {

		class TunnelType;
		class TunnelType
			: public cpp_object<TunnelType>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)

			TunnelType(jobject jobj)
			: cpp_object<TunnelType>(jobj)
			{
			}

			static local_ref< cpp_object_array<org::apache::http::conn::routing::RouteInfo_::TunnelType, 1> > values();
			static local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > > PLAIN;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > > TUNNELLED;
		}; //class TunnelType

		class LayerType;
		class LayerType
			: public cpp_object<LayerType>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)

			LayerType(jobject jobj)
			: cpp_object<LayerType>(jobj)
			{
			}

			static local_ref< cpp_object_array<org::apache::http::conn::routing::RouteInfo_::LayerType, 1> > values();
			static local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > > LAYERED;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > > PLAIN;
		}; //class LayerType

	} //namespace RouteInfo_

	class RouteInfo
		: public cpp_object<RouteInfo>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		typedef RouteInfo_::TunnelType TunnelType;
		typedef RouteInfo_::LayerType LayerType;

		RouteInfo(jobject jobj)
		: cpp_object<RouteInfo>(jobj)
		{
		}

		local_ref< org::apache::http::HttpHost > getTargetHost();
		local_ref< java::net::InetAddress > getLocalAddress();
		cpp_int getHopCount();
		local_ref< org::apache::http::HttpHost > getHopTarget(cpp_int const&);
		local_ref< org::apache::http::HttpHost > getProxyHost();
		local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > getTunnelType();
		cpp_boolean isTunnelled();
		local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > getLayerType();
		cpp_boolean isLayered();
		cpp_boolean isSecure();
	}; //class RouteInfo

} //namespace routing
} //namespace conn
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_ROUTING_ROUTEINFO_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_CONN_ROUTING_ROUTEINFO_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_CONN_ROUTING_ROUTEINFO_HPP_IMPL

namespace j2cpp {



local_ref< cpp_object_array<org::apache::http::conn::routing::RouteInfo_::TunnelType, 1> > org::apache::http::conn::routing::RouteInfo_::TunnelType::values()
{
	return local_ref< cpp_object_array<org::apache::http::conn::routing::RouteInfo_::TunnelType, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > org::apache::http::conn::routing::RouteInfo_::TunnelType::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > create< org::apache::http::conn::routing::RouteInfo_::TunnelType>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_CLASS_NAME, org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_METHOD_NAME(2), org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_CLASS_NAME,
	org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_FIELD_NAME(0),
	org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_FIELD_SIGNATURE(0),
	local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType >
> org::apache::http::conn::routing::RouteInfo_::TunnelType::PLAIN;

static_field<
	org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_CLASS_NAME,
	org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_FIELD_NAME(1),
	org::apache::http::conn::routing::RouteInfo_::TunnelType::J2CPP_FIELD_SIGNATURE(1),
	local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType >
> org::apache::http::conn::routing::RouteInfo_::TunnelType::TUNNELLED;


J2CPP_DEFINE_CLASS(org::apache::http::conn::routing::RouteInfo_::TunnelType,"org/apache/http/conn/routing/RouteInfo$TunnelType")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::TunnelType,0,"values","()[org.apache.http.conn.routing.RouteInfo.TunnelType")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::TunnelType,1,"valueOf","(Ljava/lang/String;)Lorg/apache/http/conn/routing/RouteInfo$TunnelType;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::TunnelType,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::TunnelType,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(org::apache::http::conn::routing::RouteInfo_::TunnelType,0,"PLAIN","Lorg/apache/http/conn/routing/RouteInfo$TunnelType;")
J2CPP_DEFINE_FIELD(org::apache::http::conn::routing::RouteInfo_::TunnelType,1,"TUNNELLED","Lorg/apache/http/conn/routing/RouteInfo$TunnelType;")
J2CPP_DEFINE_FIELD(org::apache::http::conn::routing::RouteInfo_::TunnelType,2,"$VALUES","[org.apache.http.conn.routing.RouteInfo.TunnelType")

local_ref< cpp_object_array<org::apache::http::conn::routing::RouteInfo_::LayerType, 1> > org::apache::http::conn::routing::RouteInfo_::LayerType::values()
{
	return local_ref< cpp_object_array<org::apache::http::conn::routing::RouteInfo_::LayerType, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > org::apache::http::conn::routing::RouteInfo_::LayerType::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > create< org::apache::http::conn::routing::RouteInfo_::LayerType>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_CLASS_NAME, org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_METHOD_NAME(2), org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_CLASS_NAME,
	org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_FIELD_NAME(0),
	org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_FIELD_SIGNATURE(0),
	local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType >
> org::apache::http::conn::routing::RouteInfo_::LayerType::LAYERED;

static_field<
	org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_CLASS_NAME,
	org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_FIELD_NAME(1),
	org::apache::http::conn::routing::RouteInfo_::LayerType::J2CPP_FIELD_SIGNATURE(1),
	local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType >
> org::apache::http::conn::routing::RouteInfo_::LayerType::PLAIN;


J2CPP_DEFINE_CLASS(org::apache::http::conn::routing::RouteInfo_::LayerType,"org/apache/http/conn/routing/RouteInfo$LayerType")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::LayerType,0,"values","()[org.apache.http.conn.routing.RouteInfo.LayerType")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::LayerType,1,"valueOf","(Ljava/lang/String;)Lorg/apache/http/conn/routing/RouteInfo$LayerType;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::LayerType,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo_::LayerType,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(org::apache::http::conn::routing::RouteInfo_::LayerType,0,"LAYERED","Lorg/apache/http/conn/routing/RouteInfo$LayerType;")
J2CPP_DEFINE_FIELD(org::apache::http::conn::routing::RouteInfo_::LayerType,1,"PLAIN","Lorg/apache/http/conn/routing/RouteInfo$LayerType;")
J2CPP_DEFINE_FIELD(org::apache::http::conn::routing::RouteInfo_::LayerType,2,"$VALUES","[org.apache.http.conn.routing.RouteInfo.LayerType")


local_ref< org::apache::http::HttpHost > org::apache::http::conn::routing::RouteInfo::getTargetHost()
{
	return local_ref< org::apache::http::HttpHost >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::net::InetAddress > org::apache::http::conn::routing::RouteInfo::getLocalAddress()
{
	return local_ref< java::net::InetAddress >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_int org::apache::http::conn::routing::RouteInfo::getHopCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< org::apache::http::HttpHost > org::apache::http::conn::routing::RouteInfo::getHopTarget(cpp_int const &a0)
{
	return local_ref< org::apache::http::HttpHost >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< org::apache::http::HttpHost > org::apache::http::conn::routing::RouteInfo::getProxyHost()
{
	return local_ref< org::apache::http::HttpHost >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType > org::apache::http::conn::routing::RouteInfo::getTunnelType()
{
	return local_ref< org::apache::http::conn::routing::RouteInfo_::TunnelType >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_boolean org::apache::http::conn::routing::RouteInfo::isTunnelled()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType > org::apache::http::conn::routing::RouteInfo::getLayerType()
{
	return local_ref< org::apache::http::conn::routing::RouteInfo_::LayerType >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_boolean org::apache::http::conn::routing::RouteInfo::isLayered()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_boolean org::apache::http::conn::routing::RouteInfo::isSecure()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::conn::routing::RouteInfo,"org/apache/http/conn/routing/RouteInfo")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,0,"getTargetHost","()Lorg/apache/http/HttpHost;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,1,"getLocalAddress","()Ljava/net/InetAddress;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,2,"getHopCount","()I")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,3,"getHopTarget","(I)Lorg/apache/http/HttpHost;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,4,"getProxyHost","()Lorg/apache/http/HttpHost;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,5,"getTunnelType","()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,6,"isTunnelled","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,7,"getLayerType","()Lorg/apache/http/conn/routing/RouteInfo$LayerType;")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,8,"isLayered","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::conn::routing::RouteInfo,9,"isSecure","()Z")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_CONN_ROUTING_ROUTEINFO_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
