/*================================================================================
  code generated by: java2cpp
  class: org.xml.sax.ErrorHandler
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XML_SAX_ERRORHANDLER_HPP_DECL
#define J2CPP_ORG_XML_SAX_ERRORHANDLER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace org { namespace xml { namespace sax { class SAXParseException; } } } }


#include <java/lang/Object.hpp>
#include <org/xml/sax/SAXParseException.hpp>


namespace j2cpp {

namespace org { namespace xml { namespace sax {

	class ErrorHandler;
	class ErrorHandler
		: public cpp_object<ErrorHandler>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit ErrorHandler(jobject jobj)
		: cpp_object<ErrorHandler>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void warning(local_ref< org::xml::sax::SAXParseException > const&);
		void error(local_ref< org::xml::sax::SAXParseException > const&);
		void fatalError(local_ref< org::xml::sax::SAXParseException > const&);
	}; //class ErrorHandler

} //namespace sax
} //namespace xml
} //namespace org

} //namespace j2cpp

#endif //J2CPP_ORG_XML_SAX_ERRORHANDLER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XML_SAX_ERRORHANDLER_HPP_IMPL
#define J2CPP_ORG_XML_SAX_ERRORHANDLER_HPP_IMPL

namespace j2cpp {



org::xml::sax::ErrorHandler::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void org::xml::sax::ErrorHandler::warning(local_ref< org::xml::sax::SAXParseException > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void org::xml::sax::ErrorHandler::error(local_ref< org::xml::sax::SAXParseException > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void org::xml::sax::ErrorHandler::fatalError(local_ref< org::xml::sax::SAXParseException > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::xml::sax::ErrorHandler,"org/xml/sax/ErrorHandler")
J2CPP_DEFINE_METHOD(org::xml::sax::ErrorHandler,0,"warning","(Lorg/xml/sax/SAXParseException;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ErrorHandler,1,"error","(Lorg/xml/sax/SAXParseException;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ErrorHandler,2,"fatalError","(Lorg/xml/sax/SAXParseException;)V")

} //namespace j2cpp

#endif //J2CPP_ORG_XML_SAX_ERRORHANDLER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
