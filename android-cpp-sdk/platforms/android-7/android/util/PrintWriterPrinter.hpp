/*================================================================================
  code generated by: java2cpp
  class: android.util.PrintWriterPrinter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_PRINTWRITERPRINTER_HPP_DECL
#define J2CPP_ANDROID_UTIL_PRINTWRITERPRINTER_HPP_DECL


namespace j2cpp { namespace java { namespace io { class PrintWriter; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/io/PrintWriter.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace util {

	class PrintWriterPrinter;
	class PrintWriterPrinter
		: public cpp_object<PrintWriterPrinter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		PrintWriterPrinter(jobject jobj)
		: cpp_object<PrintWriterPrinter>(jobj)
		{
		}

		void println(local_ref< java::lang::String > const&);
	}; //class PrintWriterPrinter

} //namespace util
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_PRINTWRITERPRINTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_PRINTWRITERPRINTER_HPP_IMPL
#define J2CPP_ANDROID_UTIL_PRINTWRITERPRINTER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::util::PrintWriterPrinter > create< android::util::PrintWriterPrinter>(local_ref< java::io::PrintWriter > const &a0)
{
	return local_ref< android::util::PrintWriterPrinter >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::PrintWriterPrinter::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::PrintWriterPrinter::J2CPP_CLASS_NAME, android::util::PrintWriterPrinter::J2CPP_METHOD_NAME(0), android::util::PrintWriterPrinter::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::util::PrintWriterPrinter::println(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::util::PrintWriterPrinter,"android/util/PrintWriterPrinter")
J2CPP_DEFINE_METHOD(android::util::PrintWriterPrinter,0,"<init>","(Ljava/io/PrintWriter;)V")
J2CPP_DEFINE_METHOD(android::util::PrintWriterPrinter,1,"println","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_PRINTWRITERPRINTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
