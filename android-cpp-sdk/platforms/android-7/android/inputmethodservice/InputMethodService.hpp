/*================================================================================
  code generated by: java2cpp
  class: android.inputmethodservice.InputMethodService
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_HPP_DECL
#define J2CPP_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace app { class Dialog; } } }
namespace j2cpp { namespace android { namespace inputmethodservice { namespace AbstractInputMethodService_ { class AbstractInputMethodSessionImpl; } } } }
namespace j2cpp { namespace android { namespace inputmethodservice { namespace InputMethodService_ { class Insets; } } } }
namespace j2cpp { namespace android { namespace inputmethodservice { namespace AbstractInputMethodService_ { class AbstractInputMethodImpl; } } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace content { namespace res { class Configuration; } } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class Window; } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class ExtractedText; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class CompletionInfo; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class InputConnection; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class InputBinding; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class EditorInfo; } } } }
namespace j2cpp { namespace android { namespace view { class LayoutInflater; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace os { class IBinder; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace os { class ResultReceiver; } } }


#include <android/app/Dialog.hpp>
#include <android/content/res/Configuration.hpp>
#include <android/graphics/Rect.hpp>
#include <android/inputmethodservice/AbstractInputMethodService.hpp>
#include <android/inputmethodservice/InputMethodService.hpp>
#include <android/os/Bundle.hpp>
#include <android/os/IBinder.hpp>
#include <android/os/ResultReceiver.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/LayoutInflater.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/View.hpp>
#include <android/view/Window.hpp>
#include <android/view/inputmethod/CompletionInfo.hpp>
#include <android/view/inputmethod/EditorInfo.hpp>
#include <android/view/inputmethod/ExtractedText.hpp>
#include <android/view/inputmethod/InputBinding.hpp>
#include <android/view/inputmethod/InputConnection.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace inputmethodservice {

	class InputMethodService;
	namespace InputMethodService_ {

		class Insets;
		class Insets
			: public cpp_object<Insets>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)

			Insets(jobject jobj)
			: cpp_object<Insets>(jobj)
			, contentTopInsets(jobj)
			, visibleTopInsets(jobj)
			, touchableInsets(jobj)
			{
			}


			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > contentTopInsets;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > visibleTopInsets;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > TOUCHABLE_INSETS_FRAME;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > TOUCHABLE_INSETS_CONTENT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > TOUCHABLE_INSETS_VISIBLE;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > touchableInsets;
		}; //class Insets

		class InputMethodSessionImpl;
		class InputMethodSessionImpl
			: public cpp_object<InputMethodSessionImpl>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_FIELD(0)

			InputMethodSessionImpl(jobject jobj)
			: cpp_object<InputMethodSessionImpl>(jobj)
			{
			}

			void finishInput();
			void displayCompletions(local_ref< cpp_object_array<android::view::inputmethod::CompletionInfo, 1> > const&);
			void updateExtractedText(cpp_int const&, local_ref< android::view::inputmethod::ExtractedText > const&);
			void updateSelection(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
			void updateCursor(local_ref< android::graphics::Rect > const&);
			void appPrivateCommand(local_ref< java::lang::String > const&, local_ref< android::os::Bundle > const&);
			void toggleSoftInput(cpp_int const&, cpp_int const&);

		}; //class InputMethodSessionImpl

		class InputMethodImpl;
		class InputMethodImpl
			: public cpp_object<InputMethodImpl>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_FIELD(0)

			InputMethodImpl(jobject jobj)
			: cpp_object<InputMethodImpl>(jobj)
			{
			}

			void attachToken(local_ref< android::os::IBinder > const&);
			void bindInput(local_ref< android::view::inputmethod::InputBinding > const&);
			void unbindInput();
			void startInput(local_ref< android::view::inputmethod::InputConnection > const&, local_ref< android::view::inputmethod::EditorInfo > const&);
			void restartInput(local_ref< android::view::inputmethod::InputConnection > const&, local_ref< android::view::inputmethod::EditorInfo > const&);
			void hideSoftInput(cpp_int const&, local_ref< android::os::ResultReceiver > const&);
			void showSoftInput(cpp_int const&, local_ref< android::os::ResultReceiver > const&);

		}; //class InputMethodImpl

	} //namespace InputMethodService_

	class InputMethodService
		: public cpp_object<InputMethodService>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)

		typedef InputMethodService_::Insets Insets;
		typedef InputMethodService_::InputMethodSessionImpl InputMethodSessionImpl;
		typedef InputMethodService_::InputMethodImpl InputMethodImpl;

		InputMethodService(jobject jobj)
		: cpp_object<InputMethodService>(jobj)
		{
		}

		void setTheme(cpp_int const&);
		void onCreate();
		void onInitializeInterface();
		void onDestroy();
		void onConfigurationChanged(local_ref< android::content::res::Configuration > const&);
		local_ref< android::inputmethodservice::AbstractInputMethodService_::AbstractInputMethodImpl > onCreateInputMethodInterface();
		local_ref< android::inputmethodservice::AbstractInputMethodService_::AbstractInputMethodSessionImpl > onCreateInputMethodSessionInterface();
		local_ref< android::view::LayoutInflater > getLayoutInflater();
		local_ref< android::app::Dialog > getWindow();
		cpp_int getMaxWidth();
		local_ref< android::view::inputmethod::InputBinding > getCurrentInputBinding();
		local_ref< android::view::inputmethod::InputConnection > getCurrentInputConnection();
		cpp_boolean getCurrentInputStarted();
		local_ref< android::view::inputmethod::EditorInfo > getCurrentInputEditorInfo();
		void updateFullscreenMode();
		void onConfigureWindow(local_ref< android::view::Window > const&, cpp_boolean const&, cpp_boolean const&);
		cpp_boolean isFullscreenMode();
		cpp_boolean onEvaluateFullscreenMode();
		void setExtractViewShown(cpp_boolean const&);
		cpp_boolean isExtractViewShown();
		void onComputeInsets(local_ref< android::inputmethodservice::InputMethodService_::Insets > const&);
		void updateInputViewShown();
		cpp_boolean isShowInputRequested();
		cpp_boolean isInputViewShown();
		cpp_boolean onEvaluateInputViewShown();
		void setCandidatesViewShown(cpp_boolean const&);
		cpp_int getCandidatesHiddenVisibility();
		void showStatusIcon(cpp_int const&);
		void hideStatusIcon();
		void switchInputMethod(local_ref< java::lang::String > const&);
		void setExtractView(local_ref< android::view::View > const&);
		void setCandidatesView(local_ref< android::view::View > const&);
		void setInputView(local_ref< android::view::View > const&);
		local_ref< android::view::View > onCreateExtractTextView();
		local_ref< android::view::View > onCreateCandidatesView();
		local_ref< android::view::View > onCreateInputView();
		void onStartInputView(local_ref< android::view::inputmethod::EditorInfo > const&, cpp_boolean const&);
		void onFinishInputView(cpp_boolean const&);
		void onStartCandidatesView(local_ref< android::view::inputmethod::EditorInfo > const&, cpp_boolean const&);
		void onFinishCandidatesView(cpp_boolean const&);
		cpp_boolean onShowInputRequested(cpp_int const&, cpp_boolean const&);
		void showWindow(cpp_boolean const&);
		void hideWindow();
		void onWindowShown();
		void onWindowHidden();
		void onBindInput();
		void onUnbindInput();
		void onStartInput(local_ref< android::view::inputmethod::EditorInfo > const&, cpp_boolean const&);
		void onFinishInput();
		void onDisplayCompletions(local_ref< cpp_object_array<android::view::inputmethod::CompletionInfo, 1> > const&);
		void onUpdateExtractedText(cpp_int const&, local_ref< android::view::inputmethod::ExtractedText > const&);
		void onUpdateSelection(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void onUpdateCursor(local_ref< android::graphics::Rect > const&);
		void requestHideSelf(cpp_int const&);
		cpp_boolean onKeyDown(cpp_int const&, local_ref< android::view::KeyEvent > const&);
		cpp_boolean onKeyLongPress(cpp_int const&, local_ref< android::view::KeyEvent > const&);
		cpp_boolean onKeyMultiple(cpp_int const&, cpp_int const&, local_ref< android::view::KeyEvent > const&);
		cpp_boolean onKeyUp(cpp_int const&, local_ref< android::view::KeyEvent > const&);
		cpp_boolean onTrackballEvent(local_ref< android::view::MotionEvent > const&);
		void onAppPrivateCommand(local_ref< java::lang::String > const&, local_ref< android::os::Bundle > const&);
		void sendDownUpKeyEvents(cpp_int const&);
		cpp_boolean sendDefaultEditorAction(cpp_boolean const&);
		void sendKeyChar(cpp_char const&);
		void onExtractedSelectionChanged(cpp_int const&, cpp_int const&);
		void onExtractedTextClicked();
		void onExtractedCursorMovement(cpp_int const&, cpp_int const&);
		cpp_boolean onExtractTextContextMenuItem(cpp_int const&);
		local_ref< java::lang::CharSequence > getTextForImeAction(cpp_int const&);
		void onUpdateExtractingVisibility(local_ref< android::view::inputmethod::EditorInfo > const&);
		void onUpdateExtractingViews(local_ref< android::view::inputmethod::EditorInfo > const&);
		void onExtractingInputChanged(local_ref< android::view::inputmethod::EditorInfo > const&);
	}; //class InputMethodService

} //namespace inputmethodservice
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_HPP_IMPL
#define J2CPP_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::inputmethodservice::InputMethodService_::Insets > create< android::inputmethodservice::InputMethodService_::Insets>()
{
	return local_ref< android::inputmethodservice::InputMethodService_::Insets >(
		environment::get().get_jenv()->NewObject(
			get_class<android::inputmethodservice::InputMethodService_::Insets::J2CPP_CLASS_NAME>(),
			get_method_id<android::inputmethodservice::InputMethodService_::Insets::J2CPP_CLASS_NAME, android::inputmethodservice::InputMethodService_::Insets::J2CPP_METHOD_NAME(0), android::inputmethodservice::InputMethodService_::Insets::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


static_field<
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_CLASS_NAME,
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_FIELD_NAME(2),
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::inputmethodservice::InputMethodService_::Insets::TOUCHABLE_INSETS_FRAME;

static_field<
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_CLASS_NAME,
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_FIELD_NAME(3),
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::inputmethodservice::InputMethodService_::Insets::TOUCHABLE_INSETS_CONTENT;

static_field<
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_CLASS_NAME,
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_FIELD_NAME(4),
	android::inputmethodservice::InputMethodService_::Insets::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::inputmethodservice::InputMethodService_::Insets::TOUCHABLE_INSETS_VISIBLE;


J2CPP_DEFINE_CLASS(android::inputmethodservice::InputMethodService_::Insets,"android/inputmethodservice/InputMethodService$Insets")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::Insets,0,"<init>","()V")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::Insets,0,"contentTopInsets","I")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::Insets,1,"visibleTopInsets","I")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::Insets,2,"TOUCHABLE_INSETS_FRAME","I")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::Insets,3,"TOUCHABLE_INSETS_CONTENT","I")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::Insets,4,"TOUCHABLE_INSETS_VISIBLE","I")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::Insets,5,"touchableInsets","I")

template <>
local_ref< android::inputmethodservice::InputMethodService_::InputMethodSessionImpl > create< android::inputmethodservice::InputMethodService_::InputMethodSessionImpl>(local_ref< android::inputmethodservice::InputMethodService > const &a0)
{
	return local_ref< android::inputmethodservice::InputMethodService_::InputMethodSessionImpl >(
		environment::get().get_jenv()->NewObject(
			get_class<android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::J2CPP_CLASS_NAME>(),
			get_method_id<android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::J2CPP_CLASS_NAME, android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::J2CPP_METHOD_NAME(0), android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::finishInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::displayCompletions(local_ref< cpp_object_array<android::view::inputmethod::CompletionInfo, 1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::updateExtractedText(cpp_int const &a0, local_ref< android::view::inputmethod::ExtractedText > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::updateSelection(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::updateCursor(local_ref< android::graphics::Rect > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::appPrivateCommand(local_ref< java::lang::String > const &a0, local_ref< android::os::Bundle > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodSessionImpl::toggleSoftInput(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,"android/inputmethodservice/InputMethodService$InputMethodSessionImpl")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,0,"<init>","(Landroid/inputmethodservice/InputMethodService;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,1,"finishInput","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,2,"displayCompletions","([android.view.inputmethod.CompletionInfo)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,3,"updateExtractedText","(ILandroid/view/inputmethod/ExtractedText;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,4,"updateSelection","(IIIIII)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,5,"updateCursor","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,6,"appPrivateCommand","(Ljava/lang/String;Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,7,"toggleSoftInput","(II)V")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::InputMethodSessionImpl,0,"this$0","Landroid/inputmethodservice/InputMethodService;")

template <>
local_ref< android::inputmethodservice::InputMethodService_::InputMethodImpl > create< android::inputmethodservice::InputMethodService_::InputMethodImpl>(local_ref< android::inputmethodservice::InputMethodService > const &a0)
{
	return local_ref< android::inputmethodservice::InputMethodService_::InputMethodImpl >(
		environment::get().get_jenv()->NewObject(
			get_class<android::inputmethodservice::InputMethodService_::InputMethodImpl::J2CPP_CLASS_NAME>(),
			get_method_id<android::inputmethodservice::InputMethodService_::InputMethodImpl::J2CPP_CLASS_NAME, android::inputmethodservice::InputMethodService_::InputMethodImpl::J2CPP_METHOD_NAME(0), android::inputmethodservice::InputMethodService_::InputMethodImpl::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::attachToken(local_ref< android::os::IBinder > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::bindInput(local_ref< android::view::inputmethod::InputBinding > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::unbindInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::startInput(local_ref< android::view::inputmethod::InputConnection > const &a0, local_ref< android::view::inputmethod::EditorInfo > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::restartInput(local_ref< android::view::inputmethod::InputConnection > const &a0, local_ref< android::view::inputmethod::EditorInfo > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::hideSoftInput(cpp_int const &a0, local_ref< android::os::ResultReceiver > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService_::InputMethodImpl::showSoftInput(cpp_int const &a0, local_ref< android::os::ResultReceiver > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::inputmethodservice::InputMethodService_::InputMethodImpl,"android/inputmethodservice/InputMethodService$InputMethodImpl")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,0,"<init>","(Landroid/inputmethodservice/InputMethodService;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,1,"attachToken","(Landroid/os/IBinder;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,2,"bindInput","(Landroid/view/inputmethod/InputBinding;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,3,"unbindInput","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,4,"startInput","(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,5,"restartInput","(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,6,"hideSoftInput","(ILandroid/os/ResultReceiver;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService_::InputMethodImpl,7,"showSoftInput","(ILandroid/os/ResultReceiver;)V")
J2CPP_DEFINE_FIELD(android::inputmethodservice::InputMethodService_::InputMethodImpl,0,"this$0","Landroid/inputmethodservice/InputMethodService;")


template <>
local_ref< android::inputmethodservice::InputMethodService > create< android::inputmethodservice::InputMethodService>()
{
	return local_ref< android::inputmethodservice::InputMethodService >(
		environment::get().get_jenv()->NewObject(
			get_class<android::inputmethodservice::InputMethodService::J2CPP_CLASS_NAME>(),
			get_method_id<android::inputmethodservice::InputMethodService::J2CPP_CLASS_NAME, android::inputmethodservice::InputMethodService::J2CPP_METHOD_NAME(0), android::inputmethodservice::InputMethodService::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::setTheme(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onCreate()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onInitializeInterface()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onDestroy()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onConfigurationChanged(local_ref< android::content::res::Configuration > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::inputmethodservice::AbstractInputMethodService_::AbstractInputMethodImpl > android::inputmethodservice::InputMethodService::onCreateInputMethodInterface()
{
	return local_ref< android::inputmethodservice::AbstractInputMethodService_::AbstractInputMethodImpl >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< android::inputmethodservice::AbstractInputMethodService_::AbstractInputMethodSessionImpl > android::inputmethodservice::InputMethodService::onCreateInputMethodSessionInterface()
{
	return local_ref< android::inputmethodservice::AbstractInputMethodService_::AbstractInputMethodSessionImpl >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< android::view::LayoutInflater > android::inputmethodservice::InputMethodService::getLayoutInflater()
{
	return local_ref< android::view::LayoutInflater >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

local_ref< android::app::Dialog > android::inputmethodservice::InputMethodService::getWindow()
{
	return local_ref< android::app::Dialog >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

cpp_int android::inputmethodservice::InputMethodService::getMaxWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

local_ref< android::view::inputmethod::InputBinding > android::inputmethodservice::InputMethodService::getCurrentInputBinding()
{
	return local_ref< android::view::inputmethod::InputBinding >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

local_ref< android::view::inputmethod::InputConnection > android::inputmethodservice::InputMethodService::getCurrentInputConnection()
{
	return local_ref< android::view::inputmethod::InputConnection >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::getCurrentInputStarted()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

local_ref< android::view::inputmethod::EditorInfo > android::inputmethodservice::InputMethodService::getCurrentInputEditorInfo()
{
	return local_ref< android::view::inputmethod::EditorInfo >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::updateFullscreenMode()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onConfigureWindow(local_ref< android::view::Window > const &a0, cpp_boolean const &a1, cpp_boolean const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::isFullscreenMode()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onEvaluateFullscreenMode()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::setExtractViewShown(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::isExtractViewShown()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onComputeInsets(local_ref< android::inputmethodservice::InputMethodService_::Insets > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::updateInputViewShown()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::isShowInputRequested()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::isInputViewShown()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onEvaluateInputViewShown()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::setCandidatesViewShown(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::inputmethodservice::InputMethodService::getCandidatesHiddenVisibility()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::showStatusIcon(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::hideStatusIcon()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::switchInputMethod(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::setExtractView(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::setCandidatesView(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::setInputView(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::view::View > android::inputmethodservice::InputMethodService::onCreateExtractTextView()
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>()
		)
	);
}

local_ref< android::view::View > android::inputmethodservice::InputMethodService::onCreateCandidatesView()
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>()
		)
	);
}

local_ref< android::view::View > android::inputmethodservice::InputMethodService::onCreateInputView()
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onStartInputView(local_ref< android::view::inputmethod::EditorInfo > const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onFinishInputView(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onStartCandidatesView(local_ref< android::view::inputmethod::EditorInfo > const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onFinishCandidatesView(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(40), J2CPP_METHOD_SIGNATURE(40), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onShowInputRequested(cpp_int const &a0, cpp_boolean const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(41), J2CPP_METHOD_SIGNATURE(41), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::showWindow(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(42), J2CPP_METHOD_SIGNATURE(42), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::hideWindow()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(43), J2CPP_METHOD_SIGNATURE(43), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onWindowShown()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(44), J2CPP_METHOD_SIGNATURE(44), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onWindowHidden()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(45), J2CPP_METHOD_SIGNATURE(45), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onBindInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(46), J2CPP_METHOD_SIGNATURE(46), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onUnbindInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(47), J2CPP_METHOD_SIGNATURE(47), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onStartInput(local_ref< android::view::inputmethod::EditorInfo > const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onFinishInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onDisplayCompletions(local_ref< cpp_object_array<android::view::inputmethod::CompletionInfo, 1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onUpdateExtractedText(cpp_int const &a0, local_ref< android::view::inputmethod::ExtractedText > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(51), J2CPP_METHOD_SIGNATURE(51), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onUpdateSelection(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(52), J2CPP_METHOD_SIGNATURE(52), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onUpdateCursor(local_ref< android::graphics::Rect > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(53), J2CPP_METHOD_SIGNATURE(53), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::requestHideSelf(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onKeyDown(cpp_int const &a0, local_ref< android::view::KeyEvent > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onKeyLongPress(cpp_int const &a0, local_ref< android::view::KeyEvent > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onKeyMultiple(cpp_int const &a0, cpp_int const &a1, local_ref< android::view::KeyEvent > const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onKeyUp(cpp_int const &a0, local_ref< android::view::KeyEvent > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onTrackballEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onAppPrivateCommand(local_ref< java::lang::String > const &a0, local_ref< android::os::Bundle > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(60), J2CPP_METHOD_SIGNATURE(60), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::sendDownUpKeyEvents(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::sendDefaultEditorAction(cpp_boolean const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(62), J2CPP_METHOD_SIGNATURE(62), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::sendKeyChar(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(63), J2CPP_METHOD_SIGNATURE(63), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onExtractedSelectionChanged(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(64), J2CPP_METHOD_SIGNATURE(64), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onExtractedTextClicked()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(65), J2CPP_METHOD_SIGNATURE(65), false>()
		)
	);
}

void android::inputmethodservice::InputMethodService::onExtractedCursorMovement(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::inputmethodservice::InputMethodService::onExtractTextContextMenuItem(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::CharSequence > android::inputmethodservice::InputMethodService::getTextForImeAction(cpp_int const &a0)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onUpdateExtractingVisibility(local_ref< android::view::inputmethod::EditorInfo > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onUpdateExtractingViews(local_ref< android::view::inputmethod::EditorInfo > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), false>(),
			a0.get_jtype()
		)
	);
}

void android::inputmethodservice::InputMethodService::onExtractingInputChanged(local_ref< android::view::inputmethod::EditorInfo > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(71), J2CPP_METHOD_SIGNATURE(71), false>(),
			a0.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::inputmethodservice::InputMethodService,"android/inputmethodservice/InputMethodService")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,1,"setTheme","(I)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,2,"onCreate","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,3,"onInitializeInterface","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,4,"onDestroy","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,5,"onConfigurationChanged","(Landroid/content/res/Configuration;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,6,"onCreateInputMethodInterface","()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,7,"onCreateInputMethodSessionInterface","()Landroid/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,8,"getLayoutInflater","()Landroid/view/LayoutInflater;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,9,"getWindow","()Landroid/app/Dialog;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,10,"getMaxWidth","()I")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,11,"getCurrentInputBinding","()Landroid/view/inputmethod/InputBinding;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,12,"getCurrentInputConnection","()Landroid/view/inputmethod/InputConnection;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,13,"getCurrentInputStarted","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,14,"getCurrentInputEditorInfo","()Landroid/view/inputmethod/EditorInfo;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,15,"updateFullscreenMode","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,16,"onConfigureWindow","(Landroid/view/Window;ZZ)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,17,"isFullscreenMode","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,18,"onEvaluateFullscreenMode","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,19,"setExtractViewShown","(Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,20,"isExtractViewShown","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,21,"onComputeInsets","(Landroid/inputmethodservice/InputMethodService$Insets;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,22,"updateInputViewShown","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,23,"isShowInputRequested","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,24,"isInputViewShown","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,25,"onEvaluateInputViewShown","()Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,26,"setCandidatesViewShown","(Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,27,"getCandidatesHiddenVisibility","()I")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,28,"showStatusIcon","(I)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,29,"hideStatusIcon","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,30,"switchInputMethod","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,31,"setExtractView","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,32,"setCandidatesView","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,33,"setInputView","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,34,"onCreateExtractTextView","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,35,"onCreateCandidatesView","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,36,"onCreateInputView","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,37,"onStartInputView","(Landroid/view/inputmethod/EditorInfo;Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,38,"onFinishInputView","(Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,39,"onStartCandidatesView","(Landroid/view/inputmethod/EditorInfo;Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,40,"onFinishCandidatesView","(Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,41,"onShowInputRequested","(IZ)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,42,"showWindow","(Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,43,"hideWindow","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,44,"onWindowShown","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,45,"onWindowHidden","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,46,"onBindInput","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,47,"onUnbindInput","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,48,"onStartInput","(Landroid/view/inputmethod/EditorInfo;Z)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,49,"onFinishInput","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,50,"onDisplayCompletions","([android.view.inputmethod.CompletionInfo)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,51,"onUpdateExtractedText","(ILandroid/view/inputmethod/ExtractedText;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,52,"onUpdateSelection","(IIIIII)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,53,"onUpdateCursor","(Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,54,"requestHideSelf","(I)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,55,"onKeyDown","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,56,"onKeyLongPress","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,57,"onKeyMultiple","(IILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,58,"onKeyUp","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,59,"onTrackballEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,60,"onAppPrivateCommand","(Ljava/lang/String;Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,61,"sendDownUpKeyEvents","(I)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,62,"sendDefaultEditorAction","(Z)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,63,"sendKeyChar","(C)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,64,"onExtractedSelectionChanged","(II)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,65,"onExtractedTextClicked","()V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,66,"onExtractedCursorMovement","(II)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,67,"onExtractTextContextMenuItem","(I)Z")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,68,"getTextForImeAction","(I)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,69,"onUpdateExtractingVisibility","(Landroid/view/inputmethod/EditorInfo;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,70,"onUpdateExtractingViews","(Landroid/view/inputmethod/EditorInfo;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,71,"onExtractingInputChanged","(Landroid/view/inputmethod/EditorInfo;)V")
J2CPP_DEFINE_METHOD(android::inputmethodservice::InputMethodService,72,"dump","(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[java.lang.String)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
