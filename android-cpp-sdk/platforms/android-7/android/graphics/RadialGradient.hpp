/*================================================================================
  code generated by: java2cpp
  class: android.graphics.RadialGradient
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_RADIALGRADIENT_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_RADIALGRADIENT_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Shader; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Shader_ { class TileMode; } } } }


#include <android/graphics/Shader.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class RadialGradient;
	class RadialGradient
		: public cpp_object<RadialGradient>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit RadialGradient(jobject jobj)
		: cpp_object<RadialGradient>(jobj)
		{
		}

		operator local_ref<android::graphics::Shader>() const;


		RadialGradient(cpp_float const&, cpp_float const&, cpp_float const&, local_ref< cpp_int_array<1> > const&, local_ref< cpp_float_array<1> > const&, local_ref< android::graphics::Shader_::TileMode > const&);
		RadialGradient(cpp_float const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Shader_::TileMode > const&);
	}; //class RadialGradient

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_RADIALGRADIENT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_RADIALGRADIENT_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_RADIALGRADIENT_HPP_IMPL

namespace j2cpp {



android::graphics::RadialGradient::operator local_ref<android::graphics::Shader>() const
{
	return local_ref<android::graphics::Shader>(get_jtype());
}


android::graphics::RadialGradient::RadialGradient(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, local_ref< cpp_int_array<1> > const &a3, local_ref< cpp_float_array<1> > const &a4, local_ref< android::graphics::Shader_::TileMode > const &a5)
: cpp_object<android::graphics::RadialGradient>(
	environment::get().get_jenv()->NewObject(
		get_class<android::graphics::RadialGradient::J2CPP_CLASS_NAME>(),
		get_method_id<android::graphics::RadialGradient::J2CPP_CLASS_NAME, android::graphics::RadialGradient::J2CPP_METHOD_NAME(0), android::graphics::RadialGradient::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
	)
)
{
}



android::graphics::RadialGradient::RadialGradient(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_int const &a3, cpp_int const &a4, local_ref< android::graphics::Shader_::TileMode > const &a5)
: cpp_object<android::graphics::RadialGradient>(
	environment::get().get_jenv()->NewObject(
		get_class<android::graphics::RadialGradient::J2CPP_CLASS_NAME>(),
		get_method_id<android::graphics::RadialGradient::J2CPP_CLASS_NAME, android::graphics::RadialGradient::J2CPP_METHOD_NAME(1), android::graphics::RadialGradient::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
	)
)
{
}



J2CPP_DEFINE_CLASS(android::graphics::RadialGradient,"android/graphics/RadialGradient")
J2CPP_DEFINE_METHOD(android::graphics::RadialGradient,0,"<init>","(FFF[I[FLandroid/graphics/Shader$TileMode;)V")
J2CPP_DEFINE_METHOD(android::graphics::RadialGradient,1,"<init>","(FFFIILandroid/graphics/Shader$TileMode;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_RADIALGRADIENT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
