/*================================================================================
  code generated by: java2cpp
  class: android.graphics.drawable.NinePatchDrawable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_DRAWABLE_NINEPATCHDRAWABLE_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_DRAWABLE_NINEPATCHDRAWABLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlPullParser; } } } }
namespace j2cpp { namespace android { namespace graphics { class Paint; } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace graphics { class Region; } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class Drawable; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { namespace Drawable_ { class ConstantState; } } } } }
namespace j2cpp { namespace android { namespace graphics { class NinePatch; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { class ColorFilter; } } }
namespace j2cpp { namespace android { namespace content { namespace res { class Resources; } } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace util { class DisplayMetrics; } } }


#include <android/content/res/Resources.hpp>
#include <android/graphics/Bitmap.hpp>
#include <android/graphics/Canvas.hpp>
#include <android/graphics/ColorFilter.hpp>
#include <android/graphics/NinePatch.hpp>
#include <android/graphics/Paint.hpp>
#include <android/graphics/Rect.hpp>
#include <android/graphics/Region.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/util/DisplayMetrics.hpp>
#include <java/lang/String.hpp>
#include <org/xmlpull/v1/XmlPullParser.hpp>


namespace j2cpp {

namespace android { namespace graphics { namespace drawable {

	class NinePatchDrawable;
	class NinePatchDrawable
		: public cpp_object<NinePatchDrawable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)

		NinePatchDrawable(jobject jobj)
		: cpp_object<NinePatchDrawable>(jobj)
		{
		}

		void setTargetDensity(local_ref< android::graphics::Canvas > const&);
		void setTargetDensity(local_ref< android::util::DisplayMetrics > const&);
		void setTargetDensity(cpp_int const&);
		void draw(local_ref< android::graphics::Canvas > const&);
		cpp_int getChangingConfigurations();
		cpp_boolean getPadding(local_ref< android::graphics::Rect > const&);
		void setAlpha(cpp_int const&);
		void setColorFilter(local_ref< android::graphics::ColorFilter > const&);
		void setDither(cpp_boolean const&);
		void setFilterBitmap(cpp_boolean const&);
		void inflate(local_ref< android::content::res::Resources > const&, local_ref< org::xmlpull::v1::XmlPullParser > const&, local_ref< android::util::AttributeSet > const&);
		local_ref< android::graphics::Paint > getPaint();
		cpp_int getIntrinsicWidth();
		cpp_int getIntrinsicHeight();
		cpp_int getMinimumWidth();
		cpp_int getMinimumHeight();
		cpp_int getOpacity();
		local_ref< android::graphics::Region > getTransparentRegion();
		local_ref< android::graphics::drawable::Drawable_::ConstantState > getConstantState();
		local_ref< android::graphics::drawable::Drawable > mutate();
	}; //class NinePatchDrawable

} //namespace drawable
} //namespace graphics
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_DRAWABLE_NINEPATCHDRAWABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_DRAWABLE_NINEPATCHDRAWABLE_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_DRAWABLE_NINEPATCHDRAWABLE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::graphics::drawable::NinePatchDrawable > create< android::graphics::drawable::NinePatchDrawable>(local_ref< android::graphics::Bitmap > const &a0, local_ref< cpp_byte_array<1> > const &a1, local_ref< android::graphics::Rect > const &a2, local_ref< java::lang::String > const &a3)
{
	return local_ref< android::graphics::drawable::NinePatchDrawable >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME, android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_NAME(0), android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::drawable::NinePatchDrawable > create< android::graphics::drawable::NinePatchDrawable>(local_ref< android::content::res::Resources > const &a0, local_ref< android::graphics::Bitmap > const &a1, local_ref< cpp_byte_array<1> > const &a2, local_ref< android::graphics::Rect > const &a3, local_ref< java::lang::String > const &a4)
{
	return local_ref< android::graphics::drawable::NinePatchDrawable >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME, android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_NAME(1), android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::drawable::NinePatchDrawable > create< android::graphics::drawable::NinePatchDrawable>(local_ref< android::graphics::NinePatch > const &a0)
{
	return local_ref< android::graphics::drawable::NinePatchDrawable >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME, android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_NAME(2), android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::drawable::NinePatchDrawable > create< android::graphics::drawable::NinePatchDrawable>(local_ref< android::content::res::Resources > const &a0, local_ref< android::graphics::NinePatch > const &a1)
{
	return local_ref< android::graphics::drawable::NinePatchDrawable >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::drawable::NinePatchDrawable::J2CPP_CLASS_NAME, android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_NAME(3), android::graphics::drawable::NinePatchDrawable::J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setTargetDensity(local_ref< android::graphics::Canvas > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setTargetDensity(local_ref< android::util::DisplayMetrics > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setTargetDensity(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::draw(local_ref< android::graphics::Canvas > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::drawable::NinePatchDrawable::getChangingConfigurations()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_boolean android::graphics::drawable::NinePatchDrawable::getPadding(local_ref< android::graphics::Rect > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setAlpha(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setColorFilter(local_ref< android::graphics::ColorFilter > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setDither(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::setFilterBitmap(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::drawable::NinePatchDrawable::inflate(local_ref< android::content::res::Resources > const &a0, local_ref< org::xmlpull::v1::XmlPullParser > const &a1, local_ref< android::util::AttributeSet > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< android::graphics::Paint > android::graphics::drawable::NinePatchDrawable::getPaint()
{
	return local_ref< android::graphics::Paint >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

cpp_int android::graphics::drawable::NinePatchDrawable::getIntrinsicWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

cpp_int android::graphics::drawable::NinePatchDrawable::getIntrinsicHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_int android::graphics::drawable::NinePatchDrawable::getMinimumWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_int android::graphics::drawable::NinePatchDrawable::getMinimumHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

cpp_int android::graphics::drawable::NinePatchDrawable::getOpacity()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>()
		)
	);
}

local_ref< android::graphics::Region > android::graphics::drawable::NinePatchDrawable::getTransparentRegion()
{
	return local_ref< android::graphics::Region >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

local_ref< android::graphics::drawable::Drawable_::ConstantState > android::graphics::drawable::NinePatchDrawable::getConstantState()
{
	return local_ref< android::graphics::drawable::Drawable_::ConstantState >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>()
		)
	);
}

local_ref< android::graphics::drawable::Drawable > android::graphics::drawable::NinePatchDrawable::mutate()
{
	return local_ref< android::graphics::drawable::Drawable >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::graphics::drawable::NinePatchDrawable,"android/graphics/drawable/NinePatchDrawable")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,0,"<init>","(Landroid/graphics/Bitmap;[BLandroid/graphics/Rect;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,1,"<init>","(Landroid/content/res/Resources;Landroid/graphics/Bitmap;[BLandroid/graphics/Rect;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,2,"<init>","(Landroid/graphics/NinePatch;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,3,"<init>","(Landroid/content/res/Resources;Landroid/graphics/NinePatch;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,4,"setTargetDensity","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,5,"setTargetDensity","(Landroid/util/DisplayMetrics;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,6,"setTargetDensity","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,7,"draw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,8,"getChangingConfigurations","()I")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,9,"getPadding","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,10,"setAlpha","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,11,"setColorFilter","(Landroid/graphics/ColorFilter;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,12,"setDither","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,13,"setFilterBitmap","(Z)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,14,"inflate","(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,15,"getPaint","()Landroid/graphics/Paint;")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,16,"getIntrinsicWidth","()I")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,17,"getIntrinsicHeight","()I")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,18,"getMinimumWidth","()I")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,19,"getMinimumHeight","()I")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,20,"getOpacity","()I")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,21,"getTransparentRegion","()Landroid/graphics/Region;")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,22,"getConstantState","()Landroid/graphics/drawable/Drawable$ConstantState;")
J2CPP_DEFINE_METHOD(android::graphics::drawable::NinePatchDrawable,23,"mutate","()Landroid/graphics/drawable/Drawable;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_DRAWABLE_NINEPATCHDRAWABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
