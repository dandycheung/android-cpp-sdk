/*================================================================================
  code generated by: java2cpp
  class: android.graphics.LayerRasterizer
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_LAYERRASTERIZER_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_LAYERRASTERIZER_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { class Paint; } } }
namespace j2cpp { namespace android { namespace graphics { class Rasterizer; } } }


#include <android/graphics/Paint.hpp>
#include <android/graphics/Rasterizer.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class LayerRasterizer;
	class LayerRasterizer
		: public cpp_object<LayerRasterizer>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit LayerRasterizer(jobject jobj)
		: cpp_object<LayerRasterizer>(jobj)
		{
		}

		operator local_ref<android::graphics::Rasterizer>() const;


		LayerRasterizer();
		void addLayer(local_ref< android::graphics::Paint > const&, cpp_float const&, cpp_float const&);
		void addLayer(local_ref< android::graphics::Paint > const&);
	}; //class LayerRasterizer

} //namespace graphics
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_LAYERRASTERIZER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_LAYERRASTERIZER_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_LAYERRASTERIZER_HPP_IMPL

namespace j2cpp {



android::graphics::LayerRasterizer::operator local_ref<android::graphics::Rasterizer>() const
{
	return local_ref<android::graphics::Rasterizer>(get_jtype());
}


android::graphics::LayerRasterizer::LayerRasterizer()
: cpp_object<android::graphics::LayerRasterizer>(
	environment::get().get_jenv()->NewObject(
		get_class<android::graphics::LayerRasterizer::J2CPP_CLASS_NAME>(),
		get_method_id<android::graphics::LayerRasterizer::J2CPP_CLASS_NAME, android::graphics::LayerRasterizer::J2CPP_METHOD_NAME(0), android::graphics::LayerRasterizer::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


void android::graphics::LayerRasterizer::addLayer(local_ref< android::graphics::Paint > const &a0, cpp_float const &a1, cpp_float const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::LayerRasterizer::addLayer(local_ref< android::graphics::Paint > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::graphics::LayerRasterizer,"android/graphics/LayerRasterizer")
J2CPP_DEFINE_METHOD(android::graphics::LayerRasterizer,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::LayerRasterizer,1,"addLayer","(Landroid/graphics/Paint;FF)V")
J2CPP_DEFINE_METHOD(android::graphics::LayerRasterizer,2,"addLayer","(Landroid/graphics/Paint;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_LAYERRASTERIZER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
