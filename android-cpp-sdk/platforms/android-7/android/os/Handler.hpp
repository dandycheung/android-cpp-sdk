/*================================================================================
  code generated by: java2cpp
  class: android.os.Handler
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_HANDLER_HPP_DECL
#define J2CPP_ANDROID_OS_HANDLER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Runnable; } } }
namespace j2cpp { namespace android { namespace util { class Printer; } } }
namespace j2cpp { namespace android { namespace os { namespace Handler_ { class Callback; } } } }
namespace j2cpp { namespace android { namespace os { class Message; } } }
namespace j2cpp { namespace android { namespace os { class Looper; } } }


#include <android/os/Handler.hpp>
#include <android/os/Looper.hpp>
#include <android/os/Message.hpp>
#include <android/util/Printer.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/Runnable.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace os {

	class Handler;
	namespace Handler_ {

		class Callback;
		class Callback
			: public cpp_object<Callback>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit Callback(jobject jobj)
			: cpp_object<Callback>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			cpp_boolean handleMessage(local_ref< android::os::Message > const&);
		}; //class Callback

	} //namespace Handler_

	class Handler
		: public cpp_object<Handler>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)

		typedef Handler_::Callback Callback;

		explicit Handler(jobject jobj)
		: cpp_object<Handler>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Handler();
		Handler(local_ref< android::os::Handler_::Callback > const&);
		Handler(local_ref< android::os::Looper > const&);
		Handler(local_ref< android::os::Looper > const&, local_ref< android::os::Handler_::Callback > const&);
		void handleMessage(local_ref< android::os::Message > const&);
		void dispatchMessage(local_ref< android::os::Message > const&);
		local_ref< android::os::Message > obtainMessage();
		local_ref< android::os::Message > obtainMessage(cpp_int const&);
		local_ref< android::os::Message > obtainMessage(cpp_int const&, local_ref< java::lang::Object > const&);
		local_ref< android::os::Message > obtainMessage(cpp_int const&, cpp_int const&, cpp_int const&);
		local_ref< android::os::Message > obtainMessage(cpp_int const&, cpp_int const&, cpp_int const&, local_ref< java::lang::Object > const&);
		cpp_boolean post(local_ref< java::lang::Runnable > const&);
		cpp_boolean postAtTime(local_ref< java::lang::Runnable > const&, cpp_long const&);
		cpp_boolean postAtTime(local_ref< java::lang::Runnable > const&, local_ref< java::lang::Object > const&, cpp_long const&);
		cpp_boolean postDelayed(local_ref< java::lang::Runnable > const&, cpp_long const&);
		cpp_boolean postAtFrontOfQueue(local_ref< java::lang::Runnable > const&);
		void removeCallbacks(local_ref< java::lang::Runnable > const&);
		void removeCallbacks(local_ref< java::lang::Runnable > const&, local_ref< java::lang::Object > const&);
		cpp_boolean sendMessage(local_ref< android::os::Message > const&);
		cpp_boolean sendEmptyMessage(cpp_int const&);
		cpp_boolean sendEmptyMessageDelayed(cpp_int const&, cpp_long const&);
		cpp_boolean sendEmptyMessageAtTime(cpp_int const&, cpp_long const&);
		cpp_boolean sendMessageDelayed(local_ref< android::os::Message > const&, cpp_long const&);
		cpp_boolean sendMessageAtTime(local_ref< android::os::Message > const&, cpp_long const&);
		cpp_boolean sendMessageAtFrontOfQueue(local_ref< android::os::Message > const&);
		void removeMessages(cpp_int const&);
		void removeMessages(cpp_int const&, local_ref< java::lang::Object > const&);
		void removeCallbacksAndMessages(local_ref< java::lang::Object > const&);
		cpp_boolean hasMessages(cpp_int const&);
		cpp_boolean hasMessages(cpp_int const&, local_ref< java::lang::Object > const&);
		local_ref< android::os::Looper > getLooper();
		void dump(local_ref< android::util::Printer > const&, local_ref< java::lang::String > const&);
		local_ref< java::lang::String > toString();
	}; //class Handler

} //namespace os
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_HANDLER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_HANDLER_HPP_IMPL
#define J2CPP_ANDROID_OS_HANDLER_HPP_IMPL

namespace j2cpp {




android::os::Handler_::Callback::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

cpp_boolean android::os::Handler_::Callback::handleMessage(local_ref< android::os::Message > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::Handler_::Callback,"android/os/Handler$Callback")
J2CPP_DEFINE_METHOD(android::os::Handler_::Callback,0,"handleMessage","(Landroid/os/Message;)Z")



android::os::Handler::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::os::Handler::Handler()
: cpp_object<android::os::Handler>(
	environment::get().get_jenv()->NewObject(
		get_class<android::os::Handler::J2CPP_CLASS_NAME>(),
		get_method_id<android::os::Handler::J2CPP_CLASS_NAME, android::os::Handler::J2CPP_METHOD_NAME(0), android::os::Handler::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}



android::os::Handler::Handler(local_ref< android::os::Handler_::Callback > const &a0)
: cpp_object<android::os::Handler>(
	environment::get().get_jenv()->NewObject(
		get_class<android::os::Handler::J2CPP_CLASS_NAME>(),
		get_method_id<android::os::Handler::J2CPP_CLASS_NAME, android::os::Handler::J2CPP_METHOD_NAME(1), android::os::Handler::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}



android::os::Handler::Handler(local_ref< android::os::Looper > const &a0)
: cpp_object<android::os::Handler>(
	environment::get().get_jenv()->NewObject(
		get_class<android::os::Handler::J2CPP_CLASS_NAME>(),
		get_method_id<android::os::Handler::J2CPP_CLASS_NAME, android::os::Handler::J2CPP_METHOD_NAME(2), android::os::Handler::J2CPP_METHOD_SIGNATURE(2), false>(),
		a0.get_jtype()
	)
)
{
}



android::os::Handler::Handler(local_ref< android::os::Looper > const &a0, local_ref< android::os::Handler_::Callback > const &a1)
: cpp_object<android::os::Handler>(
	environment::get().get_jenv()->NewObject(
		get_class<android::os::Handler::J2CPP_CLASS_NAME>(),
		get_method_id<android::os::Handler::J2CPP_CLASS_NAME, android::os::Handler::J2CPP_METHOD_NAME(3), android::os::Handler::J2CPP_METHOD_SIGNATURE(3), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}


void android::os::Handler::handleMessage(local_ref< android::os::Message > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::Handler::dispatchMessage(local_ref< android::os::Message > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage()
{
	return local_ref< android::os::Message >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(cpp_int const &a0)
{
	return local_ref< android::os::Message >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(cpp_int const &a0, local_ref< java::lang::Object > const &a1)
{
	return local_ref< android::os::Message >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return local_ref< android::os::Message >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< android::os::Message > android::os::Handler::obtainMessage(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< java::lang::Object > const &a3)
{
	return local_ref< android::os::Message >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::post(local_ref< java::lang::Runnable > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::postAtTime(local_ref< java::lang::Runnable > const &a0, cpp_long const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::postAtTime(local_ref< java::lang::Runnable > const &a0, local_ref< java::lang::Object > const &a1, cpp_long const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::postDelayed(local_ref< java::lang::Runnable > const &a0, cpp_long const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::postAtFrontOfQueue(local_ref< java::lang::Runnable > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::Handler::removeCallbacks(local_ref< java::lang::Runnable > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::Handler::removeCallbacks(local_ref< java::lang::Runnable > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendMessage(local_ref< android::os::Message > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendEmptyMessage(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendEmptyMessageDelayed(cpp_int const &a0, cpp_long const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendEmptyMessageAtTime(cpp_int const &a0, cpp_long const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendMessageDelayed(local_ref< android::os::Message > const &a0, cpp_long const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendMessageAtTime(local_ref< android::os::Message > const &a0, cpp_long const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::sendMessageAtFrontOfQueue(local_ref< android::os::Message > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::Handler::removeMessages(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::Handler::removeMessages(cpp_int const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::os::Handler::removeCallbacksAndMessages(local_ref< java::lang::Object > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::hasMessages(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::os::Handler::hasMessages(cpp_int const &a0, local_ref< java::lang::Object > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::os::Looper > android::os::Handler::getLooper()
{
	return local_ref< android::os::Looper >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

void android::os::Handler::dump(local_ref< android::util::Printer > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::os::Handler::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::Handler,"android/os/Handler")
J2CPP_DEFINE_METHOD(android::os::Handler,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::Handler,1,"<init>","(Landroid/os/Handler$Callback;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,2,"<init>","(Landroid/os/Looper;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,3,"<init>","(Landroid/os/Looper;Landroid/os/Handler$Callback;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,4,"handleMessage","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,5,"dispatchMessage","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,6,"obtainMessage","()Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,7,"obtainMessage","(I)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,8,"obtainMessage","(ILjava/lang/Object;)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,9,"obtainMessage","(III)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,10,"obtainMessage","(IIILjava/lang/Object;)Landroid/os/Message;")
J2CPP_DEFINE_METHOD(android::os::Handler,11,"post","(Ljava/lang/Runnable;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,12,"postAtTime","(Ljava/lang/Runnable;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,13,"postAtTime","(Ljava/lang/Runnable;Ljava/lang/Object;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,14,"postDelayed","(Ljava/lang/Runnable;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,15,"postAtFrontOfQueue","(Ljava/lang/Runnable;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,16,"removeCallbacks","(Ljava/lang/Runnable;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,17,"removeCallbacks","(Ljava/lang/Runnable;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,18,"sendMessage","(Landroid/os/Message;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,19,"sendEmptyMessage","(I)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,20,"sendEmptyMessageDelayed","(IJ)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,21,"sendEmptyMessageAtTime","(IJ)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,22,"sendMessageDelayed","(Landroid/os/Message;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,23,"sendMessageAtTime","(Landroid/os/Message;J)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,24,"sendMessageAtFrontOfQueue","(Landroid/os/Message;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,25,"removeMessages","(I)V")
J2CPP_DEFINE_METHOD(android::os::Handler,26,"removeMessages","(ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,27,"removeCallbacksAndMessages","(Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,28,"hasMessages","(I)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,29,"hasMessages","(ILjava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::os::Handler,30,"getLooper","()Landroid/os/Looper;")
J2CPP_DEFINE_METHOD(android::os::Handler,31,"dump","(Landroid/util/Printer;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::os::Handler,32,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_HANDLER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
