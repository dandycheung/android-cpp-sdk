/*================================================================================
  code generated by: java2cpp
  class: android.hardware.SensorListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_HARDWARE_SENSORLISTENER_HPP_DECL
#define J2CPP_ANDROID_HARDWARE_SENSORLISTENER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace hardware {

	class SensorListener;
	class SensorListener
		: public cpp_object<SensorListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit SensorListener(jobject jobj)
		: cpp_object<SensorListener>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void onSensorChanged(cpp_int const&, local_ref< cpp_float_array<1> > const&);
		void onAccuracyChanged(cpp_int const&, cpp_int const&);
	}; //class SensorListener

} //namespace hardware
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_HARDWARE_SENSORLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_HARDWARE_SENSORLISTENER_HPP_IMPL
#define J2CPP_ANDROID_HARDWARE_SENSORLISTENER_HPP_IMPL

namespace j2cpp {



android::hardware::SensorListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void android::hardware::SensorListener::onSensorChanged(cpp_int const &a0, local_ref< cpp_float_array<1> > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::hardware::SensorListener::onAccuracyChanged(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::hardware::SensorListener,"android/hardware/SensorListener")
J2CPP_DEFINE_METHOD(android::hardware::SensorListener,0,"onSensorChanged","(I[F)V")
J2CPP_DEFINE_METHOD(android::hardware::SensorListener,1,"onAccuracyChanged","(II)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_HARDWARE_SENSORLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
