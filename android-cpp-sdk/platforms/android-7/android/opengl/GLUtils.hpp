/*================================================================================
  code generated by: java2cpp
  class: android.opengl.GLUtils
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_GLUTILS_HPP_DECL
#define J2CPP_ANDROID_OPENGL_GLUTILS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }


#include <android/graphics/Bitmap.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace opengl {

	class GLUtils;
	class GLUtils
		: public cpp_object<GLUtils>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		explicit GLUtils(jobject jobj)
		: cpp_object<GLUtils>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static cpp_int getInternalFormat(local_ref< android::graphics::Bitmap > const&);
		static cpp_int getType(local_ref< android::graphics::Bitmap > const&);
		static void texImage2D(cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap > const&, cpp_int const&);
		static void texImage2D(cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap > const&, cpp_int const&, cpp_int const&);
		static void texImage2D(cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap > const&, cpp_int const&);
		static void texSubImage2D(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap > const&);
		static void texSubImage2D(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap > const&, cpp_int const&, cpp_int const&);
	}; //class GLUtils

} //namespace opengl
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_GLUTILS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_GLUTILS_HPP_IMPL
#define J2CPP_ANDROID_OPENGL_GLUTILS_HPP_IMPL

namespace j2cpp {



android::opengl::GLUtils::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


cpp_int android::opengl::GLUtils::getInternalFormat(local_ref< android::graphics::Bitmap > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::opengl::GLUtils::getType(local_ref< android::graphics::Bitmap > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}

void android::opengl::GLUtils::texImage2D(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::graphics::Bitmap > const &a3, cpp_int const &a4)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::opengl::GLUtils::texImage2D(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::graphics::Bitmap > const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::opengl::GLUtils::texImage2D(cpp_int const &a0, cpp_int const &a1, local_ref< android::graphics::Bitmap > const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::opengl::GLUtils::texSubImage2D(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, local_ref< android::graphics::Bitmap > const &a4)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::opengl::GLUtils::texSubImage2D(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, local_ref< android::graphics::Bitmap > const &a4, cpp_int const &a5, cpp_int const &a6)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::opengl::GLUtils,"android/opengl/GLUtils")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,1,"getInternalFormat","(Landroid/graphics/Bitmap;)I")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,2,"getType","(Landroid/graphics/Bitmap;)I")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,3,"texImage2D","(IIILandroid/graphics/Bitmap;I)V")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,4,"texImage2D","(IIILandroid/graphics/Bitmap;II)V")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,5,"texImage2D","(IILandroid/graphics/Bitmap;I)V")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,6,"texSubImage2D","(IIIILandroid/graphics/Bitmap;)V")
J2CPP_DEFINE_METHOD(android::opengl::GLUtils,7,"texSubImage2D","(IIIILandroid/graphics/Bitmap;II)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_GLUTILS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
