/*================================================================================
  code generated by: java2cpp
  class: android.opengl.Visibility
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_VISIBILITY_HPP_DECL
#define J2CPP_ANDROID_OPENGL_VISIBILITY_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace opengl {

	class Visibility;
	class Visibility
		: public cpp_object<Visibility>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit Visibility(jobject jobj)
		: cpp_object<Visibility>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		Visibility();
		static cpp_int visibilityTest(local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&);
		static cpp_int frustumCullSpheres(local_ref< cpp_float_array<1> > const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&);
		static void computeBoundingSphere(local_ref< cpp_float_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< cpp_float_array<1> > const&, cpp_int const&);
	}; //class Visibility

} //namespace opengl
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_VISIBILITY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OPENGL_VISIBILITY_HPP_IMPL
#define J2CPP_ANDROID_OPENGL_VISIBILITY_HPP_IMPL

namespace j2cpp {



android::opengl::Visibility::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::opengl::Visibility::Visibility()
: cpp_object<android::opengl::Visibility>(
	environment::get().get_jenv()->NewObject(
		get_class<android::opengl::Visibility::J2CPP_CLASS_NAME>(),
		get_method_id<android::opengl::Visibility::J2CPP_CLASS_NAME, android::opengl::Visibility::J2CPP_METHOD_NAME(0), android::opengl::Visibility::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


cpp_int android::opengl::Visibility::visibilityTest(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, local_ref< cpp_float_array<1> > const &a2, cpp_int const &a3, local_ref< cpp_char_array<1> > const &a4, cpp_int const &a5, cpp_int const &a6)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}

cpp_int android::opengl::Visibility::frustumCullSpheres(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, local_ref< cpp_float_array<1> > const &a2, cpp_int const &a3, cpp_int const &a4, local_ref< cpp_int_array<1> > const &a5, cpp_int const &a6, cpp_int const &a7)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype()
		)
	);
}

void android::opengl::Visibility::computeBoundingSphere(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< cpp_float_array<1> > const &a3, cpp_int const &a4)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::opengl::Visibility,"android/opengl/Visibility")
J2CPP_DEFINE_METHOD(android::opengl::Visibility,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::opengl::Visibility,1,"visibilityTest","([FI[FI[CII)I")
J2CPP_DEFINE_METHOD(android::opengl::Visibility,2,"frustumCullSpheres","([FI[FII[III)I")
J2CPP_DEFINE_METHOD(android::opengl::Visibility,3,"computeBoundingSphere","([FII[FI)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OPENGL_VISIBILITY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
