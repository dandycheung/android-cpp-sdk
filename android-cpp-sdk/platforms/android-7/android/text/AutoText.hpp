/*================================================================================
  code generated by: java2cpp
  class: android.text.AutoText
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_AUTOTEXT_HPP_DECL
#define J2CPP_ANDROID_TEXT_AUTOTEXT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }


#include <android/view/View.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace text {

	class AutoText;
	class AutoText
		: public cpp_object<AutoText>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit AutoText(jobject jobj)
		: cpp_object<AutoText>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< java::lang::String > get(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, local_ref< android::view::View > const&);
		static cpp_int getSize(local_ref< android::view::View > const&);
	}; //class AutoText

} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_AUTOTEXT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_AUTOTEXT_HPP_IMPL
#define J2CPP_ANDROID_TEXT_AUTOTEXT_HPP_IMPL

namespace j2cpp {



android::text::AutoText::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


local_ref< java::lang::String > android::text::AutoText::get(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::view::View > const &a3)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_int android::text::AutoText::getSize(local_ref< android::view::View > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::AutoText,"android/text/AutoText")
J2CPP_DEFINE_METHOD(android::text::AutoText,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::AutoText,1,"get","(Ljava/lang/CharSequence;IILandroid/view/View;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::text::AutoText,2,"getSize","(Landroid/view/View;)I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_AUTOTEXT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
