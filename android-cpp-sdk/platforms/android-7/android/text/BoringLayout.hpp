/*================================================================================
  code generated by: java2cpp
  class: android.text.BoringLayout
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_BORINGLAYOUT_HPP_DECL
#define J2CPP_ANDROID_TEXT_BORINGLAYOUT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace graphics { class Paint; } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class FontMetricsInt; } } } }
namespace j2cpp { namespace android { namespace graphics { class Path; } } }
namespace j2cpp { namespace android { namespace text { namespace TextUtils_ { class TruncateAt; } } } }
namespace j2cpp { namespace android { namespace text { class Layout; } } }
namespace j2cpp { namespace android { namespace text { class TextPaint; } } }
namespace j2cpp { namespace android { namespace text { namespace TextUtils_ { class EllipsizeCallback; } } } }
namespace j2cpp { namespace android { namespace text { namespace Layout_ { class Alignment; } } } }
namespace j2cpp { namespace android { namespace text { namespace Layout_ { class Directions; } } } }
namespace j2cpp { namespace android { namespace text { namespace BoringLayout_ { class Metrics; } } } }


#include <android/graphics/Canvas.hpp>
#include <android/graphics/Paint.hpp>
#include <android/graphics/Path.hpp>
#include <android/text/BoringLayout.hpp>
#include <android/text/Layout.hpp>
#include <android/text/TextPaint.hpp>
#include <android/text/TextUtils.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace text {

	class BoringLayout;
	namespace BoringLayout_ {

		class Metrics;
		class Metrics
			: public cpp_object<Metrics>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_FIELD(0)

			explicit Metrics(jobject jobj)
			: cpp_object<Metrics>(jobj)
, width(jobj)
			{
			}

			operator local_ref<android::graphics::Paint_::FontMetricsInt>() const;


			Metrics();
			local_ref< java::lang::String > toString();

			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > width;
		}; //class Metrics

	} //namespace BoringLayout_

	class BoringLayout
		: public cpp_object<BoringLayout>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)

		typedef BoringLayout_::Metrics Metrics;

		explicit BoringLayout(jobject jobj)
		: cpp_object<BoringLayout>(jobj)
		{
		}

		operator local_ref<android::text::Layout>() const;
		operator local_ref<android::text::TextUtils_::EllipsizeCallback>() const;


		BoringLayout(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, cpp_int const&, local_ref< android::text::Layout_::Alignment > const&, cpp_float const&, cpp_float const&, local_ref< android::text::BoringLayout_::Metrics > const&, cpp_boolean const&);
		BoringLayout(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, cpp_int const&, local_ref< android::text::Layout_::Alignment > const&, cpp_float const&, cpp_float const&, local_ref< android::text::BoringLayout_::Metrics > const&, cpp_boolean const&, local_ref< android::text::TextUtils_::TruncateAt > const&, cpp_int const&);
		static local_ref< android::text::BoringLayout > make(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, cpp_int const&, local_ref< android::text::Layout_::Alignment > const&, cpp_float const&, cpp_float const&, local_ref< android::text::BoringLayout_::Metrics > const&, cpp_boolean const&);
		static local_ref< android::text::BoringLayout > make(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, cpp_int const&, local_ref< android::text::Layout_::Alignment > const&, cpp_float const&, cpp_float const&, local_ref< android::text::BoringLayout_::Metrics > const&, cpp_boolean const&, local_ref< android::text::TextUtils_::TruncateAt > const&, cpp_int const&);
		local_ref< android::text::BoringLayout > replaceOrMake(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, cpp_int const&, local_ref< android::text::Layout_::Alignment > const&, cpp_float const&, cpp_float const&, local_ref< android::text::BoringLayout_::Metrics > const&, cpp_boolean const&);
		local_ref< android::text::BoringLayout > replaceOrMake(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, cpp_int const&, local_ref< android::text::Layout_::Alignment > const&, cpp_float const&, cpp_float const&, local_ref< android::text::BoringLayout_::Metrics > const&, cpp_boolean const&, local_ref< android::text::TextUtils_::TruncateAt > const&, cpp_int const&);
		static local_ref< android::text::BoringLayout_::Metrics > isBoring(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&);
		static local_ref< android::text::BoringLayout_::Metrics > isBoring(local_ref< java::lang::CharSequence > const&, local_ref< android::text::TextPaint > const&, local_ref< android::text::BoringLayout_::Metrics > const&);
		cpp_int getHeight();
		cpp_int getLineCount();
		cpp_int getLineTop(cpp_int const&);
		cpp_int getLineDescent(cpp_int const&);
		cpp_int getLineStart(cpp_int const&);
		cpp_int getParagraphDirection(cpp_int const&);
		cpp_boolean getLineContainsTab(cpp_int const&);
		cpp_float getLineMax(cpp_int const&);
		local_ref< android::text::Layout_::Directions > getLineDirections(cpp_int const&);
		cpp_int getTopPadding();
		cpp_int getBottomPadding();
		cpp_int getEllipsisCount(cpp_int const&);
		cpp_int getEllipsisStart(cpp_int const&);
		cpp_int getEllipsizedWidth();
		void draw(local_ref< android::graphics::Canvas > const&, local_ref< android::graphics::Path > const&, local_ref< android::graphics::Paint > const&, cpp_int const&);
		void ellipsized(cpp_int const&, cpp_int const&);
	}; //class BoringLayout

} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_BORINGLAYOUT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_BORINGLAYOUT_HPP_IMPL
#define J2CPP_ANDROID_TEXT_BORINGLAYOUT_HPP_IMPL

namespace j2cpp {




android::text::BoringLayout_::Metrics::operator local_ref<android::graphics::Paint_::FontMetricsInt>() const
{
	return local_ref<android::graphics::Paint_::FontMetricsInt>(get_jtype());
}


android::text::BoringLayout_::Metrics::Metrics()
: cpp_object<android::text::BoringLayout_::Metrics>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::BoringLayout_::Metrics::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::BoringLayout_::Metrics::J2CPP_CLASS_NAME, android::text::BoringLayout_::Metrics::J2CPP_METHOD_NAME(0), android::text::BoringLayout_::Metrics::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
, width(get_jtype())
{
}


local_ref< java::lang::String > android::text::BoringLayout_::Metrics::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}



J2CPP_DEFINE_CLASS(android::text::BoringLayout_::Metrics,"android/text/BoringLayout$Metrics")
J2CPP_DEFINE_METHOD(android::text::BoringLayout_::Metrics,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::BoringLayout_::Metrics,1,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::text::BoringLayout_::Metrics,0,"width","I")



android::text::BoringLayout::operator local_ref<android::text::Layout>() const
{
	return local_ref<android::text::Layout>(get_jtype());
}

android::text::BoringLayout::operator local_ref<android::text::TextUtils_::EllipsizeCallback>() const
{
	return local_ref<android::text::TextUtils_::EllipsizeCallback>(get_jtype());
}


android::text::BoringLayout::BoringLayout(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::text::BoringLayout_::Metrics > const &a6, cpp_boolean const &a7)
: cpp_object<android::text::BoringLayout>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::BoringLayout::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::BoringLayout::J2CPP_CLASS_NAME, android::text::BoringLayout::J2CPP_METHOD_NAME(0), android::text::BoringLayout::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype()
	)
)
{
}



android::text::BoringLayout::BoringLayout(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::text::BoringLayout_::Metrics > const &a6, cpp_boolean const &a7, local_ref< android::text::TextUtils_::TruncateAt > const &a8, cpp_int const &a9)
: cpp_object<android::text::BoringLayout>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::BoringLayout::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::BoringLayout::J2CPP_CLASS_NAME, android::text::BoringLayout::J2CPP_METHOD_NAME(1), android::text::BoringLayout::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype()
	)
)
{
}


local_ref< android::text::BoringLayout > android::text::BoringLayout::make(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::text::BoringLayout_::Metrics > const &a6, cpp_boolean const &a7)
{
	return local_ref< android::text::BoringLayout >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype()
		)
	);
}

local_ref< android::text::BoringLayout > android::text::BoringLayout::make(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::text::BoringLayout_::Metrics > const &a6, cpp_boolean const &a7, local_ref< android::text::TextUtils_::TruncateAt > const &a8, cpp_int const &a9)
{
	return local_ref< android::text::BoringLayout >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype()
		)
	);
}

local_ref< android::text::BoringLayout > android::text::BoringLayout::replaceOrMake(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::text::BoringLayout_::Metrics > const &a6, cpp_boolean const &a7)
{
	return local_ref< android::text::BoringLayout >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype()
		)
	);
}

local_ref< android::text::BoringLayout > android::text::BoringLayout::replaceOrMake(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, cpp_int const &a2, local_ref< android::text::Layout_::Alignment > const &a3, cpp_float const &a4, cpp_float const &a5, local_ref< android::text::BoringLayout_::Metrics > const &a6, cpp_boolean const &a7, local_ref< android::text::TextUtils_::TruncateAt > const &a8, cpp_int const &a9)
{
	return local_ref< android::text::BoringLayout >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype()
		)
	);
}

local_ref< android::text::BoringLayout_::Metrics > android::text::BoringLayout::isBoring(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1)
{
	return local_ref< android::text::BoringLayout_::Metrics >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::text::BoringLayout_::Metrics > android::text::BoringLayout::isBoring(local_ref< java::lang::CharSequence > const &a0, local_ref< android::text::TextPaint > const &a1, local_ref< android::text::BoringLayout_::Metrics > const &a2)
{
	return local_ref< android::text::BoringLayout_::Metrics >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_int android::text::BoringLayout::getLineCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

cpp_int android::text::BoringLayout::getLineTop(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getLineDescent(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getLineStart(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getParagraphDirection(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::text::BoringLayout::getLineContainsTab(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::text::BoringLayout::getLineMax(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::text::Layout_::Directions > android::text::BoringLayout::getLineDirections(cpp_int const &a0)
{
	return local_ref< android::text::Layout_::Directions >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getTopPadding()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_int android::text::BoringLayout::getBottomPadding()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_int android::text::BoringLayout::getEllipsisCount(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getEllipsisStart(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::BoringLayout::getEllipsizedWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

void android::text::BoringLayout::draw(local_ref< android::graphics::Canvas > const &a0, local_ref< android::graphics::Path > const &a1, local_ref< android::graphics::Paint > const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::text::BoringLayout::ellipsized(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::BoringLayout,"android/text/BoringLayout")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,0,"<init>","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)V")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,1,"<init>","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)V")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,2,"make","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)Landroid/text/BoringLayout;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,3,"make","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)Landroid/text/BoringLayout;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,4,"replaceOrMake","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)Landroid/text/BoringLayout;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,5,"replaceOrMake","(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)Landroid/text/BoringLayout;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,6,"isBoring","(Ljava/lang/CharSequence;Landroid/text/TextPaint;)Landroid/text/BoringLayout$Metrics;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,7,"isBoring","(Ljava/lang/CharSequence;Landroid/text/TextPaint;Landroid/text/BoringLayout$Metrics;)Landroid/text/BoringLayout$Metrics;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,8,"getHeight","()I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,9,"getLineCount","()I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,10,"getLineTop","(I)I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,11,"getLineDescent","(I)I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,12,"getLineStart","(I)I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,13,"getParagraphDirection","(I)I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,14,"getLineContainsTab","(I)Z")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,15,"getLineMax","(I)F")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,16,"getLineDirections","(I)Landroid/text/Layout$Directions;")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,17,"getTopPadding","()I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,18,"getBottomPadding","()I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,19,"getEllipsisCount","(I)I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,20,"getEllipsisStart","(I)I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,21,"getEllipsizedWidth","()I")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,22,"draw","(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/Paint;I)V")
J2CPP_DEFINE_METHOD(android::text::BoringLayout,23,"ellipsized","(II)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_BORINGLAYOUT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
