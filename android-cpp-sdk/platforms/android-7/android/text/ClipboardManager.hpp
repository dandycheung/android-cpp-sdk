/*================================================================================
  code generated by: java2cpp
  class: android.text.ClipboardManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_DECL
#define J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }


#include <java/lang/CharSequence.hpp>


namespace j2cpp {

namespace android { namespace text {

	class ClipboardManager;
	class ClipboardManager
		: public cpp_object<ClipboardManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		ClipboardManager(jobject jobj)
		: cpp_object<ClipboardManager>(jobj)
		{
		}

		local_ref< java::lang::CharSequence > getText();
		void setText(local_ref< java::lang::CharSequence > const&);
		cpp_boolean hasText();
	}; //class ClipboardManager

} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::text::ClipboardManager > create< android::text::ClipboardManager>()
{
	return local_ref< android::text::ClipboardManager >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::ClipboardManager::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::ClipboardManager::J2CPP_CLASS_NAME, android::text::ClipboardManager::J2CPP_METHOD_NAME(0), android::text::ClipboardManager::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::CharSequence > android::text::ClipboardManager::getText()
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::text::ClipboardManager::setText(local_ref< java::lang::CharSequence > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::text::ClipboardManager::hasText()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::ClipboardManager,"android/text/ClipboardManager")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,1,"getText","()Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,2,"setText","(Ljava/lang/CharSequence;)V")
J2CPP_DEFINE_METHOD(android::text::ClipboardManager,3,"hasText","()Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_CLIPBOARDMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
