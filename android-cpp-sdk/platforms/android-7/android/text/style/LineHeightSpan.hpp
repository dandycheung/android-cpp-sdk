/*================================================================================
  code generated by: java2cpp
  class: android.text.style.LineHeightSpan
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_DECL
#define J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class FontMetricsInt; } } } }
namespace j2cpp { namespace android { namespace text { class TextPaint; } } }
namespace j2cpp { namespace android { namespace text { namespace style { class WrapTogetherSpan; } } } }
namespace j2cpp { namespace android { namespace text { namespace style { class ParagraphStyle; } } } }


#include <android/graphics/Paint.hpp>
#include <android/text/TextPaint.hpp>
#include <android/text/style/ParagraphStyle.hpp>
#include <android/text/style/WrapTogetherSpan.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text { namespace style {

	class LineHeightSpan;
	namespace LineHeightSpan_ {

		class WithDensity;
		class WithDensity
			: public cpp_object<WithDensity>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit WithDensity(jobject jobj)
			: cpp_object<WithDensity>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;
			operator local_ref<android::text::style::LineHeightSpan>() const;


			void chooseHeight(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Paint_::FontMetricsInt > const&, local_ref< android::text::TextPaint > const&);
		}; //class WithDensity

	} //namespace LineHeightSpan_

	class LineHeightSpan
		: public cpp_object<LineHeightSpan>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		typedef LineHeightSpan_::WithDensity WithDensity;

		explicit LineHeightSpan(jobject jobj)
		: cpp_object<LineHeightSpan>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::text::style::ParagraphStyle>() const;
		operator local_ref<android::text::style::WrapTogetherSpan>() const;


		void chooseHeight(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Paint_::FontMetricsInt > const&);
	}; //class LineHeightSpan

} //namespace style
} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_IMPL
#define J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_IMPL

namespace j2cpp {




android::text::style::LineHeightSpan_::WithDensity::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::text::style::LineHeightSpan_::WithDensity::operator local_ref<android::text::style::LineHeightSpan>() const
{
	return local_ref<android::text::style::LineHeightSpan>(get_jtype());
}

void android::text::style::LineHeightSpan_::WithDensity::chooseHeight(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, local_ref< android::graphics::Paint_::FontMetricsInt > const &a5, local_ref< android::text::TextPaint > const &a6)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::style::LineHeightSpan_::WithDensity,"android/text/style/LineHeightSpan$WithDensity")
J2CPP_DEFINE_METHOD(android::text::style::LineHeightSpan_::WithDensity,0,"chooseHeight","(Ljava/lang/CharSequence;IIIILandroid/graphics/Paint$FontMetricsInt;Landroid/text/TextPaint;)V")



android::text::style::LineHeightSpan::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::text::style::LineHeightSpan::operator local_ref<android::text::style::ParagraphStyle>() const
{
	return local_ref<android::text::style::ParagraphStyle>(get_jtype());
}

android::text::style::LineHeightSpan::operator local_ref<android::text::style::WrapTogetherSpan>() const
{
	return local_ref<android::text::style::WrapTogetherSpan>(get_jtype());
}

void android::text::style::LineHeightSpan::chooseHeight(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, local_ref< android::graphics::Paint_::FontMetricsInt > const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::style::LineHeightSpan,"android/text/style/LineHeightSpan")
J2CPP_DEFINE_METHOD(android::text::style::LineHeightSpan,0,"chooseHeight","(Ljava/lang/CharSequence;IIIILandroid/graphics/Paint$FontMetricsInt;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
