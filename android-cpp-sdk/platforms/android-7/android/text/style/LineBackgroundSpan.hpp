/*================================================================================
  code generated by: java2cpp
  class: android.text.style.LineBackgroundSpan
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_LINEBACKGROUNDSPAN_HPP_DECL
#define J2CPP_ANDROID_TEXT_STYLE_LINEBACKGROUNDSPAN_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace android { namespace graphics { class Paint; } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace text { namespace style { class ParagraphStyle; } } } }


#include <android/graphics/Canvas.hpp>
#include <android/graphics/Paint.hpp>
#include <android/text/style/ParagraphStyle.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text { namespace style {

	class LineBackgroundSpan;
	class LineBackgroundSpan
		: public cpp_object<LineBackgroundSpan>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit LineBackgroundSpan(jobject jobj)
		: cpp_object<LineBackgroundSpan>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::text::style::ParagraphStyle>() const;


		void drawBackground(local_ref< android::graphics::Canvas > const&, local_ref< android::graphics::Paint > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, cpp_int const&);
	}; //class LineBackgroundSpan

} //namespace style
} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_LINEBACKGROUNDSPAN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_LINEBACKGROUNDSPAN_HPP_IMPL
#define J2CPP_ANDROID_TEXT_STYLE_LINEBACKGROUNDSPAN_HPP_IMPL

namespace j2cpp {



android::text::style::LineBackgroundSpan::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::text::style::LineBackgroundSpan::operator local_ref<android::text::style::ParagraphStyle>() const
{
	return local_ref<android::text::style::ParagraphStyle>(get_jtype());
}

void android::text::style::LineBackgroundSpan::drawBackground(local_ref< android::graphics::Canvas > const &a0, local_ref< android::graphics::Paint > const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5, cpp_int const &a6, local_ref< java::lang::CharSequence > const &a7, cpp_int const &a8, cpp_int const &a9, cpp_int const &a10)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::style::LineBackgroundSpan,"android/text/style/LineBackgroundSpan")
J2CPP_DEFINE_METHOD(android::text::style::LineBackgroundSpan,0,"drawBackground","(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;III)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_LINEBACKGROUNDSPAN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
