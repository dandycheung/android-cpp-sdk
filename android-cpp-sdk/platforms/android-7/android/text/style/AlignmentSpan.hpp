/*================================================================================
  code generated by: java2cpp
  class: android.text.style.AlignmentSpan
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_HPP_DECL
#define J2CPP_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_HPP_DECL


namespace j2cpp { namespace android { namespace text { namespace Layout_ { class Alignment; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }


#include <android/os/Parcel.hpp>
#include <android/text/Layout.hpp>


namespace j2cpp {

namespace android { namespace text { namespace style {

	class AlignmentSpan;
	namespace AlignmentSpan_ {

		class Standard;
		class Standard
			: public cpp_object<Standard>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)

			Standard(jobject jobj)
			: cpp_object<Standard>(jobj)
			{
			}

			cpp_int getSpanTypeId();
			cpp_int describeContents();
			void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);
			local_ref< android::text::Layout_::Alignment > getAlignment();
		}; //class Standard

	} //namespace AlignmentSpan_

	class AlignmentSpan
		: public cpp_object<AlignmentSpan>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		typedef AlignmentSpan_::Standard Standard;

		AlignmentSpan(jobject jobj)
		: cpp_object<AlignmentSpan>(jobj)
		{
		}

		local_ref< android::text::Layout_::Alignment > getAlignment();
	}; //class AlignmentSpan

} //namespace style
} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_HPP_IMPL
#define J2CPP_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::text::style::AlignmentSpan_::Standard > create< android::text::style::AlignmentSpan_::Standard>(local_ref< android::text::Layout_::Alignment > const &a0)
{
	return local_ref< android::text::style::AlignmentSpan_::Standard >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::style::AlignmentSpan_::Standard::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::style::AlignmentSpan_::Standard::J2CPP_CLASS_NAME, android::text::style::AlignmentSpan_::Standard::J2CPP_METHOD_NAME(0), android::text::style::AlignmentSpan_::Standard::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::text::style::AlignmentSpan_::Standard > create< android::text::style::AlignmentSpan_::Standard>(local_ref< android::os::Parcel > const &a0)
{
	return local_ref< android::text::style::AlignmentSpan_::Standard >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::style::AlignmentSpan_::Standard::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::style::AlignmentSpan_::Standard::J2CPP_CLASS_NAME, android::text::style::AlignmentSpan_::Standard::J2CPP_METHOD_NAME(1), android::text::style::AlignmentSpan_::Standard::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::text::style::AlignmentSpan_::Standard::getSpanTypeId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int android::text::style::AlignmentSpan_::Standard::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::text::style::AlignmentSpan_::Standard::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::text::Layout_::Alignment > android::text::style::AlignmentSpan_::Standard::getAlignment()
{
	return local_ref< android::text::Layout_::Alignment >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::style::AlignmentSpan_::Standard,"android/text/style/AlignmentSpan$Standard")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan_::Standard,0,"<init>","(Landroid/text/Layout$Alignment;)V")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan_::Standard,1,"<init>","(Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan_::Standard,2,"getSpanTypeId","()I")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan_::Standard,3,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan_::Standard,4,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan_::Standard,5,"getAlignment","()Landroid/text/Layout$Alignment;")


local_ref< android::text::Layout_::Alignment > android::text::style::AlignmentSpan::getAlignment()
{
	return local_ref< android::text::Layout_::Alignment >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::style::AlignmentSpan,"android/text/style/AlignmentSpan")
J2CPP_DEFINE_METHOD(android::text::style::AlignmentSpan,0,"getAlignment","()Landroid/text/Layout$Alignment;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
