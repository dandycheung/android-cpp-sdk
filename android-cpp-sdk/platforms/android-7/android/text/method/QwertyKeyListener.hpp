/*================================================================================
  code generated by: java2cpp
  class: android.text.method.QwertyKeyListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_HPP_DECL
#define J2CPP_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace text { class Spannable; } } }
namespace j2cpp { namespace android { namespace text { namespace method { class BaseKeyListener; } } } }
namespace j2cpp { namespace android { namespace text { namespace method { namespace TextKeyListener_ { class Capitalize; } } } } }
namespace j2cpp { namespace android { namespace text { class Editable; } } }


#include <android/text/Editable.hpp>
#include <android/text/Spannable.hpp>
#include <android/text/method/BaseKeyListener.hpp>
#include <android/text/method/TextKeyListener.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/View.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace text { namespace method {

	class QwertyKeyListener;
	class QwertyKeyListener
		: public cpp_object<QwertyKeyListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit QwertyKeyListener(jobject jobj)
		: cpp_object<QwertyKeyListener>(jobj)
		{
		}

		operator local_ref<android::text::method::BaseKeyListener>() const;


		QwertyKeyListener(local_ref< android::text::method::TextKeyListener_::Capitalize > const&, cpp_boolean const&);
		static local_ref< android::text::method::QwertyKeyListener > getInstance(cpp_boolean const&, local_ref< android::text::method::TextKeyListener_::Capitalize > const&);
		cpp_int getInputType();
		cpp_boolean onKeyDown(local_ref< android::view::View > const&, local_ref< android::text::Editable > const&, cpp_int const&, local_ref< android::view::KeyEvent > const&);
		static void markAsReplaced(local_ref< android::text::Spannable > const&, cpp_int const&, cpp_int const&, local_ref< java::lang::String > const&);
	}; //class QwertyKeyListener

} //namespace method
} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_HPP_IMPL

namespace j2cpp {



android::text::method::QwertyKeyListener::operator local_ref<android::text::method::BaseKeyListener>() const
{
	return local_ref<android::text::method::BaseKeyListener>(get_jtype());
}


android::text::method::QwertyKeyListener::QwertyKeyListener(local_ref< android::text::method::TextKeyListener_::Capitalize > const &a0, cpp_boolean const &a1)
: cpp_object<android::text::method::QwertyKeyListener>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::method::QwertyKeyListener::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::method::QwertyKeyListener::J2CPP_CLASS_NAME, android::text::method::QwertyKeyListener::J2CPP_METHOD_NAME(0), android::text::method::QwertyKeyListener::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}


local_ref< android::text::method::QwertyKeyListener > android::text::method::QwertyKeyListener::getInstance(cpp_boolean const &a0, local_ref< android::text::method::TextKeyListener_::Capitalize > const &a1)
{
	return local_ref< android::text::method::QwertyKeyListener >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::text::method::QwertyKeyListener::getInputType()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_boolean android::text::method::QwertyKeyListener::onKeyDown(local_ref< android::view::View > const &a0, local_ref< android::text::Editable > const &a1, cpp_int const &a2, local_ref< android::view::KeyEvent > const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::text::method::QwertyKeyListener::markAsReplaced(local_ref< android::text::Spannable > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::method::QwertyKeyListener,"android/text/method/QwertyKeyListener")
J2CPP_DEFINE_METHOD(android::text::method::QwertyKeyListener,0,"<init>","(Landroid/text/method/TextKeyListener$Capitalize;Z)V")
J2CPP_DEFINE_METHOD(android::text::method::QwertyKeyListener,1,"getInstance","(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/QwertyKeyListener;")
J2CPP_DEFINE_METHOD(android::text::method::QwertyKeyListener,2,"getInputType","()I")
J2CPP_DEFINE_METHOD(android::text::method::QwertyKeyListener,3,"onKeyDown","(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::text::method::QwertyKeyListener,4,"markAsReplaced","(Landroid/text/Spannable;IILjava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
