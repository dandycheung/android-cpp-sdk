/*================================================================================
  code generated by: java2cpp
  class: android.text.method.PasswordTransformationMethod
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_HPP_DECL
#define J2CPP_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace text { class Editable; } } }


#include <android/graphics/Rect.hpp>
#include <android/text/Editable.hpp>
#include <android/view/View.hpp>
#include <java/lang/CharSequence.hpp>


namespace j2cpp {

namespace android { namespace text { namespace method {

	class PasswordTransformationMethod;
	class PasswordTransformationMethod
		: public cpp_object<PasswordTransformationMethod>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		PasswordTransformationMethod(jobject jobj)
		: cpp_object<PasswordTransformationMethod>(jobj)
		{
		}

		local_ref< java::lang::CharSequence > getTransformation(local_ref< java::lang::CharSequence > const&, local_ref< android::view::View > const&);
		static local_ref< android::text::method::PasswordTransformationMethod > getInstance();
		void beforeTextChanged(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void onTextChanged(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void afterTextChanged(local_ref< android::text::Editable > const&);
		void onFocusChanged(local_ref< android::view::View > const&, local_ref< java::lang::CharSequence > const&, cpp_boolean const&, cpp_int const&, local_ref< android::graphics::Rect > const&);
	}; //class PasswordTransformationMethod

} //namespace method
} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_HPP_IMPL
#define J2CPP_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::text::method::PasswordTransformationMethod > create< android::text::method::PasswordTransformationMethod>()
{
	return local_ref< android::text::method::PasswordTransformationMethod >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::method::PasswordTransformationMethod::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::method::PasswordTransformationMethod::J2CPP_CLASS_NAME, android::text::method::PasswordTransformationMethod::J2CPP_METHOD_NAME(0), android::text::method::PasswordTransformationMethod::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::CharSequence > android::text::method::PasswordTransformationMethod::getTransformation(local_ref< java::lang::CharSequence > const &a0, local_ref< android::view::View > const &a1)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::text::method::PasswordTransformationMethod > android::text::method::PasswordTransformationMethod::getInstance()
{
	return local_ref< android::text::method::PasswordTransformationMethod >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>()
		)
	);
}

void android::text::method::PasswordTransformationMethod::beforeTextChanged(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::text::method::PasswordTransformationMethod::onTextChanged(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::text::method::PasswordTransformationMethod::afterTextChanged(local_ref< android::text::Editable > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::text::method::PasswordTransformationMethod::onFocusChanged(local_ref< android::view::View > const &a0, local_ref< java::lang::CharSequence > const &a1, cpp_boolean const &a2, cpp_int const &a3, local_ref< android::graphics::Rect > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::method::PasswordTransformationMethod,"android/text/method/PasswordTransformationMethod")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,1,"getTransformation","(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,2,"getInstance","()Landroid/text/method/PasswordTransformationMethod;")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,3,"beforeTextChanged","(Ljava/lang/CharSequence;III)V")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,4,"onTextChanged","(Ljava/lang/CharSequence;III)V")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,5,"afterTextChanged","(Landroid/text/Editable;)V")
J2CPP_DEFINE_METHOD(android::text::method::PasswordTransformationMethod,6,"onFocusChanged","(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
