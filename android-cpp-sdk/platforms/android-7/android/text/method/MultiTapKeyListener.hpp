/*================================================================================
  code generated by: java2cpp
  class: android.text.method.MultiTapKeyListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_MULTITAPKEYLISTENER_HPP_DECL
#define J2CPP_ANDROID_TEXT_METHOD_MULTITAPKEYLISTENER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace text { class Spannable; } } }
namespace j2cpp { namespace android { namespace text { namespace method { namespace TextKeyListener_ { class Capitalize; } } } } }
namespace j2cpp { namespace android { namespace text { class Editable; } } }


#include <android/text/Editable.hpp>
#include <android/text/Spannable.hpp>
#include <android/text/method/TextKeyListener.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/View.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text { namespace method {

	class MultiTapKeyListener;
	class MultiTapKeyListener
		: public cpp_object<MultiTapKeyListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		MultiTapKeyListener(jobject jobj)
		: cpp_object<MultiTapKeyListener>(jobj)
		{
		}

		static local_ref< android::text::method::MultiTapKeyListener > getInstance(cpp_boolean const&, local_ref< android::text::method::TextKeyListener_::Capitalize > const&);
		cpp_int getInputType();
		cpp_boolean onKeyDown(local_ref< android::view::View > const&, local_ref< android::text::Editable > const&, cpp_int const&, local_ref< android::view::KeyEvent > const&);
		void onSpanChanged(local_ref< android::text::Spannable > const&, local_ref< java::lang::Object > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void onSpanAdded(local_ref< android::text::Spannable > const&, local_ref< java::lang::Object > const&, cpp_int const&, cpp_int const&);
		void onSpanRemoved(local_ref< android::text::Spannable > const&, local_ref< java::lang::Object > const&, cpp_int const&, cpp_int const&);
	}; //class MultiTapKeyListener

} //namespace method
} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_MULTITAPKEYLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_METHOD_MULTITAPKEYLISTENER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_METHOD_MULTITAPKEYLISTENER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::text::method::MultiTapKeyListener > create< android::text::method::MultiTapKeyListener>(local_ref< android::text::method::TextKeyListener_::Capitalize > const &a0, cpp_boolean const &a1)
{
	return local_ref< android::text::method::MultiTapKeyListener >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::method::MultiTapKeyListener::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::method::MultiTapKeyListener::J2CPP_CLASS_NAME, android::text::method::MultiTapKeyListener::J2CPP_METHOD_NAME(0), android::text::method::MultiTapKeyListener::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::text::method::MultiTapKeyListener > android::text::method::MultiTapKeyListener::getInstance(cpp_boolean const &a0, local_ref< android::text::method::TextKeyListener_::Capitalize > const &a1)
{
	return local_ref< android::text::method::MultiTapKeyListener >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::text::method::MultiTapKeyListener::getInputType()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_boolean android::text::method::MultiTapKeyListener::onKeyDown(local_ref< android::view::View > const &a0, local_ref< android::text::Editable > const &a1, cpp_int const &a2, local_ref< android::view::KeyEvent > const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::text::method::MultiTapKeyListener::onSpanChanged(local_ref< android::text::Spannable > const &a0, local_ref< java::lang::Object > const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::text::method::MultiTapKeyListener::onSpanAdded(local_ref< android::text::Spannable > const &a0, local_ref< java::lang::Object > const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::text::method::MultiTapKeyListener::onSpanRemoved(local_ref< android::text::Spannable > const &a0, local_ref< java::lang::Object > const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::method::MultiTapKeyListener,"android/text/method/MultiTapKeyListener")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,0,"<init>","(Landroid/text/method/TextKeyListener$Capitalize;Z)V")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,1,"getInstance","(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/MultiTapKeyListener;")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,2,"getInputType","()I")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,3,"onKeyDown","(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,4,"onSpanChanged","(Landroid/text/Spannable;Ljava/lang/Object;IIII)V")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,5,"onSpanAdded","(Landroid/text/Spannable;Ljava/lang/Object;II)V")
J2CPP_DEFINE_METHOD(android::text::method::MultiTapKeyListener,6,"onSpanRemoved","(Landroid/text/Spannable;Ljava/lang/Object;II)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_METHOD_MULTITAPKEYLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
