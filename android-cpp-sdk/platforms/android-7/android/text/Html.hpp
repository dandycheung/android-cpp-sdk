/*================================================================================
  code generated by: java2cpp
  class: android.text.Html
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_HTML_HPP_DECL
#define J2CPP_ANDROID_TEXT_HTML_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace org { namespace xml { namespace sax { class XMLReader; } } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class Drawable; } } } }
namespace j2cpp { namespace android { namespace text { namespace Html_ { class ImageGetter; } } } }
namespace j2cpp { namespace android { namespace text { class Editable; } } }
namespace j2cpp { namespace android { namespace text { namespace Html_ { class TagHandler; } } } }
namespace j2cpp { namespace android { namespace text { class Spanned; } } }


#include <android/graphics/drawable/Drawable.hpp>
#include <android/text/Editable.hpp>
#include <android/text/Html.hpp>
#include <android/text/Spanned.hpp>
#include <java/lang/String.hpp>
#include <org/xml/sax/XMLReader.hpp>


namespace j2cpp {

namespace android { namespace text {

	class Html;
	namespace Html_ {

		class ImageGetter;
		class ImageGetter
			: public cpp_object<ImageGetter>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			ImageGetter(jobject jobj)
			: cpp_object<ImageGetter>(jobj)
			{
			}

			local_ref< android::graphics::drawable::Drawable > getDrawable(local_ref< java::lang::String > const&);
		}; //class ImageGetter

		class TagHandler;
		class TagHandler
			: public cpp_object<TagHandler>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			TagHandler(jobject jobj)
			: cpp_object<TagHandler>(jobj)
			{
			}

			void handleTag(cpp_boolean const&, local_ref< java::lang::String > const&, local_ref< android::text::Editable > const&, local_ref< org::xml::sax::XMLReader > const&);
		}; //class TagHandler

	} //namespace Html_

	class Html
		: public cpp_object<Html>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		typedef Html_::ImageGetter ImageGetter;
		typedef Html_::TagHandler TagHandler;

		Html(jobject jobj)
		: cpp_object<Html>(jobj)
		{
		}

		static local_ref< android::text::Spanned > fromHtml(local_ref< java::lang::String > const&);
		static local_ref< android::text::Spanned > fromHtml(local_ref< java::lang::String > const&, local_ref< android::text::Html_::ImageGetter > const&, local_ref< android::text::Html_::TagHandler > const&);
		static local_ref< java::lang::String > toHtml(local_ref< android::text::Spanned > const&);
	}; //class Html

} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_HTML_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_HTML_HPP_IMPL
#define J2CPP_ANDROID_TEXT_HTML_HPP_IMPL

namespace j2cpp {



local_ref< android::graphics::drawable::Drawable > android::text::Html_::ImageGetter::getDrawable(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::graphics::drawable::Drawable >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::Html_::ImageGetter,"android/text/Html$ImageGetter")
J2CPP_DEFINE_METHOD(android::text::Html_::ImageGetter,0,"getDrawable","(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;")

void android::text::Html_::TagHandler::handleTag(cpp_boolean const &a0, local_ref< java::lang::String > const &a1, local_ref< android::text::Editable > const &a2, local_ref< org::xml::sax::XMLReader > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::Html_::TagHandler,"android/text/Html$TagHandler")
J2CPP_DEFINE_METHOD(android::text::Html_::TagHandler,0,"handleTag","(ZLjava/lang/String;Landroid/text/Editable;Lorg/xml/sax/XMLReader;)V")


template <>
local_ref< android::text::Html > create< android::text::Html>()
{
	return local_ref< android::text::Html >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::Html::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::Html::J2CPP_CLASS_NAME, android::text::Html::J2CPP_METHOD_NAME(0), android::text::Html::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< android::text::Spanned > android::text::Html::fromHtml(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::text::Spanned >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::text::Spanned > android::text::Html::fromHtml(local_ref< java::lang::String > const &a0, local_ref< android::text::Html_::ImageGetter > const &a1, local_ref< android::text::Html_::TagHandler > const &a2)
{
	return local_ref< android::text::Spanned >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::text::Html::toHtml(local_ref< android::text::Spanned > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::Html,"android/text/Html")
J2CPP_DEFINE_METHOD(android::text::Html,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::Html,1,"fromHtml","(Ljava/lang/String;)Landroid/text/Spanned;")
J2CPP_DEFINE_METHOD(android::text::Html,2,"fromHtml","(Ljava/lang/String;Landroid/text/Html$ImageGetter;Landroid/text/Html$TagHandler;)Landroid/text/Spanned;")
J2CPP_DEFINE_METHOD(android::text::Html,3,"toHtml","(Landroid/text/Spanned;)Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_HTML_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
