/*================================================================================
  code generated by: java2cpp
  class: android.text.LoginFilter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_LOGINFILTER_HPP_DECL
#define J2CPP_ANDROID_TEXT_LOGINFILTER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace android { namespace text { class InputFilter; } } }
namespace j2cpp { namespace android { namespace text { class Spanned; } } }


#include <android/text/InputFilter.hpp>
#include <android/text/Spanned.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text {

	class LoginFilter;
	namespace LoginFilter_ {

		class UsernameFilterGeneric;
		class UsernameFilterGeneric
			: public cpp_object<UsernameFilterGeneric>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)

			explicit UsernameFilterGeneric(jobject jobj)
			: cpp_object<UsernameFilterGeneric>(jobj)
			{
			}

			operator local_ref<android::text::LoginFilter>() const;


			UsernameFilterGeneric();
			UsernameFilterGeneric(cpp_boolean const&);
			cpp_boolean isAllowed(cpp_char const&);
		}; //class UsernameFilterGeneric

		class UsernameFilterGMail;
		class UsernameFilterGMail
			: public cpp_object<UsernameFilterGMail>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)

			explicit UsernameFilterGMail(jobject jobj)
			: cpp_object<UsernameFilterGMail>(jobj)
			{
			}

			operator local_ref<android::text::LoginFilter>() const;


			UsernameFilterGMail();
			UsernameFilterGMail(cpp_boolean const&);
			cpp_boolean isAllowed(cpp_char const&);
		}; //class UsernameFilterGMail

		class PasswordFilterGMail;
		class PasswordFilterGMail
			: public cpp_object<PasswordFilterGMail>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)

			explicit PasswordFilterGMail(jobject jobj)
			: cpp_object<PasswordFilterGMail>(jobj)
			{
			}

			operator local_ref<android::text::LoginFilter>() const;


			PasswordFilterGMail();
			PasswordFilterGMail(cpp_boolean const&);
			cpp_boolean isAllowed(cpp_char const&);
		}; //class PasswordFilterGMail

	} //namespace LoginFilter_

	class LoginFilter
		: public cpp_object<LoginFilter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		typedef LoginFilter_::UsernameFilterGeneric UsernameFilterGeneric;
		typedef LoginFilter_::UsernameFilterGMail UsernameFilterGMail;
		typedef LoginFilter_::PasswordFilterGMail PasswordFilterGMail;

		explicit LoginFilter(jobject jobj)
		: cpp_object<LoginFilter>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::text::InputFilter>() const;


		local_ref< java::lang::CharSequence > filter(local_ref< java::lang::CharSequence > const&, cpp_int const&, cpp_int const&, local_ref< android::text::Spanned > const&, cpp_int const&, cpp_int const&);
		void onStart();
		void onInvalidCharacter(cpp_char const&);
		void onStop();
		cpp_boolean isAllowed(cpp_char const&);
	}; //class LoginFilter

} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_LOGINFILTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_LOGINFILTER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_LOGINFILTER_HPP_IMPL

namespace j2cpp {




android::text::LoginFilter_::UsernameFilterGeneric::operator local_ref<android::text::LoginFilter>() const
{
	return local_ref<android::text::LoginFilter>(get_jtype());
}


android::text::LoginFilter_::UsernameFilterGeneric::UsernameFilterGeneric()
: cpp_object<android::text::LoginFilter_::UsernameFilterGeneric>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_CLASS_NAME, android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_METHOD_NAME(0), android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}



android::text::LoginFilter_::UsernameFilterGeneric::UsernameFilterGeneric(cpp_boolean const &a0)
: cpp_object<android::text::LoginFilter_::UsernameFilterGeneric>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_CLASS_NAME, android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_METHOD_NAME(1), android::text::LoginFilter_::UsernameFilterGeneric::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}


cpp_boolean android::text::LoginFilter_::UsernameFilterGeneric::isAllowed(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::LoginFilter_::UsernameFilterGeneric,"android/text/LoginFilter$UsernameFilterGeneric")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::UsernameFilterGeneric,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::UsernameFilterGeneric,1,"<init>","(Z)V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::UsernameFilterGeneric,2,"isAllowed","(C)Z")


android::text::LoginFilter_::UsernameFilterGMail::operator local_ref<android::text::LoginFilter>() const
{
	return local_ref<android::text::LoginFilter>(get_jtype());
}


android::text::LoginFilter_::UsernameFilterGMail::UsernameFilterGMail()
: cpp_object<android::text::LoginFilter_::UsernameFilterGMail>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::LoginFilter_::UsernameFilterGMail::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::LoginFilter_::UsernameFilterGMail::J2CPP_CLASS_NAME, android::text::LoginFilter_::UsernameFilterGMail::J2CPP_METHOD_NAME(0), android::text::LoginFilter_::UsernameFilterGMail::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}



android::text::LoginFilter_::UsernameFilterGMail::UsernameFilterGMail(cpp_boolean const &a0)
: cpp_object<android::text::LoginFilter_::UsernameFilterGMail>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::LoginFilter_::UsernameFilterGMail::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::LoginFilter_::UsernameFilterGMail::J2CPP_CLASS_NAME, android::text::LoginFilter_::UsernameFilterGMail::J2CPP_METHOD_NAME(1), android::text::LoginFilter_::UsernameFilterGMail::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}


cpp_boolean android::text::LoginFilter_::UsernameFilterGMail::isAllowed(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::LoginFilter_::UsernameFilterGMail,"android/text/LoginFilter$UsernameFilterGMail")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::UsernameFilterGMail,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::UsernameFilterGMail,1,"<init>","(Z)V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::UsernameFilterGMail,2,"isAllowed","(C)Z")


android::text::LoginFilter_::PasswordFilterGMail::operator local_ref<android::text::LoginFilter>() const
{
	return local_ref<android::text::LoginFilter>(get_jtype());
}


android::text::LoginFilter_::PasswordFilterGMail::PasswordFilterGMail()
: cpp_object<android::text::LoginFilter_::PasswordFilterGMail>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::LoginFilter_::PasswordFilterGMail::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::LoginFilter_::PasswordFilterGMail::J2CPP_CLASS_NAME, android::text::LoginFilter_::PasswordFilterGMail::J2CPP_METHOD_NAME(0), android::text::LoginFilter_::PasswordFilterGMail::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}



android::text::LoginFilter_::PasswordFilterGMail::PasswordFilterGMail(cpp_boolean const &a0)
: cpp_object<android::text::LoginFilter_::PasswordFilterGMail>(
	environment::get().get_jenv()->NewObject(
		get_class<android::text::LoginFilter_::PasswordFilterGMail::J2CPP_CLASS_NAME>(),
		get_method_id<android::text::LoginFilter_::PasswordFilterGMail::J2CPP_CLASS_NAME, android::text::LoginFilter_::PasswordFilterGMail::J2CPP_METHOD_NAME(1), android::text::LoginFilter_::PasswordFilterGMail::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}


cpp_boolean android::text::LoginFilter_::PasswordFilterGMail::isAllowed(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::LoginFilter_::PasswordFilterGMail,"android/text/LoginFilter$PasswordFilterGMail")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::PasswordFilterGMail,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::PasswordFilterGMail,1,"<init>","(Z)V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter_::PasswordFilterGMail,2,"isAllowed","(C)Z")



android::text::LoginFilter::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::text::LoginFilter::operator local_ref<android::text::InputFilter>() const
{
	return local_ref<android::text::InputFilter>(get_jtype());
}


local_ref< java::lang::CharSequence > android::text::LoginFilter::filter(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::text::Spanned > const &a3, cpp_int const &a4, cpp_int const &a5)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::text::LoginFilter::onStart()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::text::LoginFilter::onInvalidCharacter(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::text::LoginFilter::onStop()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

cpp_boolean android::text::LoginFilter::isAllowed(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::text::LoginFilter,"android/text/LoginFilter")
J2CPP_DEFINE_METHOD(android::text::LoginFilter,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter,1,"filter","(Ljava/lang/CharSequence;IILandroid/text/Spanned;II)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::text::LoginFilter,2,"onStart","()V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter,3,"onInvalidCharacter","(C)V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter,4,"onStop","()V")
J2CPP_DEFINE_METHOD(android::text::LoginFilter,5,"isAllowed","(C)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_LOGINFILTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
