/*================================================================================
  code generated by: java2cpp
  class: android.webkit.GeolocationPermissions
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_GEOLOCATIONPERMISSIONS_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_GEOLOCATIONPERMISSIONS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace webkit { class ValueCallback; } } }


#include <android/webkit/ValueCallback.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class GeolocationPermissions;
	namespace GeolocationPermissions_ {

		class Callback;
		class Callback
			: public cpp_object<Callback>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit Callback(jobject jobj)
			: cpp_object<Callback>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void invoke(local_ref< java::lang::String > const&, cpp_boolean const&, cpp_boolean const&);
		}; //class Callback

	} //namespace GeolocationPermissions_

	class GeolocationPermissions
		: public cpp_object<GeolocationPermissions>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		typedef GeolocationPermissions_::Callback Callback;

		explicit GeolocationPermissions(jobject jobj)
		: cpp_object<GeolocationPermissions>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		GeolocationPermissions();
		static local_ref< android::webkit::GeolocationPermissions > getInstance();
		void getOrigins(local_ref< android::webkit::ValueCallback > const&);
		void getAllowed(local_ref< java::lang::String > const&, local_ref< android::webkit::ValueCallback > const&);
		void clear(local_ref< java::lang::String > const&);
		void allow(local_ref< java::lang::String > const&);
		void clearAll();
	}; //class GeolocationPermissions

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_GEOLOCATIONPERMISSIONS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_GEOLOCATIONPERMISSIONS_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_GEOLOCATIONPERMISSIONS_HPP_IMPL

namespace j2cpp {




android::webkit::GeolocationPermissions_::Callback::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void android::webkit::GeolocationPermissions_::Callback::invoke(local_ref< java::lang::String > const &a0, cpp_boolean const &a1, cpp_boolean const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::webkit::GeolocationPermissions_::Callback,"android/webkit/GeolocationPermissions$Callback")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions_::Callback,0,"invoke","(Ljava/lang/String;ZZ)V")



android::webkit::GeolocationPermissions::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::webkit::GeolocationPermissions::GeolocationPermissions()
: cpp_object<android::webkit::GeolocationPermissions>(
	environment::get().get_jenv()->NewObject(
		get_class<android::webkit::GeolocationPermissions::J2CPP_CLASS_NAME>(),
		get_method_id<android::webkit::GeolocationPermissions::J2CPP_CLASS_NAME, android::webkit::GeolocationPermissions::J2CPP_METHOD_NAME(0), android::webkit::GeolocationPermissions::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


local_ref< android::webkit::GeolocationPermissions > android::webkit::GeolocationPermissions::getInstance()
{
	return local_ref< android::webkit::GeolocationPermissions >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>()
		)
	);
}

void android::webkit::GeolocationPermissions::getOrigins(local_ref< android::webkit::ValueCallback > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::GeolocationPermissions::getAllowed(local_ref< java::lang::String > const &a0, local_ref< android::webkit::ValueCallback > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::webkit::GeolocationPermissions::clear(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::GeolocationPermissions::allow(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::GeolocationPermissions::clearAll()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::webkit::GeolocationPermissions,"android/webkit/GeolocationPermissions")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,1,"getInstance","()Landroid/webkit/GeolocationPermissions;")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,2,"getOrigins","(Landroid/webkit/ValueCallback;)V")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,3,"getAllowed","(Ljava/lang/String;Landroid/webkit/ValueCallback;)V")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,4,"clear","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,5,"allow","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::GeolocationPermissions,6,"clearAll","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_GEOLOCATIONPERMISSIONS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
