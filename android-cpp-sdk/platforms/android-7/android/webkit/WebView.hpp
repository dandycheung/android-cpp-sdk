/*================================================================================
  code generated by: java2cpp
  class: android.webkit.WebView
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_DECL


namespace j2cpp { namespace java { namespace io { class File; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace net { namespace http { class SslCertificate; } } } }
namespace j2cpp { namespace android { namespace graphics { class Picture; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class OnHierarchyChangeListener; } } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace ViewTreeObserver_ { class OnGlobalFocusChangeListener; } } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class LayoutParams; } } } }
namespace j2cpp { namespace android { namespace webkit { class WebViewClient; } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebView_ { class HitTestResult; } } } }
namespace j2cpp { namespace android { namespace webkit { class WebSettings; } } }
namespace j2cpp { namespace android { namespace webkit { class WebChromeClient; } } }
namespace j2cpp { namespace android { namespace webkit { class DownloadListener; } } }
namespace j2cpp { namespace android { namespace webkit { class PluginList; } } }
namespace j2cpp { namespace android { namespace webkit { class WebBackForwardList; } } }
namespace j2cpp { namespace android { namespace webkit { namespace WebView_ { class PictureListener; } } } }
namespace j2cpp { namespace android { namespace widget { class AbsoluteLayout; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace os { class Message; } } }


#include <android/content/Context.hpp>
#include <android/graphics/Bitmap.hpp>
#include <android/graphics/Picture.hpp>
#include <android/graphics/Rect.hpp>
#include <android/net/http/SslCertificate.hpp>
#include <android/os/Bundle.hpp>
#include <android/os/Message.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/View.hpp>
#include <android/view/ViewGroup.hpp>
#include <android/view/ViewTreeObserver.hpp>
#include <android/webkit/DownloadListener.hpp>
#include <android/webkit/PluginList.hpp>
#include <android/webkit/WebBackForwardList.hpp>
#include <android/webkit/WebChromeClient.hpp>
#include <android/webkit/WebSettings.hpp>
#include <android/webkit/WebView.hpp>
#include <android/webkit/WebViewClient.hpp>
#include <android/widget/AbsoluteLayout.hpp>
#include <java/io/File.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class WebView;
	namespace WebView_ {

		class HitTestResult;
		class HitTestResult
			: public cpp_object<HitTestResult>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)
			J2CPP_DECLARE_FIELD(6)
			J2CPP_DECLARE_FIELD(7)
			J2CPP_DECLARE_FIELD(8)
			J2CPP_DECLARE_FIELD(9)
			J2CPP_DECLARE_FIELD(10)

			explicit HitTestResult(jobject jobj)
			: cpp_object<HitTestResult>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			cpp_int getType();
			local_ref< java::lang::String > getExtra();

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > UNKNOWN_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > PHONE_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > GEO_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > EMAIL_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > IMAGE_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), cpp_int > IMAGE_ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), cpp_int > SRC_ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), cpp_int > SRC_IMAGE_ANCHOR_TYPE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), cpp_int > EDIT_TEXT_TYPE;
		}; //class HitTestResult

		class WebViewTransport;
		class WebViewTransport
			: public cpp_object<WebViewTransport>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)

			explicit WebViewTransport(jobject jobj)
			: cpp_object<WebViewTransport>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			WebViewTransport(local_ref< android::webkit::WebView > const&);
			void setWebView(local_ref< android::webkit::WebView > const&);
			local_ref< android::webkit::WebView > getWebView();

		}; //class WebViewTransport

		class PictureListener;
		class PictureListener
			: public cpp_object<PictureListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			explicit PictureListener(jobject jobj)
			: cpp_object<PictureListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onNewPicture(local_ref< android::webkit::WebView > const&, local_ref< android::graphics::Picture > const&);
		}; //class PictureListener

	} //namespace WebView_

	class WebView
		: public cpp_object<WebView>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_METHOD(101)
		J2CPP_DECLARE_METHOD(102)
		J2CPP_DECLARE_METHOD(103)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)

		typedef WebView_::HitTestResult HitTestResult;
		typedef WebView_::WebViewTransport WebViewTransport;
		typedef WebView_::PictureListener PictureListener;

		explicit WebView(jobject jobj)
		: cpp_object<WebView>(jobj)
		{
		}

		operator local_ref<android::widget::AbsoluteLayout>() const;
		operator local_ref<android::view::ViewTreeObserver_::OnGlobalFocusChangeListener>() const;
		operator local_ref<android::view::ViewGroup_::OnHierarchyChangeListener>() const;


		WebView(local_ref< android::content::Context > const&);
		WebView(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		WebView(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&, cpp_int const&);
		void setScrollBarStyle(cpp_int const&);
		void setHorizontalScrollbarOverlay(cpp_boolean const&);
		void setVerticalScrollbarOverlay(cpp_boolean const&);
		cpp_boolean overlayHorizontalScrollbar();
		cpp_boolean overlayVerticalScrollbar();
		local_ref< android::net::http::SslCertificate > getCertificate();
		void setCertificate(local_ref< android::net::http::SslCertificate > const&);
		void savePassword(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void setHttpAuthUsernamePassword(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		local_ref< cpp_object_array<java::lang::String, 1> > getHttpAuthUsernamePassword(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void destroy();
		static void enablePlatformNotifications();
		static void disablePlatformNotifications();
		void setNetworkAvailable(cpp_boolean const&);
		local_ref< android::webkit::WebBackForwardList > saveState(local_ref< android::os::Bundle > const&);
		cpp_boolean savePicture(local_ref< android::os::Bundle > const&, local_ref< java::io::File > const&);
		cpp_boolean restorePicture(local_ref< android::os::Bundle > const&, local_ref< java::io::File > const&);
		local_ref< android::webkit::WebBackForwardList > restoreState(local_ref< android::os::Bundle > const&);
		void loadUrl(local_ref< java::lang::String > const&);
		void postUrl(local_ref< java::lang::String > const&, local_ref< cpp_byte_array<1> > const&);
		void loadData(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void loadDataWithBaseURL(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void stopLoading();
		void reload();
		cpp_boolean canGoBack();
		void goBack();
		cpp_boolean canGoForward();
		void goForward();
		cpp_boolean canGoBackOrForward(cpp_int const&);
		void goBackOrForward(cpp_int const&);
		cpp_boolean pageUp(cpp_boolean const&);
		cpp_boolean pageDown(cpp_boolean const&);
		void clearView();
		local_ref< android::graphics::Picture > capturePicture();
		cpp_float getScale();
		void setInitialScale(cpp_int const&);
		void invokeZoomPicker();
		local_ref< android::webkit::WebView_::HitTestResult > getHitTestResult();
		void requestFocusNodeHref(local_ref< android::os::Message > const&);
		void requestImageRef(local_ref< android::os::Message > const&);
		local_ref< java::lang::String > getUrl();
		local_ref< java::lang::String > getOriginalUrl();
		local_ref< java::lang::String > getTitle();
		local_ref< android::graphics::Bitmap > getFavicon();
		cpp_int getProgress();
		cpp_int getContentHeight();
		void pauseTimers();
		void resumeTimers();
		void freeMemory();
		void clearCache(cpp_boolean const&);
		void clearFormData();
		void clearHistory();
		void clearSslPreferences();
		local_ref< android::webkit::WebBackForwardList > copyBackForwardList();
		void findNext(cpp_boolean const&);
		cpp_int findAll(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > findAddress(local_ref< java::lang::String > const&);
		void clearMatches();
		void documentHasImages(local_ref< android::os::Message > const&);
		void computeScroll();
		void setWebViewClient(local_ref< android::webkit::WebViewClient > const&);
		void setDownloadListener(local_ref< android::webkit::DownloadListener > const&);
		void setWebChromeClient(local_ref< android::webkit::WebChromeClient > const&);
		void setPictureListener(local_ref< android::webkit::WebView_::PictureListener > const&);
		void addJavascriptInterface(local_ref< java::lang::Object > const&, local_ref< java::lang::String > const&);
		local_ref< android::webkit::WebSettings > getSettings();
		static local_ref< android::webkit::PluginList > getPluginList();
		void refreshPlugins(cpp_boolean const&);
		void setLayoutParams(local_ref< android::view::ViewGroup_::LayoutParams > const&);
		cpp_boolean performLongClick();
		cpp_boolean onKeyDown(cpp_int const&, local_ref< android::view::KeyEvent > const&);
		cpp_boolean onKeyUp(cpp_int const&, local_ref< android::view::KeyEvent > const&);
		void onChildViewAdded(local_ref< android::view::View > const&, local_ref< android::view::View > const&);
		void onChildViewRemoved(local_ref< android::view::View > const&, local_ref< android::view::View > const&);
		void onGlobalFocusChanged(local_ref< android::view::View > const&, local_ref< android::view::View > const&);
		void onWindowFocusChanged(cpp_boolean const&);
		cpp_boolean dispatchKeyEvent(local_ref< android::view::KeyEvent > const&);
		cpp_boolean onTouchEvent(local_ref< android::view::MotionEvent > const&);
		void setMapTrackballToArrowKeys(cpp_boolean const&);
		cpp_boolean onTrackballEvent(local_ref< android::view::MotionEvent > const&);
		void flingScroll(cpp_int const&, cpp_int const&);
		local_ref< android::view::View > getZoomControls();
		cpp_boolean zoomIn();
		cpp_boolean zoomOut();
		cpp_boolean requestFocus(cpp_int const&, local_ref< android::graphics::Rect > const&);
		cpp_boolean requestChildRectangleOnScreen(local_ref< android::view::View > const&, local_ref< android::graphics::Rect > const&, cpp_boolean const&);
		void setBackgroundColor(cpp_int const&);
		void debugDump();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > SCHEME_TEL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::lang::String > > SCHEME_MAILTO;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::lang::String > > SCHEME_GEO;
	}; //class WebView

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_IMPL

namespace j2cpp {




android::webkit::WebView_::HitTestResult::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


cpp_int android::webkit::WebView_::HitTestResult::getType()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::String > android::webkit::WebView_::HitTestResult::getExtra()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(0),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::webkit::WebView_::HitTestResult::UNKNOWN_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(1),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::webkit::WebView_::HitTestResult::ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(2),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::webkit::WebView_::HitTestResult::PHONE_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(3),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::webkit::WebView_::HitTestResult::GEO_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(4),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::webkit::WebView_::HitTestResult::EMAIL_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(5),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(5),
	cpp_int
> android::webkit::WebView_::HitTestResult::IMAGE_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(6),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(6),
	cpp_int
> android::webkit::WebView_::HitTestResult::IMAGE_ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(7),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(7),
	cpp_int
> android::webkit::WebView_::HitTestResult::SRC_ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(8),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(8),
	cpp_int
> android::webkit::WebView_::HitTestResult::SRC_IMAGE_ANCHOR_TYPE;

static_field<
	android::webkit::WebView_::HitTestResult::J2CPP_CLASS_NAME,
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_NAME(9),
	android::webkit::WebView_::HitTestResult::J2CPP_FIELD_SIGNATURE(9),
	cpp_int
> android::webkit::WebView_::HitTestResult::EDIT_TEXT_TYPE;


J2CPP_DEFINE_CLASS(android::webkit::WebView_::HitTestResult,"android/webkit/WebView$HitTestResult")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::HitTestResult,0,"<init>","(Landroid/webkit/WebView;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::HitTestResult,1,"getType","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::HitTestResult,2,"getExtra","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,0,"UNKNOWN_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,1,"ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,2,"PHONE_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,3,"GEO_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,4,"EMAIL_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,5,"IMAGE_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,6,"IMAGE_ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,7,"SRC_ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,8,"SRC_IMAGE_ANCHOR_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,9,"EDIT_TEXT_TYPE","I")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::HitTestResult,10,"this$0","Landroid/webkit/WebView;")


android::webkit::WebView_::WebViewTransport::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::webkit::WebView_::WebViewTransport::WebViewTransport(local_ref< android::webkit::WebView > const &a0)
: cpp_object<android::webkit::WebView_::WebViewTransport>(
	environment::get().get_jenv()->NewObject(
		get_class<android::webkit::WebView_::WebViewTransport::J2CPP_CLASS_NAME>(),
		get_method_id<android::webkit::WebView_::WebViewTransport::J2CPP_CLASS_NAME, android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_NAME(0), android::webkit::WebView_::WebViewTransport::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}


void android::webkit::WebView_::WebViewTransport::setWebView(local_ref< android::webkit::WebView > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::webkit::WebView > android::webkit::WebView_::WebViewTransport::getWebView()
{
	return local_ref< android::webkit::WebView >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}



J2CPP_DEFINE_CLASS(android::webkit::WebView_::WebViewTransport,"android/webkit/WebView$WebViewTransport")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::WebViewTransport,0,"<init>","(Landroid/webkit/WebView;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::WebViewTransport,1,"setWebView","(Landroid/webkit/WebView;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::WebViewTransport,2,"getWebView","()Landroid/webkit/WebView;")
J2CPP_DEFINE_FIELD(android::webkit::WebView_::WebViewTransport,0,"this$0","Landroid/webkit/WebView;")


android::webkit::WebView_::PictureListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void android::webkit::WebView_::PictureListener::onNewPicture(local_ref< android::webkit::WebView > const &a0, local_ref< android::graphics::Picture > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::webkit::WebView_::PictureListener,"android/webkit/WebView$PictureListener")
J2CPP_DEFINE_METHOD(android::webkit::WebView_::PictureListener,0,"onNewPicture","(Landroid/webkit/WebView;Landroid/graphics/Picture;)V")



android::webkit::WebView::operator local_ref<android::widget::AbsoluteLayout>() const
{
	return local_ref<android::widget::AbsoluteLayout>(get_jtype());
}

android::webkit::WebView::operator local_ref<android::view::ViewTreeObserver_::OnGlobalFocusChangeListener>() const
{
	return local_ref<android::view::ViewTreeObserver_::OnGlobalFocusChangeListener>(get_jtype());
}

android::webkit::WebView::operator local_ref<android::view::ViewGroup_::OnHierarchyChangeListener>() const
{
	return local_ref<android::view::ViewGroup_::OnHierarchyChangeListener>(get_jtype());
}


android::webkit::WebView::WebView(local_ref< android::content::Context > const &a0)
: cpp_object<android::webkit::WebView>(
	environment::get().get_jenv()->NewObject(
		get_class<android::webkit::WebView::J2CPP_CLASS_NAME>(),
		get_method_id<android::webkit::WebView::J2CPP_CLASS_NAME, android::webkit::WebView::J2CPP_METHOD_NAME(0), android::webkit::WebView::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}



android::webkit::WebView::WebView(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: cpp_object<android::webkit::WebView>(
	environment::get().get_jenv()->NewObject(
		get_class<android::webkit::WebView::J2CPP_CLASS_NAME>(),
		get_method_id<android::webkit::WebView::J2CPP_CLASS_NAME, android::webkit::WebView::J2CPP_METHOD_NAME(1), android::webkit::WebView::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}



android::webkit::WebView::WebView(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, cpp_int const &a2)
: cpp_object<android::webkit::WebView>(
	environment::get().get_jenv()->NewObject(
		get_class<android::webkit::WebView::J2CPP_CLASS_NAME>(),
		get_method_id<android::webkit::WebView::J2CPP_CLASS_NAME, android::webkit::WebView::J2CPP_METHOD_NAME(2), android::webkit::WebView::J2CPP_METHOD_SIGNATURE(2), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
	)
)
{
}


void android::webkit::WebView::setScrollBarStyle(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::setHorizontalScrollbarOverlay(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::setVerticalScrollbarOverlay(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::overlayHorizontalScrollbar()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::overlayVerticalScrollbar()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< android::net::http::SslCertificate > android::webkit::WebView::getCertificate()
{
	return local_ref< android::net::http::SslCertificate >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

void android::webkit::WebView::setCertificate(local_ref< android::net::http::SslCertificate > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::savePassword(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::webkit::WebView::setHttpAuthUsernamePassword(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::lang::String, 1> > android::webkit::WebView::getHttpAuthUsernamePassword(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< cpp_object_array<java::lang::String, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::webkit::WebView::destroy()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

void android::webkit::WebView::enablePlatformNotifications()
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>()
		)
	);
}

void android::webkit::WebView::disablePlatformNotifications()
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), true>()
		)
	);
}

void android::webkit::WebView::setNetworkAvailable(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::webkit::WebBackForwardList > android::webkit::WebView::saveState(local_ref< android::os::Bundle > const &a0)
{
	return local_ref< android::webkit::WebBackForwardList >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::savePicture(local_ref< android::os::Bundle > const &a0, local_ref< java::io::File > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::restorePicture(local_ref< android::os::Bundle > const &a0, local_ref< java::io::File > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::webkit::WebBackForwardList > android::webkit::WebView::restoreState(local_ref< android::os::Bundle > const &a0)
{
	return local_ref< android::webkit::WebBackForwardList >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::loadUrl(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::postUrl(local_ref< java::lang::String > const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::webkit::WebView::loadData(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::webkit::WebView::loadDataWithBaseURL(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void android::webkit::WebView::stopLoading()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>()
		)
	);
}

void android::webkit::WebView::reload()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::canGoBack()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>()
		)
	);
}

void android::webkit::WebView::goBack()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::canGoForward()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>()
		)
	);
}

void android::webkit::WebView::goForward()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::canGoBackOrForward(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::goBackOrForward(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::pageUp(cpp_boolean const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::pageDown(cpp_boolean const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::clearView()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>()
		)
	);
}

local_ref< android::graphics::Picture > android::webkit::WebView::capturePicture()
{
	return local_ref< android::graphics::Picture >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>()
		)
	);
}

cpp_float android::webkit::WebView::getScale()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>()
		)
	);
}

void android::webkit::WebView::setInitialScale(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::invokeZoomPicker()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), false>()
		)
	);
}

local_ref< android::webkit::WebView_::HitTestResult > android::webkit::WebView::getHitTestResult()
{
	return local_ref< android::webkit::WebView_::HitTestResult >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(40), J2CPP_METHOD_SIGNATURE(40), false>()
		)
	);
}

void android::webkit::WebView::requestFocusNodeHref(local_ref< android::os::Message > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(41), J2CPP_METHOD_SIGNATURE(41), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::requestImageRef(local_ref< android::os::Message > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(42), J2CPP_METHOD_SIGNATURE(42), false>(),
			a0.get_jtype()
		)
	);
}





local_ref< java::lang::String > android::webkit::WebView::getUrl()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(47), J2CPP_METHOD_SIGNATURE(47), false>()
		)
	);
}

local_ref< java::lang::String > android::webkit::WebView::getOriginalUrl()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), false>()
		)
	);
}

local_ref< java::lang::String > android::webkit::WebView::getTitle()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), false>()
		)
	);
}

local_ref< android::graphics::Bitmap > android::webkit::WebView::getFavicon()
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), false>()
		)
	);
}

cpp_int android::webkit::WebView::getProgress()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(51), J2CPP_METHOD_SIGNATURE(51), false>()
		)
	);
}

cpp_int android::webkit::WebView::getContentHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(52), J2CPP_METHOD_SIGNATURE(52), false>()
		)
	);
}

void android::webkit::WebView::pauseTimers()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(53), J2CPP_METHOD_SIGNATURE(53), false>()
		)
	);
}

void android::webkit::WebView::resumeTimers()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), false>()
		)
	);
}

void android::webkit::WebView::freeMemory()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), false>()
		)
	);
}

void android::webkit::WebView::clearCache(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::clearFormData()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), false>()
		)
	);
}

void android::webkit::WebView::clearHistory()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), false>()
		)
	);
}

void android::webkit::WebView::clearSslPreferences()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), false>()
		)
	);
}

local_ref< android::webkit::WebBackForwardList > android::webkit::WebView::copyBackForwardList()
{
	return local_ref< android::webkit::WebBackForwardList >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(60), J2CPP_METHOD_SIGNATURE(60), false>()
		)
	);
}

void android::webkit::WebView::findNext(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::webkit::WebView::findAll(local_ref< java::lang::String > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(62), J2CPP_METHOD_SIGNATURE(62), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::webkit::WebView::findAddress(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(63), J2CPP_METHOD_SIGNATURE(63), true>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::clearMatches()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(64), J2CPP_METHOD_SIGNATURE(64), false>()
		)
	);
}

void android::webkit::WebView::documentHasImages(local_ref< android::os::Message > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(65), J2CPP_METHOD_SIGNATURE(65), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::computeScroll()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), false>()
		)
	);
}

void android::webkit::WebView::setWebViewClient(local_ref< android::webkit::WebViewClient > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::setDownloadListener(local_ref< android::webkit::DownloadListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::setWebChromeClient(local_ref< android::webkit::WebChromeClient > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::setPictureListener(local_ref< android::webkit::WebView_::PictureListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::addJavascriptInterface(local_ref< java::lang::Object > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(71), J2CPP_METHOD_SIGNATURE(71), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::webkit::WebSettings > android::webkit::WebView::getSettings()
{
	return local_ref< android::webkit::WebSettings >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(72), J2CPP_METHOD_SIGNATURE(72), false>()
		)
	);
}

local_ref< android::webkit::PluginList > android::webkit::WebView::getPluginList()
{
	return local_ref< android::webkit::PluginList >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(73), J2CPP_METHOD_SIGNATURE(73), true>()
		)
	);
}

void android::webkit::WebView::refreshPlugins(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(74), J2CPP_METHOD_SIGNATURE(74), false>(),
			a0.get_jtype()
		)
	);
}




void android::webkit::WebView::setLayoutParams(local_ref< android::view::ViewGroup_::LayoutParams > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(78), J2CPP_METHOD_SIGNATURE(78), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::performLongClick()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(79), J2CPP_METHOD_SIGNATURE(79), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::onKeyDown(cpp_int const &a0, local_ref< android::view::KeyEvent > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(80), J2CPP_METHOD_SIGNATURE(80), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::onKeyUp(cpp_int const &a0, local_ref< android::view::KeyEvent > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(81), J2CPP_METHOD_SIGNATURE(81), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



void android::webkit::WebView::onChildViewAdded(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(84), J2CPP_METHOD_SIGNATURE(84), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::webkit::WebView::onChildViewRemoved(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(85), J2CPP_METHOD_SIGNATURE(85), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::webkit::WebView::onGlobalFocusChanged(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(86), J2CPP_METHOD_SIGNATURE(86), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::webkit::WebView::onWindowFocusChanged(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(87), J2CPP_METHOD_SIGNATURE(87), false>(),
			a0.get_jtype()
		)
	);
}




cpp_boolean android::webkit::WebView::dispatchKeyEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(91), J2CPP_METHOD_SIGNATURE(91), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::onTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(92), J2CPP_METHOD_SIGNATURE(92), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::setMapTrackballToArrowKeys(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(93), J2CPP_METHOD_SIGNATURE(93), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebView::onTrackballEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(94), J2CPP_METHOD_SIGNATURE(94), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::flingScroll(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(95), J2CPP_METHOD_SIGNATURE(95), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::view::View > android::webkit::WebView::getZoomControls()
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(96), J2CPP_METHOD_SIGNATURE(96), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::zoomIn()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(97), J2CPP_METHOD_SIGNATURE(97), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::zoomOut()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(98), J2CPP_METHOD_SIGNATURE(98), false>()
		)
	);
}

cpp_boolean android::webkit::WebView::requestFocus(cpp_int const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(99), J2CPP_METHOD_SIGNATURE(99), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


cpp_boolean android::webkit::WebView::requestChildRectangleOnScreen(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1, cpp_boolean const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(101), J2CPP_METHOD_SIGNATURE(101), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::webkit::WebView::setBackgroundColor(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(102), J2CPP_METHOD_SIGNATURE(102), false>(),
			a0.get_jtype()
		)
	);
}

void android::webkit::WebView::debugDump()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(103), J2CPP_METHOD_SIGNATURE(103), false>()
		)
	);
}


static_field<
	android::webkit::WebView::J2CPP_CLASS_NAME,
	android::webkit::WebView::J2CPP_FIELD_NAME(0),
	android::webkit::WebView::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> android::webkit::WebView::SCHEME_TEL;

static_field<
	android::webkit::WebView::J2CPP_CLASS_NAME,
	android::webkit::WebView::J2CPP_FIELD_NAME(1),
	android::webkit::WebView::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::lang::String >
> android::webkit::WebView::SCHEME_MAILTO;

static_field<
	android::webkit::WebView::J2CPP_CLASS_NAME,
	android::webkit::WebView::J2CPP_FIELD_NAME(2),
	android::webkit::WebView::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::lang::String >
> android::webkit::WebView::SCHEME_GEO;


J2CPP_DEFINE_CLASS(android::webkit::WebView,"android/webkit/WebView")
J2CPP_DEFINE_METHOD(android::webkit::WebView,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,3,"setScrollBarStyle","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,4,"setHorizontalScrollbarOverlay","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,5,"setVerticalScrollbarOverlay","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,6,"overlayHorizontalScrollbar","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,7,"overlayVerticalScrollbar","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,8,"getCertificate","()Landroid/net/http/SslCertificate;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,9,"setCertificate","(Landroid/net/http/SslCertificate;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,10,"savePassword","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,11,"setHttpAuthUsernamePassword","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,12,"getHttpAuthUsernamePassword","(Ljava/lang/String;Ljava/lang/String;)[java.lang.String")
J2CPP_DEFINE_METHOD(android::webkit::WebView,13,"destroy","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,14,"enablePlatformNotifications","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,15,"disablePlatformNotifications","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,16,"setNetworkAvailable","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,17,"saveState","(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,18,"savePicture","(Landroid/os/Bundle;Ljava/io/File;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,19,"restorePicture","(Landroid/os/Bundle;Ljava/io/File;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,20,"restoreState","(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,21,"loadUrl","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,22,"postUrl","(Ljava/lang/String;[B)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,23,"loadData","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,24,"loadDataWithBaseURL","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,25,"stopLoading","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,26,"reload","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,27,"canGoBack","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,28,"goBack","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,29,"canGoForward","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,30,"goForward","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,31,"canGoBackOrForward","(I)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,32,"goBackOrForward","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,33,"pageUp","(Z)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,34,"pageDown","(Z)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,35,"clearView","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,36,"capturePicture","()Landroid/graphics/Picture;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,37,"getScale","()F")
J2CPP_DEFINE_METHOD(android::webkit::WebView,38,"setInitialScale","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,39,"invokeZoomPicker","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,40,"getHitTestResult","()Landroid/webkit/WebView$HitTestResult;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,41,"requestFocusNodeHref","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,42,"requestImageRef","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,43,"computeHorizontalScrollRange","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,44,"computeVerticalScrollRange","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,45,"computeVerticalScrollOffset","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,46,"computeVerticalScrollExtent","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,47,"getUrl","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,48,"getOriginalUrl","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,49,"getTitle","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,50,"getFavicon","()Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,51,"getProgress","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,52,"getContentHeight","()I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,53,"pauseTimers","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,54,"resumeTimers","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,55,"freeMemory","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,56,"clearCache","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,57,"clearFormData","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,58,"clearHistory","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,59,"clearSslPreferences","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,60,"copyBackForwardList","()Landroid/webkit/WebBackForwardList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,61,"findNext","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,62,"findAll","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::webkit::WebView,63,"findAddress","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,64,"clearMatches","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,65,"documentHasImages","(Landroid/os/Message;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,66,"computeScroll","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,67,"setWebViewClient","(Landroid/webkit/WebViewClient;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,68,"setDownloadListener","(Landroid/webkit/DownloadListener;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,69,"setWebChromeClient","(Landroid/webkit/WebChromeClient;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,70,"setPictureListener","(Landroid/webkit/WebView$PictureListener;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,71,"addJavascriptInterface","(Ljava/lang/Object;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,72,"getSettings","()Landroid/webkit/WebSettings;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,73,"getPluginList","()Landroid/webkit/PluginList;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,74,"refreshPlugins","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,75,"finalize","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,76,"drawChild","(Landroid/graphics/Canvas;Landroid/view/View;J)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,77,"onDraw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,78,"setLayoutParams","(Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,79,"performLongClick","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,80,"onKeyDown","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,81,"onKeyUp","(ILandroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,82,"onAttachedToWindow","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,83,"onDetachedFromWindow","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,84,"onChildViewAdded","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,85,"onChildViewRemoved","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,86,"onGlobalFocusChanged","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,87,"onWindowFocusChanged","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,88,"onFocusChanged","(ZILandroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,89,"onSizeChanged","(IIII)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,90,"onScrollChanged","(IIII)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,91,"dispatchKeyEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,92,"onTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,93,"setMapTrackballToArrowKeys","(Z)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,94,"onTrackballEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,95,"flingScroll","(II)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,96,"getZoomControls","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::webkit::WebView,97,"zoomIn","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,98,"zoomOut","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,99,"requestFocus","(ILandroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,100,"onMeasure","(II)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,101,"requestChildRectangleOnScreen","(Landroid/view/View;Landroid/graphics/Rect;Z)Z")
J2CPP_DEFINE_METHOD(android::webkit::WebView,102,"setBackgroundColor","(I)V")
J2CPP_DEFINE_METHOD(android::webkit::WebView,103,"debugDump","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebView,0,"SCHEME_TEL","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::webkit::WebView,1,"SCHEME_MAILTO","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::webkit::WebView,2,"SCHEME_GEO","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBVIEW_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
