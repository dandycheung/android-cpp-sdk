/*================================================================================
  code generated by: java2cpp
  class: android.webkit.URLUtil
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class URLUtil;
	class URLUtil
		: public cpp_object<URLUtil>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)

		explicit URLUtil(jobject jobj)
		: cpp_object<URLUtil>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		URLUtil();
		static local_ref< java::lang::String > guessUrl(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > composeSearchUrl(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		static local_ref< cpp_byte_array<1> > decode(local_ref< cpp_byte_array<1> > const&);
		static cpp_boolean isAssetUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isCookielessProxyUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isFileUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isAboutUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isDataUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isJavaScriptUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isHttpUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isHttpsUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isNetworkUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isContentUrl(local_ref< java::lang::String > const&);
		static cpp_boolean isValidUrl(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > stripAnchor(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > guessFileName(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
	}; //class URLUtil

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_IMPL

namespace j2cpp {



android::webkit::URLUtil::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::webkit::URLUtil::URLUtil()
: cpp_object<android::webkit::URLUtil>(
	environment::get().get_jenv()->NewObject(
		get_class<android::webkit::URLUtil::J2CPP_CLASS_NAME>(),
		get_method_id<android::webkit::URLUtil::J2CPP_CLASS_NAME, android::webkit::URLUtil::J2CPP_METHOD_NAME(0), android::webkit::URLUtil::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


local_ref< java::lang::String > android::webkit::URLUtil::guessUrl(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::webkit::URLUtil::composeSearchUrl(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > android::webkit::URLUtil::decode(local_ref< cpp_byte_array<1> > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isAssetUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isCookielessProxyUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isFileUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isAboutUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isDataUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isJavaScriptUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isHttpUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isHttpsUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isNetworkUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isContentUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::URLUtil::isValidUrl(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::webkit::URLUtil::stripAnchor(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::webkit::URLUtil::guessFileName(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::webkit::URLUtil,"android/webkit/URLUtil")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,1,"guessUrl","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,2,"composeSearchUrl","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,3,"decode","([B)[B")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,4,"isAssetUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,5,"isCookielessProxyUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,6,"isFileUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,7,"isAboutUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,8,"isDataUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,9,"isJavaScriptUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,10,"isHttpUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,11,"isHttpsUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,12,"isNetworkUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,13,"isContentUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,14,"isValidUrl","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,15,"stripAnchor","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::webkit::URLUtil,16,"guessFileName","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_URLUTIL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
