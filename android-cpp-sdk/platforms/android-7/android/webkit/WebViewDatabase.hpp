/*================================================================================
  code generated by: java2cpp
  class: android.webkit.WebViewDatabase
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBVIEWDATABASE_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_WEBVIEWDATABASE_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }


#include <android/content/Context.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class WebViewDatabase;
	class WebViewDatabase
		: public cpp_object<WebViewDatabase>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_FIELD(0)

		WebViewDatabase(jobject jobj)
		: cpp_object<WebViewDatabase>(jobj)
		{
		}

		static local_ref< android::webkit::WebViewDatabase > getInstance(local_ref< android::content::Context > const&);
		cpp_boolean hasUsernamePassword();
		void clearUsernamePassword();
		cpp_boolean hasHttpAuthUsernamePassword();
		void clearHttpAuthUsernamePassword();
		cpp_boolean hasFormData();
		void clearFormData();

	}; //class WebViewDatabase

} //namespace webkit
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBVIEWDATABASE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_WEBVIEWDATABASE_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_WEBVIEWDATABASE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::webkit::WebViewDatabase > create< android::webkit::WebViewDatabase>()
{
	return local_ref< android::webkit::WebViewDatabase >(
		environment::get().get_jenv()->NewObject(
			get_class<android::webkit::WebViewDatabase::J2CPP_CLASS_NAME>(),
			get_method_id<android::webkit::WebViewDatabase::J2CPP_CLASS_NAME, android::webkit::WebViewDatabase::J2CPP_METHOD_NAME(0), android::webkit::WebViewDatabase::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< android::webkit::WebViewDatabase > android::webkit::WebViewDatabase::getInstance(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::webkit::WebViewDatabase >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::webkit::WebViewDatabase::hasUsernamePassword()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::webkit::WebViewDatabase::clearUsernamePassword()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_boolean android::webkit::WebViewDatabase::hasHttpAuthUsernamePassword()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::webkit::WebViewDatabase::clearHttpAuthUsernamePassword()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_boolean android::webkit::WebViewDatabase::hasFormData()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

void android::webkit::WebViewDatabase::clearFormData()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}



J2CPP_DEFINE_CLASS(android::webkit::WebViewDatabase,"android/webkit/WebViewDatabase")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,1,"getInstance","(Landroid/content/Context;)Landroid/webkit/WebViewDatabase;")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,2,"hasUsernamePassword","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,3,"clearUsernamePassword","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,4,"hasHttpAuthUsernamePassword","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,5,"clearHttpAuthUsernamePassword","()V")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,6,"hasFormData","()Z")
J2CPP_DEFINE_METHOD(android::webkit::WebViewDatabase,7,"clearFormData","()V")
J2CPP_DEFINE_FIELD(android::webkit::WebViewDatabase,0,"LOGTAG","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_WEBVIEWDATABASE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
