/*================================================================================
  code generated by: java2cpp
  class: android.webkit.CookieSyncManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_COOKIESYNCMANAGER_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_COOKIESYNCMANAGER_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace webkit { class WebSyncManager; } } }


#include <android/content/Context.hpp>
#include <android/webkit/WebSyncManager.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class CookieSyncManager;
	class CookieSyncManager
		: public cpp_object<CookieSyncManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit CookieSyncManager(jobject jobj)
		: cpp_object<CookieSyncManager>(jobj)
		{
		}

		operator local_ref<android::webkit::WebSyncManager>() const;


		static local_ref< android::webkit::CookieSyncManager > getInstance();
		static local_ref< android::webkit::CookieSyncManager > createInstance(local_ref< android::content::Context > const&);
	}; //class CookieSyncManager

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_COOKIESYNCMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_COOKIESYNCMANAGER_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_COOKIESYNCMANAGER_HPP_IMPL

namespace j2cpp {



android::webkit::CookieSyncManager::operator local_ref<android::webkit::WebSyncManager>() const
{
	return local_ref<android::webkit::WebSyncManager>(get_jtype());
}


local_ref< android::webkit::CookieSyncManager > android::webkit::CookieSyncManager::getInstance()
{
	return local_ref< android::webkit::CookieSyncManager >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>()
		)
	);
}

local_ref< android::webkit::CookieSyncManager > android::webkit::CookieSyncManager::createInstance(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::webkit::CookieSyncManager >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::webkit::CookieSyncManager,"android/webkit/CookieSyncManager")
J2CPP_DEFINE_METHOD(android::webkit::CookieSyncManager,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::webkit::CookieSyncManager,1,"getInstance","()Landroid/webkit/CookieSyncManager;")
J2CPP_DEFINE_METHOD(android::webkit::CookieSyncManager,2,"createInstance","(Landroid/content/Context;)Landroid/webkit/CookieSyncManager;")
J2CPP_DEFINE_METHOD(android::webkit::CookieSyncManager,3,"syncFromRamToFlash","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_COOKIESYNCMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
