/*================================================================================
  code generated by: java2cpp
  class: android.webkit.ValueCallback
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_VALUECALLBACK_HPP_DECL
#define J2CPP_ANDROID_WEBKIT_VALUECALLBACK_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace webkit {

	class ValueCallback;
	class ValueCallback
		: public cpp_object<ValueCallback>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit ValueCallback(jobject jobj)
		: cpp_object<ValueCallback>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void onReceiveValue(local_ref< java::lang::Object > const&);
	}; //class ValueCallback

} //namespace webkit
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_VALUECALLBACK_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WEBKIT_VALUECALLBACK_HPP_IMPL
#define J2CPP_ANDROID_WEBKIT_VALUECALLBACK_HPP_IMPL

namespace j2cpp {



android::webkit::ValueCallback::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void android::webkit::ValueCallback::onReceiveValue(local_ref< java::lang::Object > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::webkit::ValueCallback,"android/webkit/ValueCallback")
J2CPP_DEFINE_METHOD(android::webkit::ValueCallback,0,"onReceiveValue","(Ljava/lang/Object;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WEBKIT_VALUECALLBACK_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
