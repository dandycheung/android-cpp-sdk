/*================================================================================
  code generated by: java2cpp
  class: android.database.DatabaseUtils
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_DATABASEUTILS_HPP_DECL
#define J2CPP_ANDROID_DATABASE_DATABASEUTILS_HPP_DECL


namespace j2cpp { namespace java { namespace io { class PrintStream; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class StringBuilder; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Exception; } } }
namespace j2cpp { namespace android { namespace database { namespace DatabaseUtils_ { class InsertHelper; } } } }
namespace j2cpp { namespace android { namespace database { class Cursor; } } }
namespace j2cpp { namespace android { namespace database { namespace sqlite { class SQLiteDatabase; } } } }
namespace j2cpp { namespace android { namespace database { namespace sqlite { class SQLiteStatement; } } } }
namespace j2cpp { namespace android { namespace database { namespace sqlite { class SQLiteProgram; } } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace content { class ContentValues; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }


#include <android/content/ContentValues.hpp>
#include <android/content/Context.hpp>
#include <android/database/Cursor.hpp>
#include <android/database/DatabaseUtils.hpp>
#include <android/database/sqlite/SQLiteDatabase.hpp>
#include <android/database/sqlite/SQLiteProgram.hpp>
#include <android/database/sqlite/SQLiteStatement.hpp>
#include <android/os/Parcel.hpp>
#include <java/io/PrintStream.hpp>
#include <java/lang/Exception.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/lang/StringBuilder.hpp>


namespace j2cpp {

namespace android { namespace database {

	class DatabaseUtils;
	namespace DatabaseUtils_ {

		class InsertHelper;
		class InsertHelper
			: public cpp_object<InsertHelper>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)
			J2CPP_DECLARE_METHOD(10)
			J2CPP_DECLARE_METHOD(11)
			J2CPP_DECLARE_METHOD(12)
			J2CPP_DECLARE_METHOD(13)
			J2CPP_DECLARE_METHOD(14)
			J2CPP_DECLARE_METHOD(15)
			J2CPP_DECLARE_FIELD(0)

			InsertHelper(jobject jobj)
			: cpp_object<InsertHelper>(jobj)
			{
			}

			cpp_int getColumnIndex(local_ref< java::lang::String > const&);
			void bind(cpp_int const&, cpp_double const&);
			void bind(cpp_int const&, cpp_float const&);
			void bind(cpp_int const&, cpp_long const&);
			void bind(cpp_int const&, cpp_int const&);
			void bind(cpp_int const&, cpp_boolean const&);
			void bindNull(cpp_int const&);
			void bind(cpp_int const&, local_ref< cpp_byte_array<1> > const&);
			void bind(cpp_int const&, local_ref< java::lang::String > const&);
			cpp_long insert(local_ref< android::content::ContentValues > const&);
			cpp_long execute();
			void prepareForInsert();
			void prepareForReplace();
			cpp_long replace(local_ref< android::content::ContentValues > const&);
			void close();

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > TABLE_INFO_PRAGMA_DEFAULT_INDEX;
		}; //class InsertHelper

	} //namespace DatabaseUtils_

	class DatabaseUtils
		: public cpp_object<DatabaseUtils>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)

		typedef DatabaseUtils_::InsertHelper InsertHelper;

		DatabaseUtils(jobject jobj)
		: cpp_object<DatabaseUtils>(jobj)
		{
		}

		static void writeExceptionToParcel(local_ref< android::os::Parcel > const&, local_ref< java::lang::Exception > const&);
		static void readExceptionFromParcel(local_ref< android::os::Parcel > const&);
		static void readExceptionWithFileNotFoundExceptionFromParcel(local_ref< android::os::Parcel > const&);
		static void readExceptionWithOperationApplicationExceptionFromParcel(local_ref< android::os::Parcel > const&);
		static void bindObjectToProgram(local_ref< android::database::sqlite::SQLiteProgram > const&, cpp_int const&, local_ref< java::lang::Object > const&);
		static void appendEscapedSQLString(local_ref< java::lang::StringBuilder > const&, local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > sqlEscapeString(local_ref< java::lang::String > const&);
		static void appendValueToSql(local_ref< java::lang::StringBuilder > const&, local_ref< java::lang::Object > const&);
		static local_ref< java::lang::String > getCollationKey(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > getHexCollationKey(local_ref< java::lang::String > const&);
		static void dumpCursor(local_ref< android::database::Cursor > const&);
		static void dumpCursor(local_ref< android::database::Cursor > const&, local_ref< java::io::PrintStream > const&);
		static void dumpCursor(local_ref< android::database::Cursor > const&, local_ref< java::lang::StringBuilder > const&);
		static local_ref< java::lang::String > dumpCursorToString(local_ref< android::database::Cursor > const&);
		static void dumpCurrentRow(local_ref< android::database::Cursor > const&);
		static void dumpCurrentRow(local_ref< android::database::Cursor > const&, local_ref< java::io::PrintStream > const&);
		static void dumpCurrentRow(local_ref< android::database::Cursor > const&, local_ref< java::lang::StringBuilder > const&);
		static local_ref< java::lang::String > dumpCurrentRowToString(local_ref< android::database::Cursor > const&);
		static void cursorStringToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&);
		static void cursorStringToInsertHelper(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::database::DatabaseUtils_::InsertHelper > const&, cpp_int const&);
		static void cursorStringToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&, local_ref< java::lang::String > const&);
		static void cursorIntToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&);
		static void cursorIntToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&, local_ref< java::lang::String > const&);
		static void cursorLongToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&);
		static void cursorLongToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&, local_ref< java::lang::String > const&);
		static void cursorDoubleToCursorValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&);
		static void cursorDoubleToContentValues(local_ref< android::database::Cursor > const&, local_ref< java::lang::String > const&, local_ref< android::content::ContentValues > const&, local_ref< java::lang::String > const&);
		static void cursorRowToContentValues(local_ref< android::database::Cursor > const&, local_ref< android::content::ContentValues > const&);
		static cpp_long queryNumEntries(local_ref< android::database::sqlite::SQLiteDatabase > const&, local_ref< java::lang::String > const&);
		static cpp_long longForQuery(local_ref< android::database::sqlite::SQLiteDatabase > const&, local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::String, 1> > const&);
		static cpp_long longForQuery(local_ref< android::database::sqlite::SQLiteStatement > const&, local_ref< cpp_object_array<java::lang::String, 1> > const&);
		static local_ref< java::lang::String > stringForQuery(local_ref< android::database::sqlite::SQLiteDatabase > const&, local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::String, 1> > const&);
		static local_ref< java::lang::String > stringForQuery(local_ref< android::database::sqlite::SQLiteStatement > const&, local_ref< cpp_object_array<java::lang::String, 1> > const&);
		static void createDbFromSqlStatements(local_ref< android::content::Context > const&, local_ref< java::lang::String > const&, cpp_int const&, local_ref< java::lang::String > const&);
	}; //class DatabaseUtils

} //namespace database
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_DATABASEUTILS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_DATABASEUTILS_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_DATABASEUTILS_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::database::DatabaseUtils_::InsertHelper > create< android::database::DatabaseUtils_::InsertHelper>(local_ref< android::database::sqlite::SQLiteDatabase > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< android::database::DatabaseUtils_::InsertHelper >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::DatabaseUtils_::InsertHelper::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::DatabaseUtils_::InsertHelper::J2CPP_CLASS_NAME, android::database::DatabaseUtils_::InsertHelper::J2CPP_METHOD_NAME(0), android::database::DatabaseUtils_::InsertHelper::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::database::DatabaseUtils_::InsertHelper::getColumnIndex(local_ref< java::lang::String > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, cpp_double const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, cpp_long const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bindNull(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::bind(cpp_int const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_long android::database::DatabaseUtils_::InsertHelper::insert(local_ref< android::content::ContentValues > const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

cpp_long android::database::DatabaseUtils_::InsertHelper::execute()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::prepareForInsert()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::prepareForReplace()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

cpp_long android::database::DatabaseUtils_::InsertHelper::replace(local_ref< android::content::ContentValues > const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils_::InsertHelper::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}


static_field<
	android::database::DatabaseUtils_::InsertHelper::J2CPP_CLASS_NAME,
	android::database::DatabaseUtils_::InsertHelper::J2CPP_FIELD_NAME(0),
	android::database::DatabaseUtils_::InsertHelper::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::database::DatabaseUtils_::InsertHelper::TABLE_INFO_PRAGMA_DEFAULT_INDEX;


J2CPP_DEFINE_CLASS(android::database::DatabaseUtils_::InsertHelper,"android/database/DatabaseUtils$InsertHelper")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,0,"<init>","(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,1,"getColumnIndex","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,2,"bind","(ID)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,3,"bind","(IF)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,4,"bind","(IJ)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,5,"bind","(II)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,6,"bind","(IZ)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,7,"bindNull","(I)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,8,"bind","(I[B)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,9,"bind","(ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,10,"insert","(Landroid/content/ContentValues;)J")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,11,"execute","()J")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,12,"prepareForInsert","()V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,13,"prepareForReplace","()V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,14,"replace","(Landroid/content/ContentValues;)J")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils_::InsertHelper,15,"close","()V")
J2CPP_DEFINE_FIELD(android::database::DatabaseUtils_::InsertHelper,0,"TABLE_INFO_PRAGMA_DEFAULT_INDEX","I")


template <>
local_ref< android::database::DatabaseUtils > create< android::database::DatabaseUtils>()
{
	return local_ref< android::database::DatabaseUtils >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::DatabaseUtils::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::DatabaseUtils::J2CPP_CLASS_NAME, android::database::DatabaseUtils::J2CPP_METHOD_NAME(0), android::database::DatabaseUtils::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::database::DatabaseUtils::writeExceptionToParcel(local_ref< android::os::Parcel > const &a0, local_ref< java::lang::Exception > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::readExceptionFromParcel(local_ref< android::os::Parcel > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::readExceptionWithFileNotFoundExceptionFromParcel(local_ref< android::os::Parcel > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::readExceptionWithOperationApplicationExceptionFromParcel(local_ref< android::os::Parcel > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::bindObjectToProgram(local_ref< android::database::sqlite::SQLiteProgram > const &a0, cpp_int const &a1, local_ref< java::lang::Object > const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::appendEscapedSQLString(local_ref< java::lang::StringBuilder > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::sqlEscapeString(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::appendValueToSql(local_ref< java::lang::StringBuilder > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::getCollationKey(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::getHexCollationKey(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::dumpCursor(local_ref< android::database::Cursor > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::dumpCursor(local_ref< android::database::Cursor > const &a0, local_ref< java::io::PrintStream > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::dumpCursor(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::StringBuilder > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::dumpCursorToString(local_ref< android::database::Cursor > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::dumpCurrentRow(local_ref< android::database::Cursor > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::dumpCurrentRow(local_ref< android::database::Cursor > const &a0, local_ref< java::io::PrintStream > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::dumpCurrentRow(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::StringBuilder > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::dumpCurrentRowToString(local_ref< android::database::Cursor > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), true>(),
			a0.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorStringToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorStringToInsertHelper(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::database::DatabaseUtils_::InsertHelper > const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorStringToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorIntToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorIntToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorLongToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorLongToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorDoubleToCursorValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorDoubleToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::content::ContentValues > const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::cursorRowToContentValues(local_ref< android::database::Cursor > const &a0, local_ref< android::content::ContentValues > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_long android::database::DatabaseUtils::queryNumEntries(local_ref< android::database::sqlite::SQLiteDatabase > const &a0, local_ref< java::lang::String > const &a1)
{
	return cpp_long(
		environment::get().get_jenv()->CallStaticLongMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_long android::database::DatabaseUtils::longForQuery(local_ref< android::database::sqlite::SQLiteDatabase > const &a0, local_ref< java::lang::String > const &a1, local_ref< cpp_object_array<java::lang::String, 1> > const &a2)
{
	return cpp_long(
		environment::get().get_jenv()->CallStaticLongMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_long android::database::DatabaseUtils::longForQuery(local_ref< android::database::sqlite::SQLiteStatement > const &a0, local_ref< cpp_object_array<java::lang::String, 1> > const &a1)
{
	return cpp_long(
		environment::get().get_jenv()->CallStaticLongMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::stringForQuery(local_ref< android::database::sqlite::SQLiteDatabase > const &a0, local_ref< java::lang::String > const &a1, local_ref< cpp_object_array<java::lang::String, 1> > const &a2)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::database::DatabaseUtils::stringForQuery(local_ref< android::database::sqlite::SQLiteStatement > const &a0, local_ref< cpp_object_array<java::lang::String, 1> > const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::database::DatabaseUtils::createDbFromSqlStatements(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1, cpp_int const &a2, local_ref< java::lang::String > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::database::DatabaseUtils,"android/database/DatabaseUtils")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,1,"writeExceptionToParcel","(Landroid/os/Parcel;Ljava/lang/Exception;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,2,"readExceptionFromParcel","(Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,3,"readExceptionWithFileNotFoundExceptionFromParcel","(Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,4,"readExceptionWithOperationApplicationExceptionFromParcel","(Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,5,"bindObjectToProgram","(Landroid/database/sqlite/SQLiteProgram;ILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,6,"appendEscapedSQLString","(Ljava/lang/StringBuilder;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,7,"sqlEscapeString","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,8,"appendValueToSql","(Ljava/lang/StringBuilder;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,9,"getCollationKey","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,10,"getHexCollationKey","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,11,"dumpCursor","(Landroid/database/Cursor;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,12,"dumpCursor","(Landroid/database/Cursor;Ljava/io/PrintStream;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,13,"dumpCursor","(Landroid/database/Cursor;Ljava/lang/StringBuilder;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,14,"dumpCursorToString","(Landroid/database/Cursor;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,15,"dumpCurrentRow","(Landroid/database/Cursor;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,16,"dumpCurrentRow","(Landroid/database/Cursor;Ljava/io/PrintStream;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,17,"dumpCurrentRow","(Landroid/database/Cursor;Ljava/lang/StringBuilder;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,18,"dumpCurrentRowToString","(Landroid/database/Cursor;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,19,"cursorStringToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,20,"cursorStringToInsertHelper","(Landroid/database/Cursor;Ljava/lang/String;Landroid/database/DatabaseUtils$InsertHelper;I)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,21,"cursorStringToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,22,"cursorIntToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,23,"cursorIntToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,24,"cursorLongToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,25,"cursorLongToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,26,"cursorDoubleToCursorValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,27,"cursorDoubleToContentValues","(Landroid/database/Cursor;Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,28,"cursorRowToContentValues","(Landroid/database/Cursor;Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,29,"queryNumEntries","(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)J")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,30,"longForQuery","(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[java.lang.String)J")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,31,"longForQuery","(Landroid/database/sqlite/SQLiteStatement;[java.lang.String)J")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,32,"stringForQuery","(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[java.lang.String)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,33,"stringForQuery","(Landroid/database/sqlite/SQLiteStatement;[java.lang.String)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::DatabaseUtils,34,"createDbFromSqlStatements","(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_DATABASEUTILS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
