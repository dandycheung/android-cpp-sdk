/*================================================================================
  code generated by: java2cpp
  class: android.database.MatrixCursor
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_MATRIXCURSOR_HPP_DECL
#define J2CPP_ANDROID_DATABASE_MATRIXCURSOR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Iterable; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace database { namespace MatrixCursor_ { class RowBuilder; } } } }


#include <android/database/MatrixCursor.hpp>
#include <java/lang/Iterable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace database {

	class MatrixCursor;
	namespace MatrixCursor_ {

		class RowBuilder;
		class RowBuilder
			: public cpp_object<RowBuilder>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_FIELD(0)

			RowBuilder(jobject jobj)
			: cpp_object<RowBuilder>(jobj)
			{
			}

			local_ref< android::database::MatrixCursor_::RowBuilder > add(local_ref< java::lang::Object > const&);

		}; //class RowBuilder

	} //namespace MatrixCursor_

	class MatrixCursor
		: public cpp_object<MatrixCursor>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)

		typedef MatrixCursor_::RowBuilder RowBuilder;

		MatrixCursor(jobject jobj)
		: cpp_object<MatrixCursor>(jobj)
		{
		}

		local_ref< android::database::MatrixCursor_::RowBuilder > newRow();
		void addRow(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		void addRow(local_ref< java::lang::Iterable > const&);
		cpp_int getCount();
		local_ref< cpp_object_array<java::lang::String, 1> > getColumnNames();
		local_ref< java::lang::String > getString(cpp_int const&);
		cpp_short getShort(cpp_int const&);
		cpp_int getInt(cpp_int const&);
		cpp_long getLong(cpp_int const&);
		cpp_float getFloat(cpp_int const&);
		cpp_double getDouble(cpp_int const&);
		cpp_boolean isNull(cpp_int const&);
	}; //class MatrixCursor

} //namespace database
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_MATRIXCURSOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_MATRIXCURSOR_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_MATRIXCURSOR_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::database::MatrixCursor_::RowBuilder > create< android::database::MatrixCursor_::RowBuilder>(local_ref< android::database::MatrixCursor > const &a0)
{
	return local_ref< android::database::MatrixCursor_::RowBuilder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::MatrixCursor_::RowBuilder::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::MatrixCursor_::RowBuilder::J2CPP_CLASS_NAME, android::database::MatrixCursor_::RowBuilder::J2CPP_METHOD_NAME(0), android::database::MatrixCursor_::RowBuilder::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::database::MatrixCursor_::RowBuilder > android::database::MatrixCursor_::RowBuilder::add(local_ref< java::lang::Object > const &a0)
{
	return local_ref< android::database::MatrixCursor_::RowBuilder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::database::MatrixCursor_::RowBuilder,"android/database/MatrixCursor$RowBuilder")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor_::RowBuilder,0,"<init>","(Landroid/database/MatrixCursor;)V")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor_::RowBuilder,1,"add","(Ljava/lang/Object;)Landroid/database/MatrixCursor$RowBuilder;")
J2CPP_DEFINE_FIELD(android::database::MatrixCursor_::RowBuilder,0,"this$0","Landroid/database/MatrixCursor;")


template <>
local_ref< android::database::MatrixCursor > create< android::database::MatrixCursor>(local_ref< cpp_object_array<java::lang::String, 1> > const &a0, cpp_int const &a1)
{
	return local_ref< android::database::MatrixCursor >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::MatrixCursor::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::MatrixCursor::J2CPP_CLASS_NAME, android::database::MatrixCursor::J2CPP_METHOD_NAME(0), android::database::MatrixCursor::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::database::MatrixCursor > create< android::database::MatrixCursor>(local_ref< cpp_object_array<java::lang::String, 1> > const &a0)
{
	return local_ref< android::database::MatrixCursor >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::MatrixCursor::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::MatrixCursor::J2CPP_CLASS_NAME, android::database::MatrixCursor::J2CPP_METHOD_NAME(1), android::database::MatrixCursor::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::database::MatrixCursor_::RowBuilder > android::database::MatrixCursor::newRow()
{
	return local_ref< android::database::MatrixCursor_::RowBuilder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::database::MatrixCursor::addRow(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::MatrixCursor::addRow(local_ref< java::lang::Iterable > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::database::MatrixCursor::getCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< cpp_object_array<java::lang::String, 1> > android::database::MatrixCursor::getColumnNames()
{
	return local_ref< cpp_object_array<java::lang::String, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< java::lang::String > android::database::MatrixCursor::getString(cpp_int const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

cpp_short android::database::MatrixCursor::getShort(cpp_int const &a0)
{
	return cpp_short(
		environment::get().get_jenv()->CallShortMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::database::MatrixCursor::getInt(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

cpp_long android::database::MatrixCursor::getLong(cpp_int const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::database::MatrixCursor::getFloat(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

cpp_double android::database::MatrixCursor::getDouble(cpp_int const &a0)
{
	return cpp_double(
		environment::get().get_jenv()->CallDoubleMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::database::MatrixCursor::isNull(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::database::MatrixCursor,"android/database/MatrixCursor")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,0,"<init>","([java.lang.StringI)V")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,1,"<init>","([java.lang.String)V")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,2,"newRow","()Landroid/database/MatrixCursor$RowBuilder;")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,3,"addRow","([java.lang.Object)V")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,4,"addRow","(Ljava/lang/Iterable;)V")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,5,"getCount","()I")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,6,"getColumnNames","()[java.lang.String")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,7,"getString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,8,"getShort","(I)S")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,9,"getInt","(I)I")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,10,"getLong","(I)J")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,11,"getFloat","(I)F")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,12,"getDouble","(I)D")
J2CPP_DEFINE_METHOD(android::database::MatrixCursor,13,"isNull","(I)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_MATRIXCURSOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
