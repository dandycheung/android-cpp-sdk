/*================================================================================
  code generated by: java2cpp
  class: android.widget.RemoteViews
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_REMOTEVIEWS_HPP_DECL
#define J2CPP_ANDROID_WIDGET_REMOTEVIEWS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Class; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { namespace annotation { class Annotation; } } } }
namespace j2cpp { namespace java { namespace lang { class RuntimeException; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Exception; } } }
namespace j2cpp { namespace android { namespace net { class Uri; } } }
namespace j2cpp { namespace android { namespace app { class PendingIntent; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class ViewGroup; } } }
namespace j2cpp { namespace android { namespace view { namespace LayoutInflater_ { class Filter; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/app/PendingIntent.hpp>
#include <android/content/Context.hpp>
#include <android/graphics/Bitmap.hpp>
#include <android/net/Uri.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <android/view/LayoutInflater.hpp>
#include <android/view/View.hpp>
#include <android/view/ViewGroup.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Class.hpp>
#include <java/lang/Exception.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/RuntimeException.hpp>
#include <java/lang/String.hpp>
#include <java/lang/annotation/Annotation.hpp>


namespace j2cpp {

namespace android { namespace widget {

	class RemoteViews;
	namespace RemoteViews_ {

		class ActionException;
		class ActionException
			: public cpp_object<ActionException>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)

			explicit ActionException(jobject jobj)
			: cpp_object<ActionException>(jobj)
			{
			}

			operator local_ref<java::lang::RuntimeException>() const;


			ActionException(local_ref< java::lang::Exception > const&);
			ActionException(local_ref< java::lang::String > const&);
		}; //class ActionException

		class RemoteView;
		class RemoteView
			: public cpp_object<RemoteView>
		{
		public:

			J2CPP_DECLARE_CLASS


			explicit RemoteView(jobject jobj)
			: cpp_object<RemoteView>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;
			operator local_ref<java::lang::annotation::Annotation>() const;

		}; //class RemoteView

	} //namespace RemoteViews_

	class RemoteViews
		: public cpp_object<RemoteViews>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_FIELD(0)

		typedef RemoteViews_::ActionException ActionException;
		typedef RemoteViews_::RemoteView RemoteView;

		explicit RemoteViews(jobject jobj)
		: cpp_object<RemoteViews>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::os::Parcelable>() const;
		operator local_ref<android::view::LayoutInflater_::Filter>() const;


		RemoteViews(local_ref< java::lang::String > const&, cpp_int const&);
		RemoteViews(local_ref< android::os::Parcel > const&);
		local_ref< java::lang::String > getPackage();
		cpp_int getLayoutId();
		void addView(cpp_int const&, local_ref< android::widget::RemoteViews > const&);
		void removeAllViews(cpp_int const&);
		void setViewVisibility(cpp_int const&, cpp_int const&);
		void setTextViewText(cpp_int const&, local_ref< java::lang::CharSequence > const&);
		void setImageViewResource(cpp_int const&, cpp_int const&);
		void setImageViewUri(cpp_int const&, local_ref< android::net::Uri > const&);
		void setImageViewBitmap(cpp_int const&, local_ref< android::graphics::Bitmap > const&);
		void setChronometer(cpp_int const&, cpp_long const&, local_ref< java::lang::String > const&, cpp_boolean const&);
		void setProgressBar(cpp_int const&, cpp_int const&, cpp_int const&, cpp_boolean const&);
		void setOnClickPendingIntent(cpp_int const&, local_ref< android::app::PendingIntent > const&);
		void setTextColor(cpp_int const&, cpp_int const&);
		void setBoolean(cpp_int const&, local_ref< java::lang::String > const&, cpp_boolean const&);
		void setByte(cpp_int const&, local_ref< java::lang::String > const&, cpp_byte const&);
		void setShort(cpp_int const&, local_ref< java::lang::String > const&, cpp_short const&);
		void setInt(cpp_int const&, local_ref< java::lang::String > const&, cpp_int const&);
		void setLong(cpp_int const&, local_ref< java::lang::String > const&, cpp_long const&);
		void setFloat(cpp_int const&, local_ref< java::lang::String > const&, cpp_float const&);
		void setDouble(cpp_int const&, local_ref< java::lang::String > const&, cpp_double const&);
		void setChar(cpp_int const&, local_ref< java::lang::String > const&, cpp_char const&);
		void setString(cpp_int const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void setCharSequence(cpp_int const&, local_ref< java::lang::String > const&, local_ref< java::lang::CharSequence > const&);
		void setUri(cpp_int const&, local_ref< java::lang::String > const&, local_ref< android::net::Uri > const&);
		void setBitmap(cpp_int const&, local_ref< java::lang::String > const&, local_ref< android::graphics::Bitmap > const&);
		local_ref< android::view::View > apply(local_ref< android::content::Context > const&, local_ref< android::view::ViewGroup > const&);
		void reapply(local_ref< android::content::Context > const&, local_ref< android::view::View > const&);
		cpp_boolean onLoadClass(local_ref< java::lang::Class > const&);
		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class RemoteViews

} //namespace widget
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_REMOTEVIEWS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_REMOTEVIEWS_HPP_IMPL
#define J2CPP_ANDROID_WIDGET_REMOTEVIEWS_HPP_IMPL

namespace j2cpp {




android::widget::RemoteViews_::ActionException::operator local_ref<java::lang::RuntimeException>() const
{
	return local_ref<java::lang::RuntimeException>(get_jtype());
}


android::widget::RemoteViews_::ActionException::ActionException(local_ref< java::lang::Exception > const &a0)
: cpp_object<android::widget::RemoteViews_::ActionException>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::RemoteViews_::ActionException::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::RemoteViews_::ActionException::J2CPP_CLASS_NAME, android::widget::RemoteViews_::ActionException::J2CPP_METHOD_NAME(0), android::widget::RemoteViews_::ActionException::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}



android::widget::RemoteViews_::ActionException::ActionException(local_ref< java::lang::String > const &a0)
: cpp_object<android::widget::RemoteViews_::ActionException>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::RemoteViews_::ActionException::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::RemoteViews_::ActionException::J2CPP_CLASS_NAME, android::widget::RemoteViews_::ActionException::J2CPP_METHOD_NAME(1), android::widget::RemoteViews_::ActionException::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}



J2CPP_DEFINE_CLASS(android::widget::RemoteViews_::ActionException,"android/widget/RemoteViews$ActionException")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews_::ActionException,0,"<init>","(Ljava/lang/Exception;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews_::ActionException,1,"<init>","(Ljava/lang/String;)V")


android::widget::RemoteViews_::RemoteView::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::widget::RemoteViews_::RemoteView::operator local_ref<java::lang::annotation::Annotation>() const
{
	return local_ref<java::lang::annotation::Annotation>(get_jtype());
}

J2CPP_DEFINE_CLASS(android::widget::RemoteViews_::RemoteView,"android/widget/RemoteViews$RemoteView")



android::widget::RemoteViews::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::widget::RemoteViews::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jtype());
}

android::widget::RemoteViews::operator local_ref<android::view::LayoutInflater_::Filter>() const
{
	return local_ref<android::view::LayoutInflater_::Filter>(get_jtype());
}


android::widget::RemoteViews::RemoteViews(local_ref< java::lang::String > const &a0, cpp_int const &a1)
: cpp_object<android::widget::RemoteViews>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::RemoteViews::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::RemoteViews::J2CPP_CLASS_NAME, android::widget::RemoteViews::J2CPP_METHOD_NAME(0), android::widget::RemoteViews::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}



android::widget::RemoteViews::RemoteViews(local_ref< android::os::Parcel > const &a0)
: cpp_object<android::widget::RemoteViews>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::RemoteViews::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::RemoteViews::J2CPP_CLASS_NAME, android::widget::RemoteViews::J2CPP_METHOD_NAME(1), android::widget::RemoteViews::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}


local_ref< java::lang::String > android::widget::RemoteViews::getPackage()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int android::widget::RemoteViews::getLayoutId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::widget::RemoteViews::addView(cpp_int const &a0, local_ref< android::widget::RemoteViews > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::removeAllViews(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setViewVisibility(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setTextViewText(cpp_int const &a0, local_ref< java::lang::CharSequence > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setImageViewResource(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setImageViewUri(cpp_int const &a0, local_ref< android::net::Uri > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setImageViewBitmap(cpp_int const &a0, local_ref< android::graphics::Bitmap > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setChronometer(cpp_int const &a0, cpp_long const &a1, local_ref< java::lang::String > const &a2, cpp_boolean const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setProgressBar(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_boolean const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setOnClickPendingIntent(cpp_int const &a0, local_ref< android::app::PendingIntent > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setTextColor(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setBoolean(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_boolean const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setByte(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_byte const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setShort(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_short const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setInt(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setLong(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setFloat(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_float const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setDouble(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_double const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setChar(cpp_int const &a0, local_ref< java::lang::String > const &a1, cpp_char const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setString(cpp_int const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setCharSequence(cpp_int const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::CharSequence > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setUri(cpp_int const &a0, local_ref< java::lang::String > const &a1, local_ref< android::net::Uri > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::RemoteViews::setBitmap(cpp_int const &a0, local_ref< java::lang::String > const &a1, local_ref< android::graphics::Bitmap > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< android::view::View > android::widget::RemoteViews::apply(local_ref< android::content::Context > const &a0, local_ref< android::view::ViewGroup > const &a1)
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::widget::RemoteViews::reapply(local_ref< android::content::Context > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::widget::RemoteViews::onLoadClass(local_ref< java::lang::Class > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::widget::RemoteViews::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

void android::widget::RemoteViews::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



static_field<
	android::widget::RemoteViews::J2CPP_CLASS_NAME,
	android::widget::RemoteViews::J2CPP_FIELD_NAME(0),
	android::widget::RemoteViews::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::widget::RemoteViews::CREATOR;


J2CPP_DEFINE_CLASS(android::widget::RemoteViews,"android/widget/RemoteViews")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,0,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,1,"<init>","(Landroid/os/Parcel;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,2,"getPackage","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,3,"getLayoutId","()I")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,4,"addView","(ILandroid/widget/RemoteViews;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,5,"removeAllViews","(I)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,6,"setViewVisibility","(II)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,7,"setTextViewText","(ILjava/lang/CharSequence;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,8,"setImageViewResource","(II)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,9,"setImageViewUri","(ILandroid/net/Uri;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,10,"setImageViewBitmap","(ILandroid/graphics/Bitmap;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,11,"setChronometer","(IJLjava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,12,"setProgressBar","(IIIZ)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,13,"setOnClickPendingIntent","(ILandroid/app/PendingIntent;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,14,"setTextColor","(II)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,15,"setBoolean","(ILjava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,16,"setByte","(ILjava/lang/String;B)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,17,"setShort","(ILjava/lang/String;S)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,18,"setInt","(ILjava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,19,"setLong","(ILjava/lang/String;J)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,20,"setFloat","(ILjava/lang/String;F)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,21,"setDouble","(ILjava/lang/String;D)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,22,"setChar","(ILjava/lang/String;C)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,23,"setString","(ILjava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,24,"setCharSequence","(ILjava/lang/String;Ljava/lang/CharSequence;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,25,"setUri","(ILjava/lang/String;Landroid/net/Uri;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,26,"setBitmap","(ILjava/lang/String;Landroid/graphics/Bitmap;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,27,"apply","(Landroid/content/Context;Landroid/view/ViewGroup;)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,28,"reapply","(Landroid/content/Context;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,29,"onLoadClass","(Ljava/lang/Class;)Z")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,30,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,31,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::widget::RemoteViews,32,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::widget::RemoteViews,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_REMOTEVIEWS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
