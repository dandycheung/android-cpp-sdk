/*================================================================================
  code generated by: java2cpp
  class: android.widget.Checkable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_CHECKABLE_HPP_DECL
#define J2CPP_ANDROID_WIDGET_CHECKABLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace widget {

	class Checkable;
	class Checkable
		: public cpp_object<Checkable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit Checkable(jobject jobj)
		: cpp_object<Checkable>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		void setChecked(cpp_boolean const&);
		cpp_boolean isChecked();
		void toggle();
	}; //class Checkable

} //namespace widget
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_CHECKABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_CHECKABLE_HPP_IMPL
#define J2CPP_ANDROID_WIDGET_CHECKABLE_HPP_IMPL

namespace j2cpp {



android::widget::Checkable::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void android::widget::Checkable::setChecked(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::widget::Checkable::isChecked()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::widget::Checkable::toggle()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::widget::Checkable,"android/widget/Checkable")
J2CPP_DEFINE_METHOD(android::widget::Checkable,0,"setChecked","(Z)V")
J2CPP_DEFINE_METHOD(android::widget::Checkable,1,"isChecked","()Z")
J2CPP_DEFINE_METHOD(android::widget::Checkable,2,"toggle","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_CHECKABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
