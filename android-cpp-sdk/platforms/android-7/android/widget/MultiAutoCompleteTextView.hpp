/*================================================================================
  code generated by: java2cpp
  class: android.widget.MultiAutoCompleteTextView
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_HPP_DECL
#define J2CPP_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace widget { class AutoCompleteTextView; } } }
namespace j2cpp { namespace android { namespace widget { namespace MultiAutoCompleteTextView_ { class Tokenizer; } } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }


#include <android/content/Context.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/widget/AutoCompleteTextView.hpp>
#include <android/widget/MultiAutoCompleteTextView.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace widget {

	class MultiAutoCompleteTextView;
	namespace MultiAutoCompleteTextView_ {

		class Tokenizer;
		class Tokenizer
			: public cpp_object<Tokenizer>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)

			explicit Tokenizer(jobject jobj)
			: cpp_object<Tokenizer>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			cpp_int findTokenStart(local_ref< java::lang::CharSequence > const&, cpp_int const&);
			cpp_int findTokenEnd(local_ref< java::lang::CharSequence > const&, cpp_int const&);
			local_ref< java::lang::CharSequence > terminateToken(local_ref< java::lang::CharSequence > const&);
		}; //class Tokenizer

		class CommaTokenizer;
		class CommaTokenizer
			: public cpp_object<CommaTokenizer>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)

			explicit CommaTokenizer(jobject jobj)
			: cpp_object<CommaTokenizer>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;
			operator local_ref<android::widget::MultiAutoCompleteTextView_::Tokenizer>() const;


			CommaTokenizer();
			cpp_int findTokenStart(local_ref< java::lang::CharSequence > const&, cpp_int const&);
			cpp_int findTokenEnd(local_ref< java::lang::CharSequence > const&, cpp_int const&);
			local_ref< java::lang::CharSequence > terminateToken(local_ref< java::lang::CharSequence > const&);
		}; //class CommaTokenizer

	} //namespace MultiAutoCompleteTextView_

	class MultiAutoCompleteTextView
		: public cpp_object<MultiAutoCompleteTextView>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)

		typedef MultiAutoCompleteTextView_::Tokenizer Tokenizer;
		typedef MultiAutoCompleteTextView_::CommaTokenizer CommaTokenizer;

		explicit MultiAutoCompleteTextView(jobject jobj)
		: cpp_object<MultiAutoCompleteTextView>(jobj)
		{
		}

		operator local_ref<android::widget::AutoCompleteTextView>() const;


		MultiAutoCompleteTextView(local_ref< android::content::Context > const&);
		MultiAutoCompleteTextView(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		MultiAutoCompleteTextView(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&, cpp_int const&);
		void setTokenizer(local_ref< android::widget::MultiAutoCompleteTextView_::Tokenizer > const&);
		cpp_boolean enoughToFilter();
		void performValidation();
	}; //class MultiAutoCompleteTextView

} //namespace widget
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_HPP_IMPL
#define J2CPP_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_HPP_IMPL

namespace j2cpp {




android::widget::MultiAutoCompleteTextView_::Tokenizer::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

cpp_int android::widget::MultiAutoCompleteTextView_::Tokenizer::findTokenStart(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::widget::MultiAutoCompleteTextView_::Tokenizer::findTokenEnd(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::CharSequence > android::widget::MultiAutoCompleteTextView_::Tokenizer::terminateToken(local_ref< java::lang::CharSequence > const &a0)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::widget::MultiAutoCompleteTextView_::Tokenizer,"android/widget/MultiAutoCompleteTextView$Tokenizer")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::Tokenizer,0,"findTokenStart","(Ljava/lang/CharSequence;I)I")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::Tokenizer,1,"findTokenEnd","(Ljava/lang/CharSequence;I)I")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::Tokenizer,2,"terminateToken","(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;")


android::widget::MultiAutoCompleteTextView_::CommaTokenizer::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::widget::MultiAutoCompleteTextView_::CommaTokenizer::operator local_ref<android::widget::MultiAutoCompleteTextView_::Tokenizer>() const
{
	return local_ref<android::widget::MultiAutoCompleteTextView_::Tokenizer>(get_jtype());
}


android::widget::MultiAutoCompleteTextView_::CommaTokenizer::CommaTokenizer()
: cpp_object<android::widget::MultiAutoCompleteTextView_::CommaTokenizer>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::MultiAutoCompleteTextView_::CommaTokenizer::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::MultiAutoCompleteTextView_::CommaTokenizer::J2CPP_CLASS_NAME, android::widget::MultiAutoCompleteTextView_::CommaTokenizer::J2CPP_METHOD_NAME(0), android::widget::MultiAutoCompleteTextView_::CommaTokenizer::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


cpp_int android::widget::MultiAutoCompleteTextView_::CommaTokenizer::findTokenStart(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::widget::MultiAutoCompleteTextView_::CommaTokenizer::findTokenEnd(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::CharSequence > android::widget::MultiAutoCompleteTextView_::CommaTokenizer::terminateToken(local_ref< java::lang::CharSequence > const &a0)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::widget::MultiAutoCompleteTextView_::CommaTokenizer,"android/widget/MultiAutoCompleteTextView$CommaTokenizer")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::CommaTokenizer,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::CommaTokenizer,1,"findTokenStart","(Ljava/lang/CharSequence;I)I")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::CommaTokenizer,2,"findTokenEnd","(Ljava/lang/CharSequence;I)I")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView_::CommaTokenizer,3,"terminateToken","(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;")



android::widget::MultiAutoCompleteTextView::operator local_ref<android::widget::AutoCompleteTextView>() const
{
	return local_ref<android::widget::AutoCompleteTextView>(get_jtype());
}


android::widget::MultiAutoCompleteTextView::MultiAutoCompleteTextView(local_ref< android::content::Context > const &a0)
: cpp_object<android::widget::MultiAutoCompleteTextView>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::MultiAutoCompleteTextView::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::MultiAutoCompleteTextView::J2CPP_CLASS_NAME, android::widget::MultiAutoCompleteTextView::J2CPP_METHOD_NAME(0), android::widget::MultiAutoCompleteTextView::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}



android::widget::MultiAutoCompleteTextView::MultiAutoCompleteTextView(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: cpp_object<android::widget::MultiAutoCompleteTextView>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::MultiAutoCompleteTextView::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::MultiAutoCompleteTextView::J2CPP_CLASS_NAME, android::widget::MultiAutoCompleteTextView::J2CPP_METHOD_NAME(1), android::widget::MultiAutoCompleteTextView::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}



android::widget::MultiAutoCompleteTextView::MultiAutoCompleteTextView(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, cpp_int const &a2)
: cpp_object<android::widget::MultiAutoCompleteTextView>(
	environment::get().get_jenv()->NewObject(
		get_class<android::widget::MultiAutoCompleteTextView::J2CPP_CLASS_NAME>(),
		get_method_id<android::widget::MultiAutoCompleteTextView::J2CPP_CLASS_NAME, android::widget::MultiAutoCompleteTextView::J2CPP_METHOD_NAME(2), android::widget::MultiAutoCompleteTextView::J2CPP_METHOD_SIGNATURE(2), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
	)
)
{
}


void android::widget::MultiAutoCompleteTextView::setTokenizer(local_ref< android::widget::MultiAutoCompleteTextView_::Tokenizer > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


cpp_boolean android::widget::MultiAutoCompleteTextView::enoughToFilter()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

void android::widget::MultiAutoCompleteTextView::performValidation()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}




J2CPP_DEFINE_CLASS(android::widget::MultiAutoCompleteTextView,"android/widget/MultiAutoCompleteTextView")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,3,"setTokenizer","(Landroid/widget/MultiAutoCompleteTextView$Tokenizer;)V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,4,"performFiltering","(Ljava/lang/CharSequence;I)V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,5,"enoughToFilter","()Z")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,6,"performValidation","()V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,7,"performFiltering","(Ljava/lang/CharSequence;III)V")
J2CPP_DEFINE_METHOD(android::widget::MultiAutoCompleteTextView,8,"replaceText","(Ljava/lang/CharSequence;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
