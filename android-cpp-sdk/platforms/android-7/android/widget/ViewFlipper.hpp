/*================================================================================
  code generated by: java2cpp
  class: android.widget.ViewFlipper
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_VIEWFLIPPER_HPP_DECL
#define J2CPP_ANDROID_WIDGET_VIEWFLIPPER_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }


#include <android/content/Context.hpp>
#include <android/util/AttributeSet.hpp>


namespace j2cpp {

namespace android { namespace widget {

	class ViewFlipper;
	class ViewFlipper
		: public cpp_object<ViewFlipper>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		ViewFlipper(jobject jobj)
		: cpp_object<ViewFlipper>(jobj)
		{
		}

		void setFlipInterval(cpp_int const&);
		void startFlipping();
		void stopFlipping();
		cpp_boolean isFlipping();
		void setAutoStart(cpp_boolean const&);
		cpp_boolean isAutoStart();
	}; //class ViewFlipper

} //namespace widget
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_VIEWFLIPPER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_VIEWFLIPPER_HPP_IMPL
#define J2CPP_ANDROID_WIDGET_VIEWFLIPPER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::widget::ViewFlipper > create< android::widget::ViewFlipper>(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::widget::ViewFlipper >(
		environment::get().get_jenv()->NewObject(
			get_class<android::widget::ViewFlipper::J2CPP_CLASS_NAME>(),
			get_method_id<android::widget::ViewFlipper::J2CPP_CLASS_NAME, android::widget::ViewFlipper::J2CPP_METHOD_NAME(0), android::widget::ViewFlipper::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::widget::ViewFlipper > create< android::widget::ViewFlipper>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
{
	return local_ref< android::widget::ViewFlipper >(
		environment::get().get_jenv()->NewObject(
			get_class<android::widget::ViewFlipper::J2CPP_CLASS_NAME>(),
			get_method_id<android::widget::ViewFlipper::J2CPP_CLASS_NAME, android::widget::ViewFlipper::J2CPP_METHOD_NAME(1), android::widget::ViewFlipper::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}




void android::widget::ViewFlipper::setFlipInterval(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::widget::ViewFlipper::startFlipping()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

void android::widget::ViewFlipper::stopFlipping()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_boolean android::widget::ViewFlipper::isFlipping()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

void android::widget::ViewFlipper::setAutoStart(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::widget::ViewFlipper::isAutoStart()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::widget::ViewFlipper,"android/widget/ViewFlipper")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,2,"onAttachedToWindow","()V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,3,"onDetachedFromWindow","()V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,4,"onWindowVisibilityChanged","(I)V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,5,"setFlipInterval","(I)V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,6,"startFlipping","()V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,7,"stopFlipping","()V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,8,"isFlipping","()Z")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,9,"setAutoStart","(Z)V")
J2CPP_DEFINE_METHOD(android::widget::ViewFlipper,10,"isAutoStart","()Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_VIEWFLIPPER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
