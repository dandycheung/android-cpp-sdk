/*================================================================================
  code generated by: java2cpp
  class: android.net.LocalSocket
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_LOCALSOCKET_HPP_DECL
#define J2CPP_ANDROID_NET_LOCALSOCKET_HPP_DECL


namespace j2cpp { namespace java { namespace io { class FileDescriptor; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class OutputStream; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace net { class Credentials; } } }
namespace j2cpp { namespace android { namespace net { class LocalSocketAddress; } } }


#include <android/net/Credentials.hpp>
#include <android/net/LocalSocketAddress.hpp>
#include <java/io/FileDescriptor.hpp>
#include <java/io/InputStream.hpp>
#include <java/io/OutputStream.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace net {

	class LocalSocket;
	class LocalSocket
		: public cpp_object<LocalSocket>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)

		explicit LocalSocket(jobject jobj)
		: cpp_object<LocalSocket>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		LocalSocket();
		local_ref< java::lang::String > toString();
		void connect(local_ref< android::net::LocalSocketAddress > const&);
		void bind(local_ref< android::net::LocalSocketAddress > const&);
		local_ref< android::net::LocalSocketAddress > getLocalSocketAddress();
		local_ref< java::io::InputStream > getInputStream();
		local_ref< java::io::OutputStream > getOutputStream();
		void close();
		void shutdownInput();
		void shutdownOutput();
		void setReceiveBufferSize(cpp_int const&);
		cpp_int getReceiveBufferSize();
		void setSoTimeout(cpp_int const&);
		cpp_int getSoTimeout();
		void setSendBufferSize(cpp_int const&);
		cpp_int getSendBufferSize();
		local_ref< android::net::LocalSocketAddress > getRemoteSocketAddress();
		cpp_boolean isConnected();
		cpp_boolean isClosed();
		cpp_boolean isBound();
		cpp_boolean isOutputShutdown();
		cpp_boolean isInputShutdown();
		void connect(local_ref< android::net::LocalSocketAddress > const&, cpp_int const&);
		void setFileDescriptorsForSend(local_ref< cpp_object_array<java::io::FileDescriptor, 1> > const&);
		local_ref< cpp_object_array<java::io::FileDescriptor, 1> > getAncillaryFileDescriptors();
		local_ref< android::net::Credentials > getPeerCredentials();
		local_ref< java::io::FileDescriptor > getFileDescriptor();
	}; //class LocalSocket

} //namespace net
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_LOCALSOCKET_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_LOCALSOCKET_HPP_IMPL
#define J2CPP_ANDROID_NET_LOCALSOCKET_HPP_IMPL

namespace j2cpp {



android::net::LocalSocket::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::net::LocalSocket::LocalSocket()
: cpp_object<android::net::LocalSocket>(
	environment::get().get_jenv()->NewObject(
		get_class<android::net::LocalSocket::J2CPP_CLASS_NAME>(),
		get_method_id<android::net::LocalSocket::J2CPP_CLASS_NAME, android::net::LocalSocket::J2CPP_METHOD_NAME(0), android::net::LocalSocket::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


local_ref< java::lang::String > android::net::LocalSocket::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::net::LocalSocket::connect(local_ref< android::net::LocalSocketAddress > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::net::LocalSocket::bind(local_ref< android::net::LocalSocketAddress > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::LocalSocketAddress > android::net::LocalSocket::getLocalSocketAddress()
{
	return local_ref< android::net::LocalSocketAddress >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::io::InputStream > android::net::LocalSocket::getInputStream()
{
	return local_ref< java::io::InputStream >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< java::io::OutputStream > android::net::LocalSocket::getOutputStream()
{
	return local_ref< java::io::OutputStream >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

void android::net::LocalSocket::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

void android::net::LocalSocket::shutdownInput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

void android::net::LocalSocket::shutdownOutput()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

void android::net::LocalSocket::setReceiveBufferSize(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::net::LocalSocket::getReceiveBufferSize()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

void android::net::LocalSocket::setSoTimeout(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::net::LocalSocket::getSoTimeout()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

void android::net::LocalSocket::setSendBufferSize(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::net::LocalSocket::getSendBufferSize()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

local_ref< android::net::LocalSocketAddress > android::net::LocalSocket::getRemoteSocketAddress()
{
	return local_ref< android::net::LocalSocketAddress >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

cpp_boolean android::net::LocalSocket::isConnected()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_boolean android::net::LocalSocket::isClosed()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_boolean android::net::LocalSocket::isBound()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

cpp_boolean android::net::LocalSocket::isOutputShutdown()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>()
		)
	);
}

cpp_boolean android::net::LocalSocket::isInputShutdown()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

void android::net::LocalSocket::connect(local_ref< android::net::LocalSocketAddress > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::net::LocalSocket::setFileDescriptorsForSend(local_ref< cpp_object_array<java::io::FileDescriptor, 1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::io::FileDescriptor, 1> > android::net::LocalSocket::getAncillaryFileDescriptors()
{
	return local_ref< cpp_object_array<java::io::FileDescriptor, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>()
		)
	);
}

local_ref< android::net::Credentials > android::net::LocalSocket::getPeerCredentials()
{
	return local_ref< android::net::Credentials >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>()
		)
	);
}

local_ref< java::io::FileDescriptor > android::net::LocalSocket::getFileDescriptor()
{
	return local_ref< java::io::FileDescriptor >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::net::LocalSocket,"android/net/LocalSocket")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,1,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,2,"connect","(Landroid/net/LocalSocketAddress;)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,3,"bind","(Landroid/net/LocalSocketAddress;)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,4,"getLocalSocketAddress","()Landroid/net/LocalSocketAddress;")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,5,"getInputStream","()Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,6,"getOutputStream","()Ljava/io/OutputStream;")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,7,"close","()V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,8,"shutdownInput","()V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,9,"shutdownOutput","()V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,10,"setReceiveBufferSize","(I)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,11,"getReceiveBufferSize","()I")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,12,"setSoTimeout","(I)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,13,"getSoTimeout","()I")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,14,"setSendBufferSize","(I)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,15,"getSendBufferSize","()I")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,16,"getRemoteSocketAddress","()Landroid/net/LocalSocketAddress;")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,17,"isConnected","()Z")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,18,"isClosed","()Z")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,19,"isBound","()Z")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,20,"isOutputShutdown","()Z")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,21,"isInputShutdown","()Z")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,22,"connect","(Landroid/net/LocalSocketAddress;I)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,23,"setFileDescriptorsForSend","([java.io.FileDescriptor)V")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,24,"getAncillaryFileDescriptors","()[java.io.FileDescriptor")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,25,"getPeerCredentials","()Landroid/net/Credentials;")
J2CPP_DEFINE_METHOD(android::net::LocalSocket,26,"getFileDescriptor","()Ljava/io/FileDescriptor;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_LOCALSOCKET_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
