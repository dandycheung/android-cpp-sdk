/*================================================================================
  code generated by: java2cpp
  class: android.location.Location
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_LOCATION_LOCATION_HPP_DECL
#define J2CPP_ANDROID_LOCATION_LOCATION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace util { class Printer; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace os { class Parcelable; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/os/Bundle.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <android/util/Printer.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace location {

	class Location;
	class Location
		: public cpp_object<Location>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)

		explicit Location(jobject jobj)
		: cpp_object<Location>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::os::Parcelable>() const;


		Location(local_ref< java::lang::String > const&);
		Location(local_ref< android::location::Location > const&);
		void dump(local_ref< android::util::Printer > const&, local_ref< java::lang::String > const&);
		void set(local_ref< android::location::Location > const&);
		void reset();
		static local_ref< java::lang::String > convert(cpp_double const&, cpp_int const&);
		static cpp_double convert(local_ref< java::lang::String > const&);
		static void distanceBetween(cpp_double const&, cpp_double const&, cpp_double const&, cpp_double const&, local_ref< cpp_float_array<1> > const&);
		cpp_float distanceTo(local_ref< android::location::Location > const&);
		cpp_float bearingTo(local_ref< android::location::Location > const&);
		local_ref< java::lang::String > getProvider();
		void setProvider(local_ref< java::lang::String > const&);
		cpp_long getTime();
		void setTime(cpp_long const&);
		cpp_double getLatitude();
		void setLatitude(cpp_double const&);
		cpp_double getLongitude();
		void setLongitude(cpp_double const&);
		cpp_boolean hasAltitude();
		cpp_double getAltitude();
		void setAltitude(cpp_double const&);
		void removeAltitude();
		cpp_boolean hasSpeed();
		cpp_float getSpeed();
		void setSpeed(cpp_float const&);
		void removeSpeed();
		cpp_boolean hasBearing();
		cpp_float getBearing();
		void setBearing(cpp_float const&);
		void removeBearing();
		cpp_boolean hasAccuracy();
		cpp_float getAccuracy();
		void setAccuracy(cpp_float const&);
		void removeAccuracy();
		local_ref< android::os::Bundle > getExtras();
		void setExtras(local_ref< android::os::Bundle > const&);
		local_ref< java::lang::String > toString();
		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > FORMAT_DEGREES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > FORMAT_MINUTES;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > FORMAT_SECONDS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class Location

} //namespace location
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_LOCATION_LOCATION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_LOCATION_LOCATION_HPP_IMPL
#define J2CPP_ANDROID_LOCATION_LOCATION_HPP_IMPL

namespace j2cpp {



android::location::Location::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::location::Location::operator local_ref<android::os::Parcelable>() const
{
	return local_ref<android::os::Parcelable>(get_jtype());
}


android::location::Location::Location(local_ref< java::lang::String > const &a0)
: cpp_object<android::location::Location>(
	environment::get().get_jenv()->NewObject(
		get_class<android::location::Location::J2CPP_CLASS_NAME>(),
		get_method_id<android::location::Location::J2CPP_CLASS_NAME, android::location::Location::J2CPP_METHOD_NAME(0), android::location::Location::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}



android::location::Location::Location(local_ref< android::location::Location > const &a0)
: cpp_object<android::location::Location>(
	environment::get().get_jenv()->NewObject(
		get_class<android::location::Location::J2CPP_CLASS_NAME>(),
		get_method_id<android::location::Location::J2CPP_CLASS_NAME, android::location::Location::J2CPP_METHOD_NAME(1), android::location::Location::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}


void android::location::Location::dump(local_ref< android::util::Printer > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::location::Location::set(local_ref< android::location::Location > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::location::Location::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::String > android::location::Location::convert(cpp_double const &a0, cpp_int const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_double android::location::Location::convert(local_ref< java::lang::String > const &a0)
{
	return cpp_double(
		environment::get().get_jenv()->CallStaticDoubleMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}

void android::location::Location::distanceBetween(cpp_double const &a0, cpp_double const &a1, cpp_double const &a2, cpp_double const &a3, local_ref< cpp_float_array<1> > const &a4)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

cpp_float android::location::Location::distanceTo(local_ref< android::location::Location > const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::location::Location::bearingTo(local_ref< android::location::Location > const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::location::Location::getProvider()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

void android::location::Location::setProvider(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

cpp_long android::location::Location::getTime()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

void android::location::Location::setTime(cpp_long const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

cpp_double android::location::Location::getLatitude()
{
	return cpp_double(
		environment::get().get_jenv()->CallDoubleMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

void android::location::Location::setLatitude(cpp_double const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype()
		)
	);
}

cpp_double android::location::Location::getLongitude()
{
	return cpp_double(
		environment::get().get_jenv()->CallDoubleMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

void android::location::Location::setLongitude(cpp_double const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::location::Location::hasAltitude()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_double android::location::Location::getAltitude()
{
	return cpp_double(
		environment::get().get_jenv()->CallDoubleMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

void android::location::Location::setAltitude(cpp_double const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

void android::location::Location::removeAltitude()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

cpp_boolean android::location::Location::hasSpeed()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>()
		)
	);
}

cpp_float android::location::Location::getSpeed()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>()
		)
	);
}

void android::location::Location::setSpeed(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

void android::location::Location::removeSpeed()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>()
		)
	);
}

cpp_boolean android::location::Location::hasBearing()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>()
		)
	);
}

cpp_float android::location::Location::getBearing()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>()
		)
	);
}

void android::location::Location::setBearing(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

void android::location::Location::removeBearing()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>()
		)
	);
}

cpp_boolean android::location::Location::hasAccuracy()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

cpp_float android::location::Location::getAccuracy()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>()
		)
	);
}

void android::location::Location::setAccuracy(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

void android::location::Location::removeAccuracy()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>()
		)
	);
}

local_ref< android::os::Bundle > android::location::Location::getExtras()
{
	return local_ref< android::os::Bundle >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>()
		)
	);
}

void android::location::Location::setExtras(local_ref< android::os::Bundle > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::location::Location::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>()
		)
	);
}

cpp_int android::location::Location::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>()
		)
	);
}

void android::location::Location::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



static_field<
	android::location::Location::J2CPP_CLASS_NAME,
	android::location::Location::J2CPP_FIELD_NAME(0),
	android::location::Location::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::location::Location::FORMAT_DEGREES;

static_field<
	android::location::Location::J2CPP_CLASS_NAME,
	android::location::Location::J2CPP_FIELD_NAME(1),
	android::location::Location::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::location::Location::FORMAT_MINUTES;

static_field<
	android::location::Location::J2CPP_CLASS_NAME,
	android::location::Location::J2CPP_FIELD_NAME(2),
	android::location::Location::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::location::Location::FORMAT_SECONDS;

static_field<
	android::location::Location::J2CPP_CLASS_NAME,
	android::location::Location::J2CPP_FIELD_NAME(3),
	android::location::Location::J2CPP_FIELD_SIGNATURE(3),
	local_ref< android::os::Parcelable_::Creator >
> android::location::Location::CREATOR;


J2CPP_DEFINE_CLASS(android::location::Location,"android/location/Location")
J2CPP_DEFINE_METHOD(android::location::Location,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::location::Location,1,"<init>","(Landroid/location/Location;)V")
J2CPP_DEFINE_METHOD(android::location::Location,2,"dump","(Landroid/util/Printer;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::location::Location,3,"set","(Landroid/location/Location;)V")
J2CPP_DEFINE_METHOD(android::location::Location,4,"reset","()V")
J2CPP_DEFINE_METHOD(android::location::Location,5,"convert","(DI)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::location::Location,6,"convert","(Ljava/lang/String;)D")
J2CPP_DEFINE_METHOD(android::location::Location,7,"distanceBetween","(DDDD[F)V")
J2CPP_DEFINE_METHOD(android::location::Location,8,"distanceTo","(Landroid/location/Location;)F")
J2CPP_DEFINE_METHOD(android::location::Location,9,"bearingTo","(Landroid/location/Location;)F")
J2CPP_DEFINE_METHOD(android::location::Location,10,"getProvider","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::location::Location,11,"setProvider","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::location::Location,12,"getTime","()J")
J2CPP_DEFINE_METHOD(android::location::Location,13,"setTime","(J)V")
J2CPP_DEFINE_METHOD(android::location::Location,14,"getLatitude","()D")
J2CPP_DEFINE_METHOD(android::location::Location,15,"setLatitude","(D)V")
J2CPP_DEFINE_METHOD(android::location::Location,16,"getLongitude","()D")
J2CPP_DEFINE_METHOD(android::location::Location,17,"setLongitude","(D)V")
J2CPP_DEFINE_METHOD(android::location::Location,18,"hasAltitude","()Z")
J2CPP_DEFINE_METHOD(android::location::Location,19,"getAltitude","()D")
J2CPP_DEFINE_METHOD(android::location::Location,20,"setAltitude","(D)V")
J2CPP_DEFINE_METHOD(android::location::Location,21,"removeAltitude","()V")
J2CPP_DEFINE_METHOD(android::location::Location,22,"hasSpeed","()Z")
J2CPP_DEFINE_METHOD(android::location::Location,23,"getSpeed","()F")
J2CPP_DEFINE_METHOD(android::location::Location,24,"setSpeed","(F)V")
J2CPP_DEFINE_METHOD(android::location::Location,25,"removeSpeed","()V")
J2CPP_DEFINE_METHOD(android::location::Location,26,"hasBearing","()Z")
J2CPP_DEFINE_METHOD(android::location::Location,27,"getBearing","()F")
J2CPP_DEFINE_METHOD(android::location::Location,28,"setBearing","(F)V")
J2CPP_DEFINE_METHOD(android::location::Location,29,"removeBearing","()V")
J2CPP_DEFINE_METHOD(android::location::Location,30,"hasAccuracy","()Z")
J2CPP_DEFINE_METHOD(android::location::Location,31,"getAccuracy","()F")
J2CPP_DEFINE_METHOD(android::location::Location,32,"setAccuracy","(F)V")
J2CPP_DEFINE_METHOD(android::location::Location,33,"removeAccuracy","()V")
J2CPP_DEFINE_METHOD(android::location::Location,34,"getExtras","()Landroid/os/Bundle;")
J2CPP_DEFINE_METHOD(android::location::Location,35,"setExtras","(Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::location::Location,36,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::location::Location,37,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::location::Location,38,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::location::Location,39,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::location::Location,0,"FORMAT_DEGREES","I")
J2CPP_DEFINE_FIELD(android::location::Location,1,"FORMAT_MINUTES","I")
J2CPP_DEFINE_FIELD(android::location::Location,2,"FORMAT_SECONDS","I")
J2CPP_DEFINE_FIELD(android::location::Location,3,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_LOCATION_LOCATION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
