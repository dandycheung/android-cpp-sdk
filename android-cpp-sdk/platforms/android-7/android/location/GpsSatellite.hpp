/*================================================================================
  code generated by: java2cpp
  class: android.location.GpsSatellite
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_LOCATION_GPSSATELLITE_HPP_DECL
#define J2CPP_ANDROID_LOCATION_GPSSATELLITE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace location {

	class GpsSatellite;
	class GpsSatellite
		: public cpp_object<GpsSatellite>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		explicit GpsSatellite(jobject jobj)
		: cpp_object<GpsSatellite>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		cpp_int getPrn();
		cpp_float getSnr();
		cpp_float getElevation();
		cpp_float getAzimuth();
		cpp_boolean hasEphemeris();
		cpp_boolean hasAlmanac();
		cpp_boolean usedInFix();
	}; //class GpsSatellite

} //namespace location
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_LOCATION_GPSSATELLITE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_LOCATION_GPSSATELLITE_HPP_IMPL
#define J2CPP_ANDROID_LOCATION_GPSSATELLITE_HPP_IMPL

namespace j2cpp {



android::location::GpsSatellite::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


cpp_int android::location::GpsSatellite::getPrn()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_float android::location::GpsSatellite::getSnr()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_float android::location::GpsSatellite::getElevation()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_float android::location::GpsSatellite::getAzimuth()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

cpp_boolean android::location::GpsSatellite::hasEphemeris()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_boolean android::location::GpsSatellite::hasAlmanac()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

cpp_boolean android::location::GpsSatellite::usedInFix()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::location::GpsSatellite,"android/location/GpsSatellite")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,1,"getPrn","()I")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,2,"getSnr","()F")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,3,"getElevation","()F")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,4,"getAzimuth","()F")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,5,"hasEphemeris","()Z")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,6,"hasAlmanac","()Z")
J2CPP_DEFINE_METHOD(android::location::GpsSatellite,7,"usedInFix","()Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_LOCATION_GPSSATELLITE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
