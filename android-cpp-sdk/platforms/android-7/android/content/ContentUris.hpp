/*================================================================================
  code generated by: java2cpp
  class: android.content.ContentUris
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_CONTENTURIS_HPP_DECL
#define J2CPP_ANDROID_CONTENT_CONTENTURIS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace net { class Uri; } } }
namespace j2cpp { namespace android { namespace net { namespace Uri_ { class Builder; } } } }


#include <android/net/Uri.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace content {

	class ContentUris;
	class ContentUris
		: public cpp_object<ContentUris>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit ContentUris(jobject jobj)
		: cpp_object<ContentUris>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		ContentUris();
		static cpp_long parseId(local_ref< android::net::Uri > const&);
		static local_ref< android::net::Uri_::Builder > appendId(local_ref< android::net::Uri_::Builder > const&, cpp_long const&);
		static local_ref< android::net::Uri > withAppendedId(local_ref< android::net::Uri > const&, cpp_long const&);
	}; //class ContentUris

} //namespace content
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_CONTENTURIS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_CONTENTURIS_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_CONTENTURIS_HPP_IMPL

namespace j2cpp {



android::content::ContentUris::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::content::ContentUris::ContentUris()
: cpp_object<android::content::ContentUris>(
	environment::get().get_jenv()->NewObject(
		get_class<android::content::ContentUris::J2CPP_CLASS_NAME>(),
		get_method_id<android::content::ContentUris::J2CPP_CLASS_NAME, android::content::ContentUris::J2CPP_METHOD_NAME(0), android::content::ContentUris::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}


cpp_long android::content::ContentUris::parseId(local_ref< android::net::Uri > const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallStaticLongMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::Uri_::Builder > android::content::ContentUris::appendId(local_ref< android::net::Uri_::Builder > const &a0, cpp_long const &a1)
{
	return local_ref< android::net::Uri_::Builder >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::net::Uri > android::content::ContentUris::withAppendedId(local_ref< android::net::Uri > const &a0, cpp_long const &a1)
{
	return local_ref< android::net::Uri >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::content::ContentUris,"android/content/ContentUris")
J2CPP_DEFINE_METHOD(android::content::ContentUris,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::content::ContentUris,1,"parseId","(Landroid/net/Uri;)J")
J2CPP_DEFINE_METHOD(android::content::ContentUris,2,"appendId","(Landroid/net/Uri$Builder;J)Landroid/net/Uri$Builder;")
J2CPP_DEFINE_METHOD(android::content::ContentUris,3,"withAppendedId","(Landroid/net/Uri;J)Landroid/net/Uri;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_CONTENTURIS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
