/*================================================================================
  code generated by: java2cpp
  class: android.content.MutableContextWrapper
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_HPP_DECL
#define J2CPP_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }


#include <android/content/Context.hpp>


namespace j2cpp {

namespace android { namespace content {

	class MutableContextWrapper;
	class MutableContextWrapper
		: public cpp_object<MutableContextWrapper>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		MutableContextWrapper(jobject jobj)
		: cpp_object<MutableContextWrapper>(jobj)
		{
		}

		void setBaseContext(local_ref< android::content::Context > const&);
	}; //class MutableContextWrapper

} //namespace content
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::content::MutableContextWrapper > create< android::content::MutableContextWrapper>(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::content::MutableContextWrapper >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::MutableContextWrapper::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::MutableContextWrapper::J2CPP_CLASS_NAME, android::content::MutableContextWrapper::J2CPP_METHOD_NAME(0), android::content::MutableContextWrapper::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::content::MutableContextWrapper::setBaseContext(local_ref< android::content::Context > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::content::MutableContextWrapper,"android/content/MutableContextWrapper")
J2CPP_DEFINE_METHOD(android::content::MutableContextWrapper,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::content::MutableContextWrapper,1,"setBaseContext","(Landroid/content/Context;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
