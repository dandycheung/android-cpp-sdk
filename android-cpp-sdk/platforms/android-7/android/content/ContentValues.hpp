/*================================================================================
  code generated by: java2cpp
  class: android.content.ContentValues
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_CONTENTVALUES_HPP_DECL
#define J2CPP_ANDROID_CONTENT_CONTENTVALUES_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Integer; } } }
namespace j2cpp { namespace java { namespace lang { class Float; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class Double; } } }
namespace j2cpp { namespace java { namespace lang { class Long; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Short; } } }
namespace j2cpp { namespace java { namespace lang { class Byte; } } }
namespace j2cpp { namespace java { namespace lang { class Boolean; } } }
namespace j2cpp { namespace java { namespace util { class Set; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/lang/Boolean.hpp>
#include <java/lang/Byte.hpp>
#include <java/lang/Double.hpp>
#include <java/lang/Float.hpp>
#include <java/lang/Integer.hpp>
#include <java/lang/Long.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/Short.hpp>
#include <java/lang/String.hpp>
#include <java/util/Set.hpp>


namespace j2cpp {

namespace android { namespace content {

	class ContentValues;
	class ContentValues
		: public cpp_object<ContentValues>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		ContentValues(jobject jobj)
		: cpp_object<ContentValues>(jobj)
		{
		}

		cpp_boolean equals(local_ref< java::lang::Object > const&);
		cpp_int hashCode();
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void putAll(local_ref< android::content::ContentValues > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Byte > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Short > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Integer > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Long > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Float > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Double > const&);
		void put(local_ref< java::lang::String > const&, local_ref< java::lang::Boolean > const&);
		void put(local_ref< java::lang::String > const&, local_ref< cpp_byte_array<1> > const&);
		void putNull(local_ref< java::lang::String > const&);
		cpp_int size();
		void remove(local_ref< java::lang::String > const&);
		void clear();
		cpp_boolean containsKey(local_ref< java::lang::String > const&);
		local_ref< java::lang::Object > get(local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getAsString(local_ref< java::lang::String > const&);
		local_ref< java::lang::Long > getAsLong(local_ref< java::lang::String > const&);
		local_ref< java::lang::Integer > getAsInteger(local_ref< java::lang::String > const&);
		local_ref< java::lang::Short > getAsShort(local_ref< java::lang::String > const&);
		local_ref< java::lang::Byte > getAsByte(local_ref< java::lang::String > const&);
		local_ref< java::lang::Double > getAsDouble(local_ref< java::lang::String > const&);
		local_ref< java::lang::Float > getAsFloat(local_ref< java::lang::String > const&);
		local_ref< java::lang::Boolean > getAsBoolean(local_ref< java::lang::String > const&);
		local_ref< cpp_byte_array<1> > getAsByteArray(local_ref< java::lang::String > const&);
		local_ref< java::util::Set > valueSet();
		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);
		local_ref< java::lang::String > toString();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > TAG;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class ContentValues

} //namespace content
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_CONTENTVALUES_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_CONTENTVALUES_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_CONTENTVALUES_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::content::ContentValues > create< android::content::ContentValues>()
{
	return local_ref< android::content::ContentValues >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::ContentValues::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::ContentValues::J2CPP_CLASS_NAME, android::content::ContentValues::J2CPP_METHOD_NAME(0), android::content::ContentValues::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< android::content::ContentValues > create< android::content::ContentValues>(cpp_int const &a0)
{
	return local_ref< android::content::ContentValues >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::ContentValues::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::ContentValues::J2CPP_CLASS_NAME, android::content::ContentValues::J2CPP_METHOD_NAME(1), android::content::ContentValues::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::content::ContentValues > create< android::content::ContentValues>(local_ref< android::content::ContentValues > const &a0)
{
	return local_ref< android::content::ContentValues >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::ContentValues::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::ContentValues::J2CPP_CLASS_NAME, android::content::ContentValues::J2CPP_METHOD_NAME(2), android::content::ContentValues::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::content::ContentValues::equals(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::content::ContentValues::hashCode()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::putAll(local_ref< android::content::ContentValues > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Byte > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Short > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Integer > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Long > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Float > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Double > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< java::lang::Boolean > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::put(local_ref< java::lang::String > const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::content::ContentValues::putNull(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::content::ContentValues::size()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

void android::content::ContentValues::remove(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype()
		)
	);
}

void android::content::ContentValues::clear()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_boolean android::content::ContentValues::containsKey(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > android::content::ContentValues::get(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::content::ContentValues::getAsString(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Long > android::content::ContentValues::getAsLong(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Long >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Integer > android::content::ContentValues::getAsInteger(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Integer >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Short > android::content::ContentValues::getAsShort(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Short >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Byte > android::content::ContentValues::getAsByte(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Byte >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Double > android::content::ContentValues::getAsDouble(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Double >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Float > android::content::ContentValues::getAsFloat(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Float >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Boolean > android::content::ContentValues::getAsBoolean(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Boolean >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > android::content::ContentValues::getAsByteArray(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Set > android::content::ContentValues::valueSet()
{
	return local_ref< java::util::Set >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

cpp_int android::content::ContentValues::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>()
		)
	);
}

void android::content::ContentValues::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::content::ContentValues::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>()
		)
	);
}


static_field<
	android::content::ContentValues::J2CPP_CLASS_NAME,
	android::content::ContentValues::J2CPP_FIELD_NAME(0),
	android::content::ContentValues::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> android::content::ContentValues::TAG;

static_field<
	android::content::ContentValues::J2CPP_CLASS_NAME,
	android::content::ContentValues::J2CPP_FIELD_NAME(1),
	android::content::ContentValues::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::os::Parcelable_::Creator >
> android::content::ContentValues::CREATOR;


J2CPP_DEFINE_CLASS(android::content::ContentValues,"android/content/ContentValues")
J2CPP_DEFINE_METHOD(android::content::ContentValues,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,1,"<init>","(I)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,2,"<init>","(Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,3,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::content::ContentValues,4,"hashCode","()I")
J2CPP_DEFINE_METHOD(android::content::ContentValues,5,"put","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,6,"putAll","(Landroid/content/ContentValues;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,7,"put","(Ljava/lang/String;Ljava/lang/Byte;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,8,"put","(Ljava/lang/String;Ljava/lang/Short;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,9,"put","(Ljava/lang/String;Ljava/lang/Integer;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,10,"put","(Ljava/lang/String;Ljava/lang/Long;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,11,"put","(Ljava/lang/String;Ljava/lang/Float;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,12,"put","(Ljava/lang/String;Ljava/lang/Double;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,13,"put","(Ljava/lang/String;Ljava/lang/Boolean;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,14,"put","(Ljava/lang/String;[B)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,15,"putNull","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,16,"size","()I")
J2CPP_DEFINE_METHOD(android::content::ContentValues,17,"remove","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,18,"clear","()V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,19,"containsKey","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::content::ContentValues,20,"get","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,21,"getAsString","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,22,"getAsLong","(Ljava/lang/String;)Ljava/lang/Long;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,23,"getAsInteger","(Ljava/lang/String;)Ljava/lang/Integer;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,24,"getAsShort","(Ljava/lang/String;)Ljava/lang/Short;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,25,"getAsByte","(Ljava/lang/String;)Ljava/lang/Byte;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,26,"getAsDouble","(Ljava/lang/String;)Ljava/lang/Double;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,27,"getAsFloat","(Ljava/lang/String;)Ljava/lang/Float;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,28,"getAsBoolean","(Ljava/lang/String;)Ljava/lang/Boolean;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,29,"getAsByteArray","(Ljava/lang/String;)[B")
J2CPP_DEFINE_METHOD(android::content::ContentValues,30,"valueSet","()Ljava/util/Set;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,31,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::content::ContentValues,32,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::content::ContentValues,33,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::content::ContentValues,34,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::content::ContentValues,0,"TAG","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::content::ContentValues,1,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_CONTENTVALUES_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
