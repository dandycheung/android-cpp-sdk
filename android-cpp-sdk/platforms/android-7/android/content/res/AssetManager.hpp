/*================================================================================
  code generated by: java2cpp
  class: android.content.res.AssetManager
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_RES_ASSETMANAGER_HPP_DECL
#define J2CPP_ANDROID_CONTENT_RES_ASSETMANAGER_HPP_DECL


namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace content { namespace res { class AssetFileDescriptor; } } } }
namespace j2cpp { namespace android { namespace content { namespace res { class XmlResourceParser; } } } }


#include <android/content/res/AssetFileDescriptor.hpp>
#include <android/content/res/XmlResourceParser.hpp>
#include <java/io/InputStream.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace content { namespace res {

	class AssetManager;
	namespace AssetManager_ {

		class AssetInputStream;
		class AssetInputStream
			: public cpp_object<AssetInputStream>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)
			J2CPP_DECLARE_METHOD(10)
			J2CPP_DECLARE_METHOD(11)
			J2CPP_DECLARE_FIELD(0)

			AssetInputStream(jobject jobj)
			: cpp_object<AssetInputStream>(jobj)
			{
			}

			cpp_int getAssetInt();
			cpp_int read();
			cpp_boolean markSupported();
			cpp_int available();
			void close();
			void mark(cpp_int const&);
			void reset();
			cpp_int read(local_ref< cpp_byte_array<1> > const&);
			cpp_int read(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
			cpp_long skip(cpp_long const&);

		}; //class AssetInputStream

	} //namespace AssetManager_

	class AssetManager
		: public cpp_object<AssetManager>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)

		typedef AssetManager_::AssetInputStream AssetInputStream;

		AssetManager(jobject jobj)
		: cpp_object<AssetManager>(jobj)
		{
		}

		void close();
		local_ref< java::io::InputStream > open(local_ref< java::lang::String > const&);
		local_ref< java::io::InputStream > open(local_ref< java::lang::String > const&, cpp_int const&);
		local_ref< android::content::res::AssetFileDescriptor > openFd(local_ref< java::lang::String > const&);
		local_ref< cpp_object_array<java::lang::String, 1> > list(local_ref< java::lang::String > const&);
		local_ref< android::content::res::AssetFileDescriptor > openNonAssetFd(local_ref< java::lang::String > const&);
		local_ref< android::content::res::AssetFileDescriptor > openNonAssetFd(cpp_int const&, local_ref< java::lang::String > const&);
		local_ref< android::content::res::XmlResourceParser > openXmlResourceParser(local_ref< java::lang::String > const&);
		local_ref< android::content::res::XmlResourceParser > openXmlResourceParser(cpp_int const&, local_ref< java::lang::String > const&);
		local_ref< cpp_object_array<java::lang::String, 1> > getLocales();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > ACCESS_UNKNOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > ACCESS_RANDOM;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > ACCESS_STREAMING;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > ACCESS_BUFFER;
	}; //class AssetManager

} //namespace res
} //namespace content
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_RES_ASSETMANAGER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_RES_ASSETMANAGER_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_RES_ASSETMANAGER_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::content::res::AssetManager_::AssetInputStream > create< android::content::res::AssetManager_::AssetInputStream>(local_ref< android::content::res::AssetManager > const &a0)
{
	return local_ref< android::content::res::AssetManager_::AssetInputStream >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::res::AssetManager_::AssetInputStream::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::res::AssetManager_::AssetInputStream::J2CPP_CLASS_NAME, android::content::res::AssetManager_::AssetInputStream::J2CPP_METHOD_NAME(0), android::content::res::AssetManager_::AssetInputStream::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::content::res::AssetManager_::AssetInputStream::getAssetInt()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_int android::content::res::AssetManager_::AssetInputStream::read()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_boolean android::content::res::AssetManager_::AssetInputStream::markSupported()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_int android::content::res::AssetManager_::AssetInputStream::available()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::content::res::AssetManager_::AssetInputStream::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

void android::content::res::AssetManager_::AssetInputStream::mark(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void android::content::res::AssetManager_::AssetInputStream::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_int android::content::res::AssetManager_::AssetInputStream::read(local_ref< cpp_byte_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::content::res::AssetManager_::AssetInputStream::read(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_long android::content::res::AssetManager_::AssetInputStream::skip(cpp_long const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}




J2CPP_DEFINE_CLASS(android::content::res::AssetManager_::AssetInputStream,"android/content/res/AssetManager$AssetInputStream")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,0,"<init>","(Landroid/content/res/AssetManager;)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,1,"getAssetInt","()I")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,2,"read","()I")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,3,"markSupported","()Z")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,4,"available","()I")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,5,"close","()V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,6,"mark","(I)V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,7,"reset","()V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,8,"read","([B)I")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,9,"read","([BII)I")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,10,"skip","(J)J")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager_::AssetInputStream,11,"finalize","()V")
J2CPP_DEFINE_FIELD(android::content::res::AssetManager_::AssetInputStream,0,"this$0","Landroid/content/res/AssetManager;")


template <>
local_ref< android::content::res::AssetManager > create< android::content::res::AssetManager>()
{
	return local_ref< android::content::res::AssetManager >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::res::AssetManager::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::res::AssetManager::J2CPP_CLASS_NAME, android::content::res::AssetManager::J2CPP_METHOD_NAME(0), android::content::res::AssetManager::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::content::res::AssetManager::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::io::InputStream > android::content::res::AssetManager::open(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::io::InputStream >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::io::InputStream > android::content::res::AssetManager::open(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< java::io::InputStream >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::content::res::AssetFileDescriptor > android::content::res::AssetManager::openFd(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::content::res::AssetFileDescriptor >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::lang::String, 1> > android::content::res::AssetManager::list(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_object_array<java::lang::String, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::content::res::AssetFileDescriptor > android::content::res::AssetManager::openNonAssetFd(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::content::res::AssetFileDescriptor >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::content::res::AssetFileDescriptor > android::content::res::AssetManager::openNonAssetFd(cpp_int const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< android::content::res::AssetFileDescriptor >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::content::res::XmlResourceParser > android::content::res::AssetManager::openXmlResourceParser(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::content::res::XmlResourceParser >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::content::res::XmlResourceParser > android::content::res::AssetManager::openXmlResourceParser(cpp_int const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< android::content::res::XmlResourceParser >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


local_ref< cpp_object_array<java::lang::String, 1> > android::content::res::AssetManager::getLocales()
{
	return local_ref< cpp_object_array<java::lang::String, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}


static_field<
	android::content::res::AssetManager::J2CPP_CLASS_NAME,
	android::content::res::AssetManager::J2CPP_FIELD_NAME(0),
	android::content::res::AssetManager::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::content::res::AssetManager::ACCESS_UNKNOWN;

static_field<
	android::content::res::AssetManager::J2CPP_CLASS_NAME,
	android::content::res::AssetManager::J2CPP_FIELD_NAME(1),
	android::content::res::AssetManager::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::content::res::AssetManager::ACCESS_RANDOM;

static_field<
	android::content::res::AssetManager::J2CPP_CLASS_NAME,
	android::content::res::AssetManager::J2CPP_FIELD_NAME(2),
	android::content::res::AssetManager::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::content::res::AssetManager::ACCESS_STREAMING;

static_field<
	android::content::res::AssetManager::J2CPP_CLASS_NAME,
	android::content::res::AssetManager::J2CPP_FIELD_NAME(3),
	android::content::res::AssetManager::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::content::res::AssetManager::ACCESS_BUFFER;


J2CPP_DEFINE_CLASS(android::content::res::AssetManager,"android/content/res/AssetManager")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,1,"close","()V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,2,"open","(Ljava/lang/String;)Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,3,"open","(Ljava/lang/String;I)Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,4,"openFd","(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,5,"list","(Ljava/lang/String;)[java.lang.String")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,6,"openNonAssetFd","(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,7,"openNonAssetFd","(ILjava/lang/String;)Landroid/content/res/AssetFileDescriptor;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,8,"openXmlResourceParser","(Ljava/lang/String;)Landroid/content/res/XmlResourceParser;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,9,"openXmlResourceParser","(ILjava/lang/String;)Landroid/content/res/XmlResourceParser;")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,10,"finalize","()V")
J2CPP_DEFINE_METHOD(android::content::res::AssetManager,11,"getLocales","()[java.lang.String")
J2CPP_DEFINE_FIELD(android::content::res::AssetManager,0,"ACCESS_UNKNOWN","I")
J2CPP_DEFINE_FIELD(android::content::res::AssetManager,1,"ACCESS_RANDOM","I")
J2CPP_DEFINE_FIELD(android::content::res::AssetManager,2,"ACCESS_STREAMING","I")
J2CPP_DEFINE_FIELD(android::content::res::AssetManager,3,"ACCESS_BUFFER","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_RES_ASSETMANAGER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
