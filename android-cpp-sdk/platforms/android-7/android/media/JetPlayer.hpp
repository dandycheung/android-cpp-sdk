/*================================================================================
  code generated by: java2cpp
  class: android.media.JetPlayer
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_JETPLAYER_HPP_DECL
#define J2CPP_ANDROID_MEDIA_JETPLAYER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace content { namespace res { class AssetFileDescriptor; } } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }
namespace j2cpp { namespace android { namespace media { namespace JetPlayer_ { class OnJetEventListener; } } } }


#include <android/content/res/AssetFileDescriptor.hpp>
#include <android/media/JetPlayer.hpp>
#include <android/os/Handler.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace media {

	class JetPlayer;
	namespace JetPlayer_ {

		class OnJetEventListener;
		class OnJetEventListener
			: public cpp_object<OnJetEventListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)

			explicit OnJetEventListener(jobject jobj)
			: cpp_object<OnJetEventListener>(jobj)
			{
			}

			operator local_ref<java::lang::Object>() const;


			void onJetEvent(local_ref< android::media::JetPlayer > const&, cpp_short const&, cpp_byte const&, cpp_byte const&, cpp_byte const&, cpp_byte const&);
			void onJetUserIdUpdate(local_ref< android::media::JetPlayer > const&, cpp_int const&, cpp_int const&);
			void onJetNumQueuedSegmentUpdate(local_ref< android::media::JetPlayer > const&, cpp_int const&);
			void onJetPauseUpdate(local_ref< android::media::JetPlayer > const&, cpp_int const&);
		}; //class OnJetEventListener

	} //namespace JetPlayer_

	class JetPlayer
		: public cpp_object<JetPlayer>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)

		typedef JetPlayer_::OnJetEventListener OnJetEventListener;

		explicit JetPlayer(jobject jobj)
		: cpp_object<JetPlayer>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		static local_ref< android::media::JetPlayer > getJetPlayer();
		local_ref< java::lang::Object > clone();
		void release();
		static cpp_int getMaxTracks();
		cpp_boolean loadJetFile(local_ref< java::lang::String > const&);
		cpp_boolean loadJetFile(local_ref< android::content::res::AssetFileDescriptor > const&);
		cpp_boolean closeJetFile();
		cpp_boolean play();
		cpp_boolean pause();
		cpp_boolean queueJetSegment(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_byte const&);
		cpp_boolean queueJetSegmentMuteArray(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< cpp_boolean_array<1> > const&, cpp_byte const&);
		cpp_boolean setMuteFlags(cpp_int const&, cpp_boolean const&);
		cpp_boolean setMuteArray(local_ref< cpp_boolean_array<1> > const&, cpp_boolean const&);
		cpp_boolean setMuteFlag(cpp_int const&, cpp_boolean const&, cpp_boolean const&);
		cpp_boolean triggerClip(cpp_int const&);
		cpp_boolean clearQueue();
		void setEventListener(local_ref< android::media::JetPlayer_::OnJetEventListener > const&);
		void setEventListener(local_ref< android::media::JetPlayer_::OnJetEventListener > const&, local_ref< android::os::Handler > const&);
	}; //class JetPlayer

} //namespace media
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_JETPLAYER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_JETPLAYER_HPP_IMPL
#define J2CPP_ANDROID_MEDIA_JETPLAYER_HPP_IMPL

namespace j2cpp {




android::media::JetPlayer_::OnJetEventListener::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

void android::media::JetPlayer_::OnJetEventListener::onJetEvent(local_ref< android::media::JetPlayer > const &a0, cpp_short const &a1, cpp_byte const &a2, cpp_byte const &a3, cpp_byte const &a4, cpp_byte const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::media::JetPlayer_::OnJetEventListener::onJetUserIdUpdate(local_ref< android::media::JetPlayer > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::media::JetPlayer_::OnJetEventListener::onJetNumQueuedSegmentUpdate(local_ref< android::media::JetPlayer > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::media::JetPlayer_::OnJetEventListener::onJetPauseUpdate(local_ref< android::media::JetPlayer > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::media::JetPlayer_::OnJetEventListener,"android/media/JetPlayer$OnJetEventListener")
J2CPP_DEFINE_METHOD(android::media::JetPlayer_::OnJetEventListener,0,"onJetEvent","(Landroid/media/JetPlayer;SBBBB)V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer_::OnJetEventListener,1,"onJetUserIdUpdate","(Landroid/media/JetPlayer;II)V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer_::OnJetEventListener,2,"onJetNumQueuedSegmentUpdate","(Landroid/media/JetPlayer;I)V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer_::OnJetEventListener,3,"onJetPauseUpdate","(Landroid/media/JetPlayer;I)V")



android::media::JetPlayer::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


local_ref< android::media::JetPlayer > android::media::JetPlayer::getJetPlayer()
{
	return local_ref< android::media::JetPlayer >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>()
		)
	);
}

local_ref< java::lang::Object > android::media::JetPlayer::clone()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


void android::media::JetPlayer::release()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

cpp_int android::media::JetPlayer::getMaxTracks()
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>()
		)
	);
}

cpp_boolean android::media::JetPlayer::loadJetFile(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::loadJetFile(local_ref< android::content::res::AssetFileDescriptor > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::closeJetFile()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_boolean android::media::JetPlayer::play()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

cpp_boolean android::media::JetPlayer::pause()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

cpp_boolean android::media::JetPlayer::queueJetSegment(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_byte const &a5)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::queueJetSegmentMuteArray(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, local_ref< cpp_boolean_array<1> > const &a4, cpp_byte const &a5)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::setMuteFlags(cpp_int const &a0, cpp_boolean const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::setMuteArray(local_ref< cpp_boolean_array<1> > const &a0, cpp_boolean const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::setMuteFlag(cpp_int const &a0, cpp_boolean const &a1, cpp_boolean const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::triggerClip(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::media::JetPlayer::clearQueue()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

void android::media::JetPlayer::setEventListener(local_ref< android::media::JetPlayer_::OnJetEventListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype()
		)
	);
}

void android::media::JetPlayer::setEventListener(local_ref< android::media::JetPlayer_::OnJetEventListener > const &a0, local_ref< android::os::Handler > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::media::JetPlayer,"android/media/JetPlayer")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,1,"getJetPlayer","()Landroid/media/JetPlayer;")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,2,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,3,"finalize","()V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,4,"release","()V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,5,"getMaxTracks","()I")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,6,"loadJetFile","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,7,"loadJetFile","(Landroid/content/res/AssetFileDescriptor;)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,8,"closeJetFile","()Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,9,"play","()Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,10,"pause","()Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,11,"queueJetSegment","(IIIIIB)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,12,"queueJetSegmentMuteArray","(IIII[ZB)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,13,"setMuteFlags","(IZ)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,14,"setMuteArray","([ZZ)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,15,"setMuteFlag","(IZZ)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,16,"triggerClip","(I)Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,17,"clearQueue","()Z")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,18,"setEventListener","(Landroid/media/JetPlayer$OnJetEventListener;)V")
J2CPP_DEFINE_METHOD(android::media::JetPlayer,19,"setEventListener","(Landroid/media/JetPlayer$OnJetEventListener;Landroid/os/Handler;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_JETPLAYER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
