/*================================================================================
  code generated by: java2cpp
  class: android.media.AsyncPlayer
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_ASYNCPLAYER_HPP_DECL
#define J2CPP_ANDROID_MEDIA_ASYNCPLAYER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace net { class Uri; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }


#include <android/content/Context.hpp>
#include <android/net/Uri.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace media {

	class AsyncPlayer;
	class AsyncPlayer
		: public cpp_object<AsyncPlayer>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit AsyncPlayer(jobject jobj)
		: cpp_object<AsyncPlayer>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		AsyncPlayer(local_ref< java::lang::String > const&);
		void play(local_ref< android::content::Context > const&, local_ref< android::net::Uri > const&, cpp_boolean const&, cpp_int const&);
		void stop();
	}; //class AsyncPlayer

} //namespace media
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_ASYNCPLAYER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_ASYNCPLAYER_HPP_IMPL
#define J2CPP_ANDROID_MEDIA_ASYNCPLAYER_HPP_IMPL

namespace j2cpp {



android::media::AsyncPlayer::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}


android::media::AsyncPlayer::AsyncPlayer(local_ref< java::lang::String > const &a0)
: cpp_object<android::media::AsyncPlayer>(
	environment::get().get_jenv()->NewObject(
		get_class<android::media::AsyncPlayer::J2CPP_CLASS_NAME>(),
		get_method_id<android::media::AsyncPlayer::J2CPP_CLASS_NAME, android::media::AsyncPlayer::J2CPP_METHOD_NAME(0), android::media::AsyncPlayer::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}


void android::media::AsyncPlayer::play(local_ref< android::content::Context > const &a0, local_ref< android::net::Uri > const &a1, cpp_boolean const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::media::AsyncPlayer::stop()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::media::AsyncPlayer,"android/media/AsyncPlayer")
J2CPP_DEFINE_METHOD(android::media::AsyncPlayer,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::media::AsyncPlayer,1,"play","(Landroid/content/Context;Landroid/net/Uri;ZI)V")
J2CPP_DEFINE_METHOD(android::media::AsyncPlayer,2,"stop","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_ASYNCPLAYER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
