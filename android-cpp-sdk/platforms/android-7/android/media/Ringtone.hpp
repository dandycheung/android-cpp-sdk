/*================================================================================
  code generated by: java2cpp
  class: android.media.Ringtone
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_RINGTONE_HPP_DECL
#define J2CPP_ANDROID_MEDIA_RINGTONE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }


#include <android/content/Context.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace media {

	class Ringtone;
	class Ringtone
		: public cpp_object<Ringtone>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		Ringtone(jobject jobj)
		: cpp_object<Ringtone>(jobj)
		{
		}

		void setStreamType(cpp_int const&);
		cpp_int getStreamType();
		local_ref< java::lang::String > getTitle(local_ref< android::content::Context > const&);
		void play();
		void stop();
		cpp_boolean isPlaying();
	}; //class Ringtone

} //namespace media
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_RINGTONE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_RINGTONE_HPP_IMPL
#define J2CPP_ANDROID_MEDIA_RINGTONE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::media::Ringtone > create< android::media::Ringtone>()
{
	return local_ref< android::media::Ringtone >(
		environment::get().get_jenv()->NewObject(
			get_class<android::media::Ringtone::J2CPP_CLASS_NAME>(),
			get_method_id<android::media::Ringtone::J2CPP_CLASS_NAME, android::media::Ringtone::J2CPP_METHOD_NAME(0), android::media::Ringtone::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::media::Ringtone::setStreamType(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::media::Ringtone::getStreamType()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< java::lang::String > android::media::Ringtone::getTitle(local_ref< android::content::Context > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::media::Ringtone::play()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::media::Ringtone::stop()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_boolean android::media::Ringtone::isPlaying()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::media::Ringtone,"android/media/Ringtone")
J2CPP_DEFINE_METHOD(android::media::Ringtone,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::media::Ringtone,1,"setStreamType","(I)V")
J2CPP_DEFINE_METHOD(android::media::Ringtone,2,"getStreamType","()I")
J2CPP_DEFINE_METHOD(android::media::Ringtone,3,"getTitle","(Landroid/content/Context;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::media::Ringtone,4,"play","()V")
J2CPP_DEFINE_METHOD(android::media::Ringtone,5,"stop","()V")
J2CPP_DEFINE_METHOD(android::media::Ringtone,6,"isPlaying","()Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_RINGTONE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
