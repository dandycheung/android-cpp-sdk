/*================================================================================
  code generated by: java2cpp
  class: android.view.GestureDetector
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_GESTUREDETECTOR_HPP_DECL
#define J2CPP_ANDROID_VIEW_GESTUREDETECTOR_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { namespace GestureDetector_ { class OnGestureListener; } } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace GestureDetector_ { class OnDoubleTapListener; } } } }
namespace j2cpp { namespace android { namespace os { class Handler; } } }


#include <android/content/Context.hpp>
#include <android/os/Handler.hpp>
#include <android/view/GestureDetector.hpp>
#include <android/view/MotionEvent.hpp>


namespace j2cpp {

namespace android { namespace view {

	class GestureDetector;
	namespace GestureDetector_ {

		class OnGestureListener;
		class OnGestureListener
			: public cpp_object<OnGestureListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)

			OnGestureListener(jobject jobj)
			: cpp_object<OnGestureListener>(jobj)
			{
			}

			cpp_boolean onDown(local_ref< android::view::MotionEvent > const&);
			void onShowPress(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onSingleTapUp(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onScroll(local_ref< android::view::MotionEvent > const&, local_ref< android::view::MotionEvent > const&, cpp_float const&, cpp_float const&);
			void onLongPress(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onFling(local_ref< android::view::MotionEvent > const&, local_ref< android::view::MotionEvent > const&, cpp_float const&, cpp_float const&);
		}; //class OnGestureListener

		class OnDoubleTapListener;
		class OnDoubleTapListener
			: public cpp_object<OnDoubleTapListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)

			OnDoubleTapListener(jobject jobj)
			: cpp_object<OnDoubleTapListener>(jobj)
			{
			}

			cpp_boolean onSingleTapConfirmed(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onDoubleTap(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onDoubleTapEvent(local_ref< android::view::MotionEvent > const&);
		}; //class OnDoubleTapListener

		class SimpleOnGestureListener;
		class SimpleOnGestureListener
			: public cpp_object<SimpleOnGestureListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)

			SimpleOnGestureListener(jobject jobj)
			: cpp_object<SimpleOnGestureListener>(jobj)
			{
			}

			cpp_boolean onSingleTapUp(local_ref< android::view::MotionEvent > const&);
			void onLongPress(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onScroll(local_ref< android::view::MotionEvent > const&, local_ref< android::view::MotionEvent > const&, cpp_float const&, cpp_float const&);
			cpp_boolean onFling(local_ref< android::view::MotionEvent > const&, local_ref< android::view::MotionEvent > const&, cpp_float const&, cpp_float const&);
			void onShowPress(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onDown(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onDoubleTap(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onDoubleTapEvent(local_ref< android::view::MotionEvent > const&);
			cpp_boolean onSingleTapConfirmed(local_ref< android::view::MotionEvent > const&);
		}; //class SimpleOnGestureListener

	} //namespace GestureDetector_

	class GestureDetector
		: public cpp_object<GestureDetector>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		typedef GestureDetector_::OnGestureListener OnGestureListener;
		typedef GestureDetector_::OnDoubleTapListener OnDoubleTapListener;
		typedef GestureDetector_::SimpleOnGestureListener SimpleOnGestureListener;

		GestureDetector(jobject jobj)
		: cpp_object<GestureDetector>(jobj)
		{
		}

		void setOnDoubleTapListener(local_ref< android::view::GestureDetector_::OnDoubleTapListener > const&);
		void setIsLongpressEnabled(cpp_boolean const&);
		cpp_boolean isLongpressEnabled();
		cpp_boolean onTouchEvent(local_ref< android::view::MotionEvent > const&);
	}; //class GestureDetector

} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_GESTUREDETECTOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_GESTUREDETECTOR_HPP_IMPL
#define J2CPP_ANDROID_VIEW_GESTUREDETECTOR_HPP_IMPL

namespace j2cpp {



cpp_boolean android::view::GestureDetector_::OnGestureListener::onDown(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::GestureDetector_::OnGestureListener::onShowPress(local_ref< android::view::MotionEvent > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::OnGestureListener::onSingleTapUp(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::OnGestureListener::onScroll(local_ref< android::view::MotionEvent > const &a0, local_ref< android::view::MotionEvent > const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::view::GestureDetector_::OnGestureListener::onLongPress(local_ref< android::view::MotionEvent > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::OnGestureListener::onFling(local_ref< android::view::MotionEvent > const &a0, local_ref< android::view::MotionEvent > const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::GestureDetector_::OnGestureListener,"android/view/GestureDetector$OnGestureListener")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnGestureListener,0,"onDown","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnGestureListener,1,"onShowPress","(Landroid/view/MotionEvent;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnGestureListener,2,"onSingleTapUp","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnGestureListener,3,"onScroll","(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnGestureListener,4,"onLongPress","(Landroid/view/MotionEvent;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnGestureListener,5,"onFling","(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z")

cpp_boolean android::view::GestureDetector_::OnDoubleTapListener::onSingleTapConfirmed(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::OnDoubleTapListener::onDoubleTap(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::OnDoubleTapListener::onDoubleTapEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::GestureDetector_::OnDoubleTapListener,"android/view/GestureDetector$OnDoubleTapListener")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnDoubleTapListener,0,"onSingleTapConfirmed","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnDoubleTapListener,1,"onDoubleTap","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::OnDoubleTapListener,2,"onDoubleTapEvent","(Landroid/view/MotionEvent;)Z")

template <>
local_ref< android::view::GestureDetector_::SimpleOnGestureListener > create< android::view::GestureDetector_::SimpleOnGestureListener>()
{
	return local_ref< android::view::GestureDetector_::SimpleOnGestureListener >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::GestureDetector_::SimpleOnGestureListener::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::GestureDetector_::SimpleOnGestureListener::J2CPP_CLASS_NAME, android::view::GestureDetector_::SimpleOnGestureListener::J2CPP_METHOD_NAME(0), android::view::GestureDetector_::SimpleOnGestureListener::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onSingleTapUp(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::GestureDetector_::SimpleOnGestureListener::onLongPress(local_ref< android::view::MotionEvent > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onScroll(local_ref< android::view::MotionEvent > const &a0, local_ref< android::view::MotionEvent > const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onFling(local_ref< android::view::MotionEvent > const &a0, local_ref< android::view::MotionEvent > const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::view::GestureDetector_::SimpleOnGestureListener::onShowPress(local_ref< android::view::MotionEvent > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onDown(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onDoubleTap(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onDoubleTapEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector_::SimpleOnGestureListener::onSingleTapConfirmed(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::GestureDetector_::SimpleOnGestureListener,"android/view/GestureDetector$SimpleOnGestureListener")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,1,"onSingleTapUp","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,2,"onLongPress","(Landroid/view/MotionEvent;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,3,"onScroll","(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,4,"onFling","(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,5,"onShowPress","(Landroid/view/MotionEvent;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,6,"onDown","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,7,"onDoubleTap","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,8,"onDoubleTapEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector_::SimpleOnGestureListener,9,"onSingleTapConfirmed","(Landroid/view/MotionEvent;)Z")


template <>
local_ref< android::view::GestureDetector > create< android::view::GestureDetector>(local_ref< android::view::GestureDetector_::OnGestureListener > const &a0, local_ref< android::os::Handler > const &a1)
{
	return local_ref< android::view::GestureDetector >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::GestureDetector::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::GestureDetector::J2CPP_CLASS_NAME, android::view::GestureDetector::J2CPP_METHOD_NAME(0), android::view::GestureDetector::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::GestureDetector > create< android::view::GestureDetector>(local_ref< android::view::GestureDetector_::OnGestureListener > const &a0)
{
	return local_ref< android::view::GestureDetector >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::GestureDetector::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::GestureDetector::J2CPP_CLASS_NAME, android::view::GestureDetector::J2CPP_METHOD_NAME(1), android::view::GestureDetector::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::view::GestureDetector > create< android::view::GestureDetector>(local_ref< android::content::Context > const &a0, local_ref< android::view::GestureDetector_::OnGestureListener > const &a1)
{
	return local_ref< android::view::GestureDetector >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::GestureDetector::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::GestureDetector::J2CPP_CLASS_NAME, android::view::GestureDetector::J2CPP_METHOD_NAME(2), android::view::GestureDetector::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::GestureDetector > create< android::view::GestureDetector>(local_ref< android::content::Context > const &a0, local_ref< android::view::GestureDetector_::OnGestureListener > const &a1, local_ref< android::os::Handler > const &a2)
{
	return local_ref< android::view::GestureDetector >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::GestureDetector::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::GestureDetector::J2CPP_CLASS_NAME, android::view::GestureDetector::J2CPP_METHOD_NAME(3), android::view::GestureDetector::J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::GestureDetector::setOnDoubleTapListener(local_ref< android::view::GestureDetector_::OnDoubleTapListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::GestureDetector::setIsLongpressEnabled(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::GestureDetector::isLongpressEnabled()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

cpp_boolean android::view::GestureDetector::onTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::GestureDetector,"android/view/GestureDetector")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,0,"<init>","(Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,1,"<init>","(Landroid/view/GestureDetector$OnGestureListener;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,2,"<init>","(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,3,"<init>","(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,4,"setOnDoubleTapListener","(Landroid/view/GestureDetector$OnDoubleTapListener;)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,5,"setIsLongpressEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,6,"isLongpressEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::GestureDetector,7,"onTouchEvent","(Landroid/view/MotionEvent;)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_GESTUREDETECTOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
