/*================================================================================
  code generated by: java2cpp
  class: android.view.animation.TranslateAnimation
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_TRANSLATEANIMATION_HPP_DECL
#define J2CPP_ANDROID_VIEW_ANIMATION_TRANSLATEANIMATION_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { namespace animation { class Animation; } } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }


#include <android/content/Context.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/view/animation/Animation.hpp>


namespace j2cpp {

namespace android { namespace view { namespace animation {

	class TranslateAnimation;
	class TranslateAnimation
		: public cpp_object<TranslateAnimation>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		explicit TranslateAnimation(jobject jobj)
		: cpp_object<TranslateAnimation>(jobj)
		{
		}

		operator local_ref<android::view::animation::Animation>() const;


		TranslateAnimation(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		TranslateAnimation(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		TranslateAnimation(cpp_int const&, cpp_float const&, cpp_int const&, cpp_float const&, cpp_int const&, cpp_float const&, cpp_int const&, cpp_float const&);
		void initialize(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
	}; //class TranslateAnimation

} //namespace animation
} //namespace view
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_TRANSLATEANIMATION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_TRANSLATEANIMATION_HPP_IMPL
#define J2CPP_ANDROID_VIEW_ANIMATION_TRANSLATEANIMATION_HPP_IMPL

namespace j2cpp {



android::view::animation::TranslateAnimation::operator local_ref<android::view::animation::Animation>() const
{
	return local_ref<android::view::animation::Animation>(get_jtype());
}


android::view::animation::TranslateAnimation::TranslateAnimation(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: cpp_object<android::view::animation::TranslateAnimation>(
	environment::get().get_jenv()->NewObject(
		get_class<android::view::animation::TranslateAnimation::J2CPP_CLASS_NAME>(),
		get_method_id<android::view::animation::TranslateAnimation::J2CPP_CLASS_NAME, android::view::animation::TranslateAnimation::J2CPP_METHOD_NAME(0), android::view::animation::TranslateAnimation::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}



android::view::animation::TranslateAnimation::TranslateAnimation(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3)
: cpp_object<android::view::animation::TranslateAnimation>(
	environment::get().get_jenv()->NewObject(
		get_class<android::view::animation::TranslateAnimation::J2CPP_CLASS_NAME>(),
		get_method_id<android::view::animation::TranslateAnimation::J2CPP_CLASS_NAME, android::view::animation::TranslateAnimation::J2CPP_METHOD_NAME(1), android::view::animation::TranslateAnimation::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
	)
)
{
}



android::view::animation::TranslateAnimation::TranslateAnimation(cpp_int const &a0, cpp_float const &a1, cpp_int const &a2, cpp_float const &a3, cpp_int const &a4, cpp_float const &a5, cpp_int const &a6, cpp_float const &a7)
: cpp_object<android::view::animation::TranslateAnimation>(
	environment::get().get_jenv()->NewObject(
		get_class<android::view::animation::TranslateAnimation::J2CPP_CLASS_NAME>(),
		get_method_id<android::view::animation::TranslateAnimation::J2CPP_CLASS_NAME, android::view::animation::TranslateAnimation::J2CPP_METHOD_NAME(2), android::view::animation::TranslateAnimation::J2CPP_METHOD_SIGNATURE(2), false>(),
		a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype()
	)
)
{
}



void android::view::animation::TranslateAnimation::initialize(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::animation::TranslateAnimation,"android/view/animation/TranslateAnimation")
J2CPP_DEFINE_METHOD(android::view::animation::TranslateAnimation,0,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::animation::TranslateAnimation,1,"<init>","(FFFF)V")
J2CPP_DEFINE_METHOD(android::view::animation::TranslateAnimation,2,"<init>","(IFIFIFIF)V")
J2CPP_DEFINE_METHOD(android::view::animation::TranslateAnimation,3,"applyTransformation","(FLandroid/view/animation/Transformation;)V")
J2CPP_DEFINE_METHOD(android::view::animation::TranslateAnimation,4,"initialize","(IIII)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_TRANSLATEANIMATION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
