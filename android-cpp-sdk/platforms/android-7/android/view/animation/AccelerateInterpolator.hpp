/*================================================================================
  code generated by: java2cpp
  class: android.view.animation.AccelerateInterpolator
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_ACCELERATEINTERPOLATOR_HPP_DECL
#define J2CPP_ANDROID_VIEW_ANIMATION_ACCELERATEINTERPOLATOR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { namespace animation { class Interpolator; } } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }


#include <android/content/Context.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/view/animation/Interpolator.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace view { namespace animation {

	class AccelerateInterpolator;
	class AccelerateInterpolator
		: public cpp_object<AccelerateInterpolator>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)

		explicit AccelerateInterpolator(jobject jobj)
		: cpp_object<AccelerateInterpolator>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::view::animation::Interpolator>() const;


		AccelerateInterpolator();
		AccelerateInterpolator(cpp_float const&);
		AccelerateInterpolator(local_ref< android::content::Context > const&, local_ref< android::util::AttributeSet > const&);
		cpp_float getInterpolation(cpp_float const&);
	}; //class AccelerateInterpolator

} //namespace animation
} //namespace view
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_ACCELERATEINTERPOLATOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_ANIMATION_ACCELERATEINTERPOLATOR_HPP_IMPL
#define J2CPP_ANDROID_VIEW_ANIMATION_ACCELERATEINTERPOLATOR_HPP_IMPL

namespace j2cpp {



android::view::animation::AccelerateInterpolator::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

android::view::animation::AccelerateInterpolator::operator local_ref<android::view::animation::Interpolator>() const
{
	return local_ref<android::view::animation::Interpolator>(get_jtype());
}


android::view::animation::AccelerateInterpolator::AccelerateInterpolator()
: cpp_object<android::view::animation::AccelerateInterpolator>(
	environment::get().get_jenv()->NewObject(
		get_class<android::view::animation::AccelerateInterpolator::J2CPP_CLASS_NAME>(),
		get_method_id<android::view::animation::AccelerateInterpolator::J2CPP_CLASS_NAME, android::view::animation::AccelerateInterpolator::J2CPP_METHOD_NAME(0), android::view::animation::AccelerateInterpolator::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}



android::view::animation::AccelerateInterpolator::AccelerateInterpolator(cpp_float const &a0)
: cpp_object<android::view::animation::AccelerateInterpolator>(
	environment::get().get_jenv()->NewObject(
		get_class<android::view::animation::AccelerateInterpolator::J2CPP_CLASS_NAME>(),
		get_method_id<android::view::animation::AccelerateInterpolator::J2CPP_CLASS_NAME, android::view::animation::AccelerateInterpolator::J2CPP_METHOD_NAME(1), android::view::animation::AccelerateInterpolator::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}



android::view::animation::AccelerateInterpolator::AccelerateInterpolator(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
: cpp_object<android::view::animation::AccelerateInterpolator>(
	environment::get().get_jenv()->NewObject(
		get_class<android::view::animation::AccelerateInterpolator::J2CPP_CLASS_NAME>(),
		get_method_id<android::view::animation::AccelerateInterpolator::J2CPP_CLASS_NAME, android::view::animation::AccelerateInterpolator::J2CPP_METHOD_NAME(2), android::view::animation::AccelerateInterpolator::J2CPP_METHOD_SIGNATURE(2), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}


cpp_float android::view::animation::AccelerateInterpolator::getInterpolation(cpp_float const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::animation::AccelerateInterpolator,"android/view/animation/AccelerateInterpolator")
J2CPP_DEFINE_METHOD(android::view::animation::AccelerateInterpolator,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::animation::AccelerateInterpolator,1,"<init>","(F)V")
J2CPP_DEFINE_METHOD(android::view::animation::AccelerateInterpolator,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::animation::AccelerateInterpolator,3,"getInterpolation","(F)F")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_ANIMATION_ACCELERATEINTERPOLATOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
