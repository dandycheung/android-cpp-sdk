/*================================================================================
  code generated by: java2cpp
  class: android.view.Display
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_DISPLAY_HPP_DECL
#define J2CPP_ANDROID_VIEW_DISPLAY_HPP_DECL


namespace j2cpp { namespace android { namespace util { class DisplayMetrics; } } }


#include <android/util/DisplayMetrics.hpp>


namespace j2cpp {

namespace android { namespace view {

	class Display;
	class Display
		: public cpp_object<Display>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_FIELD(0)

		Display(jobject jobj)
		: cpp_object<Display>(jobj)
		{
		}

		cpp_int getDisplayId();
		cpp_int getWidth();
		cpp_int getHeight();
		cpp_int getOrientation();
		cpp_int getPixelFormat();
		cpp_float getRefreshRate();
		void getMetrics(local_ref< android::util::DisplayMetrics > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > DEFAULT_DISPLAY;
	}; //class Display

} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_DISPLAY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_DISPLAY_HPP_IMPL
#define J2CPP_ANDROID_VIEW_DISPLAY_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::view::Display > create< android::view::Display>()
{
	return local_ref< android::view::Display >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::Display::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::Display::J2CPP_CLASS_NAME, android::view::Display::J2CPP_METHOD_NAME(0), android::view::Display::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_int android::view::Display::getDisplayId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_int android::view::Display::getWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int android::view::Display::getHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_int android::view::Display::getOrientation()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

cpp_int android::view::Display::getPixelFormat()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_float android::view::Display::getRefreshRate()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

void android::view::Display::getMetrics(local_ref< android::util::DisplayMetrics > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::view::Display::J2CPP_CLASS_NAME,
	android::view::Display::J2CPP_FIELD_NAME(0),
	android::view::Display::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::view::Display::DEFAULT_DISPLAY;


J2CPP_DEFINE_CLASS(android::view::Display,"android/view/Display")
J2CPP_DEFINE_METHOD(android::view::Display,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::Display,1,"getDisplayId","()I")
J2CPP_DEFINE_METHOD(android::view::Display,2,"getWidth","()I")
J2CPP_DEFINE_METHOD(android::view::Display,3,"getHeight","()I")
J2CPP_DEFINE_METHOD(android::view::Display,4,"getOrientation","()I")
J2CPP_DEFINE_METHOD(android::view::Display,5,"getPixelFormat","()I")
J2CPP_DEFINE_METHOD(android::view::Display,6,"getRefreshRate","()F")
J2CPP_DEFINE_METHOD(android::view::Display,7,"getMetrics","(Landroid/util/DisplayMetrics;)V")
J2CPP_DEFINE_FIELD(android::view::Display,0,"DEFAULT_DISPLAY","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_DISPLAY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
