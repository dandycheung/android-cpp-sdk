/*================================================================================
  code generated by: java2cpp
  class: android.view.inputmethod.InputConnectionWrapper
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTCONNECTIONWRAPPER_HPP_DECL
#define J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTCONNECTIONWRAPPER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class ExtractedText; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class CompletionInfo; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class InputConnection; } } } }
namespace j2cpp { namespace android { namespace view { namespace inputmethod { class ExtractedTextRequest; } } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }


#include <android/os/Bundle.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/inputmethod/CompletionInfo.hpp>
#include <android/view/inputmethod/ExtractedText.hpp>
#include <android/view/inputmethod/ExtractedTextRequest.hpp>
#include <android/view/inputmethod/InputConnection.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace view { namespace inputmethod {

	class InputConnectionWrapper;
	class InputConnectionWrapper
		: public cpp_object<InputConnectionWrapper>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)

		InputConnectionWrapper(jobject jobj)
		: cpp_object<InputConnectionWrapper>(jobj)
		{
		}

		void setTarget(local_ref< android::view::inputmethod::InputConnection > const&);
		local_ref< java::lang::CharSequence > getTextBeforeCursor(cpp_int const&, cpp_int const&);
		local_ref< java::lang::CharSequence > getTextAfterCursor(cpp_int const&, cpp_int const&);
		cpp_int getCursorCapsMode(cpp_int const&);
		local_ref< android::view::inputmethod::ExtractedText > getExtractedText(local_ref< android::view::inputmethod::ExtractedTextRequest > const&, cpp_int const&);
		cpp_boolean deleteSurroundingText(cpp_int const&, cpp_int const&);
		cpp_boolean setComposingText(local_ref< java::lang::CharSequence > const&, cpp_int const&);
		cpp_boolean finishComposingText();
		cpp_boolean commitText(local_ref< java::lang::CharSequence > const&, cpp_int const&);
		cpp_boolean commitCompletion(local_ref< android::view::inputmethod::CompletionInfo > const&);
		cpp_boolean setSelection(cpp_int const&, cpp_int const&);
		cpp_boolean performEditorAction(cpp_int const&);
		cpp_boolean performContextMenuAction(cpp_int const&);
		cpp_boolean beginBatchEdit();
		cpp_boolean endBatchEdit();
		cpp_boolean sendKeyEvent(local_ref< android::view::KeyEvent > const&);
		cpp_boolean clearMetaKeyStates(cpp_int const&);
		cpp_boolean reportFullscreenMode(cpp_boolean const&);
		cpp_boolean performPrivateCommand(local_ref< java::lang::String > const&, local_ref< android::os::Bundle > const&);
	}; //class InputConnectionWrapper

} //namespace inputmethod
} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTCONNECTIONWRAPPER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTCONNECTIONWRAPPER_HPP_IMPL
#define J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTCONNECTIONWRAPPER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::view::inputmethod::InputConnectionWrapper > create< android::view::inputmethod::InputConnectionWrapper>(local_ref< android::view::inputmethod::InputConnection > const &a0, cpp_boolean const &a1)
{
	return local_ref< android::view::inputmethod::InputConnectionWrapper >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::inputmethod::InputConnectionWrapper::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::inputmethod::InputConnectionWrapper::J2CPP_CLASS_NAME, android::view::inputmethod::InputConnectionWrapper::J2CPP_METHOD_NAME(0), android::view::inputmethod::InputConnectionWrapper::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::inputmethod::InputConnectionWrapper::setTarget(local_ref< android::view::inputmethod::InputConnection > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::CharSequence > android::view::inputmethod::InputConnectionWrapper::getTextBeforeCursor(cpp_int const &a0, cpp_int const &a1)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::CharSequence > android::view::inputmethod::InputConnectionWrapper::getTextAfterCursor(cpp_int const &a0, cpp_int const &a1)
{
	return local_ref< java::lang::CharSequence >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::view::inputmethod::InputConnectionWrapper::getCursorCapsMode(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::view::inputmethod::ExtractedText > android::view::inputmethod::InputConnectionWrapper::getExtractedText(local_ref< android::view::inputmethod::ExtractedTextRequest > const &a0, cpp_int const &a1)
{
	return local_ref< android::view::inputmethod::ExtractedText >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::deleteSurroundingText(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::setComposingText(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::finishComposingText()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::commitText(local_ref< java::lang::CharSequence > const &a0, cpp_int const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::commitCompletion(local_ref< android::view::inputmethod::CompletionInfo > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::setSelection(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::performEditorAction(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::performContextMenuAction(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::beginBatchEdit()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::endBatchEdit()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::sendKeyEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::clearMetaKeyStates(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::reportFullscreenMode(cpp_boolean const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::inputmethod::InputConnectionWrapper::performPrivateCommand(local_ref< java::lang::String > const &a0, local_ref< android::os::Bundle > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::inputmethod::InputConnectionWrapper,"android/view/inputmethod/InputConnectionWrapper")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,0,"<init>","(Landroid/view/inputmethod/InputConnection;Z)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,1,"setTarget","(Landroid/view/inputmethod/InputConnection;)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,2,"getTextBeforeCursor","(II)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,3,"getTextAfterCursor","(II)Ljava/lang/CharSequence;")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,4,"getCursorCapsMode","(I)I")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,5,"getExtractedText","(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,6,"deleteSurroundingText","(II)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,7,"setComposingText","(Ljava/lang/CharSequence;I)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,8,"finishComposingText","()Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,9,"commitText","(Ljava/lang/CharSequence;I)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,10,"commitCompletion","(Landroid/view/inputmethod/CompletionInfo;)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,11,"setSelection","(II)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,12,"performEditorAction","(I)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,13,"performContextMenuAction","(I)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,14,"beginBatchEdit","()Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,15,"endBatchEdit","()Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,16,"sendKeyEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,17,"clearMetaKeyStates","(I)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,18,"reportFullscreenMode","(Z)Z")
J2CPP_DEFINE_METHOD(android::view::inputmethod::InputConnectionWrapper,19,"performPrivateCommand","(Ljava/lang/String;Landroid/os/Bundle;)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_INPUTMETHOD_INPUTCONNECTIONWRAPPER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
