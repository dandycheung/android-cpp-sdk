/*================================================================================
  code generated by: java2cpp
  class: javax.security.cert.CertificateException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SECURITY_CERT_CERTIFICATEEXCEPTION_HPP_DECL
#define J2CPP_JAVAX_SECURITY_CERT_CERTIFICATEEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Exception; } } }


#include <java/lang/Exception.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace javax { namespace security { namespace cert {

	class CertificateException;
	class CertificateException
		: public cpp_object<CertificateException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit CertificateException(jobject jobj)
		: cpp_object<CertificateException>(jobj)
		{
		}

		operator local_ref<java::lang::Exception>() const;


		CertificateException(local_ref< java::lang::String > const&);
		CertificateException();
	}; //class CertificateException

} //namespace cert
} //namespace security
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_SECURITY_CERT_CERTIFICATEEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SECURITY_CERT_CERTIFICATEEXCEPTION_HPP_IMPL
#define J2CPP_JAVAX_SECURITY_CERT_CERTIFICATEEXCEPTION_HPP_IMPL

namespace j2cpp {



javax::security::cert::CertificateException::operator local_ref<java::lang::Exception>() const
{
	return local_ref<java::lang::Exception>(get_jtype());
}


javax::security::cert::CertificateException::CertificateException(local_ref< java::lang::String > const &a0)
: cpp_object<javax::security::cert::CertificateException>(
	environment::get().get_jenv()->NewObject(
		get_class<javax::security::cert::CertificateException::J2CPP_CLASS_NAME>(),
		get_method_id<javax::security::cert::CertificateException::J2CPP_CLASS_NAME, javax::security::cert::CertificateException::J2CPP_METHOD_NAME(0), javax::security::cert::CertificateException::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype()
	)
)
{
}



javax::security::cert::CertificateException::CertificateException()
: cpp_object<javax::security::cert::CertificateException>(
	environment::get().get_jenv()->NewObject(
		get_class<javax::security::cert::CertificateException::J2CPP_CLASS_NAME>(),
		get_method_id<javax::security::cert::CertificateException::J2CPP_CLASS_NAME, javax::security::cert::CertificateException::J2CPP_METHOD_NAME(1), javax::security::cert::CertificateException::J2CPP_METHOD_SIGNATURE(1), false>()
	)
)
{
}



J2CPP_DEFINE_CLASS(javax::security::cert::CertificateException,"javax/security/cert/CertificateException")
J2CPP_DEFINE_METHOD(javax::security::cert::CertificateException,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::security::cert::CertificateException,1,"<init>","()V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_SECURITY_CERT_CERTIFICATEEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
