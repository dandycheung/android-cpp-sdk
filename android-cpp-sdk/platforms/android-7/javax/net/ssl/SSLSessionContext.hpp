/*================================================================================
  code generated by: java2cpp
  class: javax.net.ssl.SSLSessionContext
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLSESSIONCONTEXT_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_SSLSESSIONCONTEXT_HPP_DECL


namespace j2cpp { namespace javax { namespace net { namespace ssl { class SSLSession; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Enumeration; } } }


#include <java/lang/Object.hpp>
#include <java/util/Enumeration.hpp>
#include <javax/net/ssl/SSLSession.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class SSLSessionContext;
	class SSLSessionContext
		: public cpp_object<SSLSessionContext>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		explicit SSLSessionContext(jobject jobj)
		: cpp_object<SSLSessionContext>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		local_ref< java::util::Enumeration > getIds();
		local_ref< javax::net::ssl::SSLSession > getSession(local_ref< cpp_byte_array<1> > const&);
		cpp_int getSessionCacheSize();
		cpp_int getSessionTimeout();
		void setSessionCacheSize(cpp_int const&);
		void setSessionTimeout(cpp_int const&);
	}; //class SSLSessionContext

} //namespace ssl
} //namespace net
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLSESSIONCONTEXT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_SSLSESSIONCONTEXT_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_SSLSESSIONCONTEXT_HPP_IMPL

namespace j2cpp {



javax::net::ssl::SSLSessionContext::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

local_ref< java::util::Enumeration > javax::net::ssl::SSLSessionContext::getIds()
{
	return local_ref< java::util::Enumeration >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< javax::net::ssl::SSLSession > javax::net::ssl::SSLSessionContext::getSession(local_ref< cpp_byte_array<1> > const &a0)
{
	return local_ref< javax::net::ssl::SSLSession >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int javax::net::ssl::SSLSessionContext::getSessionCacheSize()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int javax::net::ssl::SSLSessionContext::getSessionTimeout()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void javax::net::ssl::SSLSessionContext::setSessionCacheSize(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void javax::net::ssl::SSLSessionContext::setSessionTimeout(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::net::ssl::SSLSessionContext,"javax/net/ssl/SSLSessionContext")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSessionContext,0,"getIds","()Ljava/util/Enumeration;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSessionContext,1,"getSession","([B)Ljavax/net/ssl/SSLSession;")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSessionContext,2,"getSessionCacheSize","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSessionContext,3,"getSessionTimeout","()I")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSessionContext,4,"setSessionCacheSize","(I)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::SSLSessionContext,5,"setSessionTimeout","(I)V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_SSLSESSIONCONTEXT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
