/*================================================================================
  code generated by: java2cpp
  class: javax.crypto.spec.DHGenParameterSpec
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_SPEC_DHGENPARAMETERSPEC_HPP_DECL
#define J2CPP_JAVAX_CRYPTO_SPEC_DHGENPARAMETERSPEC_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { namespace spec { class AlgorithmParameterSpec; } } } }


#include <java/lang/Object.hpp>
#include <java/security/spec/AlgorithmParameterSpec.hpp>


namespace j2cpp {

namespace javax { namespace crypto { namespace spec {

	class DHGenParameterSpec;
	class DHGenParameterSpec
		: public cpp_object<DHGenParameterSpec>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		explicit DHGenParameterSpec(jobject jobj)
		: cpp_object<DHGenParameterSpec>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<java::security::spec::AlgorithmParameterSpec>() const;


		DHGenParameterSpec(cpp_int const&, cpp_int const&);
		cpp_int getPrimeSize();
		cpp_int getExponentSize();
	}; //class DHGenParameterSpec

} //namespace spec
} //namespace crypto
} //namespace javax

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_SPEC_DHGENPARAMETERSPEC_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_SPEC_DHGENPARAMETERSPEC_HPP_IMPL
#define J2CPP_JAVAX_CRYPTO_SPEC_DHGENPARAMETERSPEC_HPP_IMPL

namespace j2cpp {



javax::crypto::spec::DHGenParameterSpec::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jtype());
}

javax::crypto::spec::DHGenParameterSpec::operator local_ref<java::security::spec::AlgorithmParameterSpec>() const
{
	return local_ref<java::security::spec::AlgorithmParameterSpec>(get_jtype());
}


javax::crypto::spec::DHGenParameterSpec::DHGenParameterSpec(cpp_int const &a0, cpp_int const &a1)
: cpp_object<javax::crypto::spec::DHGenParameterSpec>(
	environment::get().get_jenv()->NewObject(
		get_class<javax::crypto::spec::DHGenParameterSpec::J2CPP_CLASS_NAME>(),
		get_method_id<javax::crypto::spec::DHGenParameterSpec::J2CPP_CLASS_NAME, javax::crypto::spec::DHGenParameterSpec::J2CPP_METHOD_NAME(0), javax::crypto::spec::DHGenParameterSpec::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}


cpp_int javax::crypto::spec::DHGenParameterSpec::getPrimeSize()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_int javax::crypto::spec::DHGenParameterSpec::getExponentSize()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::crypto::spec::DHGenParameterSpec,"javax/crypto/spec/DHGenParameterSpec")
J2CPP_DEFINE_METHOD(javax::crypto::spec::DHGenParameterSpec,0,"<init>","(II)V")
J2CPP_DEFINE_METHOD(javax::crypto::spec::DHGenParameterSpec,1,"getPrimeSize","()I")
J2CPP_DEFINE_METHOD(javax::crypto::spec::DHGenParameterSpec,2,"getExponentSize","()I")

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_SPEC_DHGENPARAMETERSPEC_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
