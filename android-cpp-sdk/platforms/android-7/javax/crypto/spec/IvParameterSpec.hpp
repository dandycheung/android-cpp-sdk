/*================================================================================
  code generated by: java2cpp
  class: javax.crypto.spec.IvParameterSpec
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_SPEC_IVPARAMETERSPEC_HPP_DECL
#define J2CPP_JAVAX_CRYPTO_SPEC_IVPARAMETERSPEC_HPP_DECL






namespace j2cpp {

namespace javax { namespace crypto { namespace spec {

	class IvParameterSpec;
	class IvParameterSpec
		: public cpp_object<IvParameterSpec>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		IvParameterSpec(jobject jobj)
		: cpp_object<IvParameterSpec>(jobj)
		{
		}

		local_ref< cpp_byte_array<1> > getIV();
	}; //class IvParameterSpec

} //namespace spec
} //namespace crypto
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_SPEC_IVPARAMETERSPEC_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_SPEC_IVPARAMETERSPEC_HPP_IMPL
#define J2CPP_JAVAX_CRYPTO_SPEC_IVPARAMETERSPEC_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::crypto::spec::IvParameterSpec > create< javax::crypto::spec::IvParameterSpec>(local_ref< cpp_byte_array<1> > const &a0)
{
	return local_ref< javax::crypto::spec::IvParameterSpec >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::crypto::spec::IvParameterSpec::J2CPP_CLASS_NAME>(),
			get_method_id<javax::crypto::spec::IvParameterSpec::J2CPP_CLASS_NAME, javax::crypto::spec::IvParameterSpec::J2CPP_METHOD_NAME(0), javax::crypto::spec::IvParameterSpec::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< javax::crypto::spec::IvParameterSpec > create< javax::crypto::spec::IvParameterSpec>(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return local_ref< javax::crypto::spec::IvParameterSpec >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::crypto::spec::IvParameterSpec::J2CPP_CLASS_NAME>(),
			get_method_id<javax::crypto::spec::IvParameterSpec::J2CPP_CLASS_NAME, javax::crypto::spec::IvParameterSpec::J2CPP_METHOD_NAME(1), javax::crypto::spec::IvParameterSpec::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > javax::crypto::spec::IvParameterSpec::getIV()
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::crypto::spec::IvParameterSpec,"javax/crypto/spec/IvParameterSpec")
J2CPP_DEFINE_METHOD(javax::crypto::spec::IvParameterSpec,0,"<init>","([B)V")
J2CPP_DEFINE_METHOD(javax::crypto::spec::IvParameterSpec,1,"<init>","([BII)V")
J2CPP_DEFINE_METHOD(javax::crypto::spec::IvParameterSpec,2,"getIV","()[B")

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_SPEC_IVPARAMETERSPEC_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
