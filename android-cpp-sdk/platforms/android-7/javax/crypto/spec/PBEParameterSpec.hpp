/*================================================================================
  code generated by: java2cpp
  class: javax.crypto.spec.PBEParameterSpec
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_HPP_DECL
#define J2CPP_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_HPP_DECL






namespace j2cpp {

namespace javax { namespace crypto { namespace spec {

	class PBEParameterSpec;
	class PBEParameterSpec
		: public cpp_object<PBEParameterSpec>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		PBEParameterSpec(jobject jobj)
		: cpp_object<PBEParameterSpec>(jobj)
		{
		}

		local_ref< cpp_byte_array<1> > getSalt();
		cpp_int getIterationCount();
	}; //class PBEParameterSpec

} //namespace spec
} //namespace crypto
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_HPP_IMPL
#define J2CPP_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::crypto::spec::PBEParameterSpec > create< javax::crypto::spec::PBEParameterSpec>(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1)
{
	return local_ref< javax::crypto::spec::PBEParameterSpec >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::crypto::spec::PBEParameterSpec::J2CPP_CLASS_NAME>(),
			get_method_id<javax::crypto::spec::PBEParameterSpec::J2CPP_CLASS_NAME, javax::crypto::spec::PBEParameterSpec::J2CPP_METHOD_NAME(0), javax::crypto::spec::PBEParameterSpec::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > javax::crypto::spec::PBEParameterSpec::getSalt()
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_int javax::crypto::spec::PBEParameterSpec::getIterationCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::crypto::spec::PBEParameterSpec,"javax/crypto/spec/PBEParameterSpec")
J2CPP_DEFINE_METHOD(javax::crypto::spec::PBEParameterSpec,0,"<init>","([BI)V")
J2CPP_DEFINE_METHOD(javax::crypto::spec::PBEParameterSpec,1,"getSalt","()[B")
J2CPP_DEFINE_METHOD(javax::crypto::spec::PBEParameterSpec,2,"getIterationCount","()I")

} //namespace j2cpp

#endif //J2CPP_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
