/*================================================================================
  code generated by: java2cpp
  class: junit.framework.Protectable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_DECL
#define J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_DECL






namespace j2cpp {

namespace junit { namespace framework {

	class Protectable;
	class Protectable
		: public cpp_object<Protectable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		Protectable(jobject jobj)
		: cpp_object<Protectable>(jobj)
		{
		}

		void protect();
	}; //class Protectable

} //namespace framework
} //namespace junit


} //namespace j2cpp

#endif //J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_IMPL
#define J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_IMPL

namespace j2cpp {


void junit::framework::Protectable::protect()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(junit::framework::Protectable,"junit/framework/Protectable")
J2CPP_DEFINE_METHOD(junit::framework::Protectable,0,"protect","()V")

} //namespace j2cpp

#endif //J2CPP_JUNIT_FRAMEWORK_PROTECTABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
