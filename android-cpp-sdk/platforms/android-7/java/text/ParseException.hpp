/*================================================================================
  code generated by: java2cpp
  class: java.text.ParseException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_TEXT_PARSEEXCEPTION_HPP_DECL
#define J2CPP_JAVA_TEXT_PARSEEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Exception; } } }


#include <java/lang/Exception.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace text {

	class ParseException;
	class ParseException
		: public cpp_object<ParseException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit ParseException(jobject jobj)
		: cpp_object<ParseException>(jobj)
		{
		}

		operator local_ref<java::lang::Exception>() const;


		ParseException(local_ref< java::lang::String > const&, cpp_int const&);
		cpp_int getErrorOffset();
	}; //class ParseException

} //namespace text
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_TEXT_PARSEEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_TEXT_PARSEEXCEPTION_HPP_IMPL
#define J2CPP_JAVA_TEXT_PARSEEXCEPTION_HPP_IMPL

namespace j2cpp {



java::text::ParseException::operator local_ref<java::lang::Exception>() const
{
	return local_ref<java::lang::Exception>(get_jtype());
}


java::text::ParseException::ParseException(local_ref< java::lang::String > const &a0, cpp_int const &a1)
: cpp_object<java::text::ParseException>(
	environment::get().get_jenv()->NewObject(
		get_class<java::text::ParseException::J2CPP_CLASS_NAME>(),
		get_method_id<java::text::ParseException::J2CPP_CLASS_NAME, java::text::ParseException::J2CPP_METHOD_NAME(0), java::text::ParseException::J2CPP_METHOD_SIGNATURE(0), false>(),
		a0.get_jtype(), a1.get_jtype()
	)
)
{
}


cpp_int java::text::ParseException::getErrorOffset()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::text::ParseException,"java/text/ParseException")
J2CPP_DEFINE_METHOD(java::text::ParseException,0,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::text::ParseException,1,"getErrorOffset","()I")

} //namespace j2cpp

#endif //J2CPP_JAVA_TEXT_PARSEEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
