/*================================================================================
  code generated by: java2cpp
  class: java.nio.channels.GatheringByteChannel
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NIO_CHANNELS_GATHERINGBYTECHANNEL_HPP_DECL
#define J2CPP_JAVA_NIO_CHANNELS_GATHERINGBYTECHANNEL_HPP_DECL


namespace j2cpp { namespace java { namespace nio { class ByteBuffer; } } }


#include <java/nio/ByteBuffer.hpp>


namespace j2cpp {

namespace java { namespace nio { namespace channels {

	class GatheringByteChannel;
	class GatheringByteChannel
		: public cpp_object<GatheringByteChannel>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		GatheringByteChannel(jobject jobj)
		: cpp_object<GatheringByteChannel>(jobj)
		{
		}

		cpp_long write(local_ref< cpp_object_array<java::nio::ByteBuffer, 1> > const&);
		cpp_long write(local_ref< cpp_object_array<java::nio::ByteBuffer, 1> > const&, cpp_int const&, cpp_int const&);
	}; //class GatheringByteChannel

} //namespace channels
} //namespace nio
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_NIO_CHANNELS_GATHERINGBYTECHANNEL_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NIO_CHANNELS_GATHERINGBYTECHANNEL_HPP_IMPL
#define J2CPP_JAVA_NIO_CHANNELS_GATHERINGBYTECHANNEL_HPP_IMPL

namespace j2cpp {


cpp_long java::nio::channels::GatheringByteChannel::write(local_ref< cpp_object_array<java::nio::ByteBuffer, 1> > const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

cpp_long java::nio::channels::GatheringByteChannel::write(local_ref< cpp_object_array<java::nio::ByteBuffer, 1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::nio::channels::GatheringByteChannel,"java/nio/channels/GatheringByteChannel")
J2CPP_DEFINE_METHOD(java::nio::channels::GatheringByteChannel,0,"write","([java.nio.ByteBuffer)J")
J2CPP_DEFINE_METHOD(java::nio::channels::GatheringByteChannel,1,"write","([java.nio.ByteBufferII)J")

} //namespace j2cpp

#endif //J2CPP_JAVA_NIO_CHANNELS_GATHERINGBYTECHANNEL_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
