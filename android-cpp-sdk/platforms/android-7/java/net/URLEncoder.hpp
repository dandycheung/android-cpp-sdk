/*================================================================================
  code generated by: java2cpp
  class: java.net.URLEncoder
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_URLENCODER_HPP_DECL
#define J2CPP_JAVA_NET_URLENCODER_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace net {

	class URLEncoder;
	class URLEncoder
		: public cpp_object<URLEncoder>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		URLEncoder(jobject jobj)
		: cpp_object<URLEncoder>(jobj)
		{
		}

		static local_ref< java::lang::String > encode(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > encode(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
	}; //class URLEncoder

} //namespace net
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_NET_URLENCODER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_URLENCODER_HPP_IMPL
#define J2CPP_JAVA_NET_URLENCODER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::net::URLEncoder > create< java::net::URLEncoder>()
{
	return local_ref< java::net::URLEncoder >(
		environment::get().get_jenv()->NewObject(
			get_class<java::net::URLEncoder::J2CPP_CLASS_NAME>(),
			get_method_id<java::net::URLEncoder::J2CPP_CLASS_NAME, java::net::URLEncoder::J2CPP_METHOD_NAME(0), java::net::URLEncoder::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > java::net::URLEncoder::encode(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::net::URLEncoder::encode(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::net::URLEncoder,"java/net/URLEncoder")
J2CPP_DEFINE_METHOD(java::net::URLEncoder,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::net::URLEncoder,1,"encode","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::net::URLEncoder,2,"encode","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_URLENCODER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
