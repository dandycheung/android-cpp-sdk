/*================================================================================
  code generated by: java2cpp
  class: java.security.KeyPair
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_KEYPAIR_HPP_DECL
#define J2CPP_JAVA_SECURITY_KEYPAIR_HPP_DECL


namespace j2cpp { namespace java { namespace security { class PublicKey; } } }
namespace j2cpp { namespace java { namespace security { class PrivateKey; } } }


#include <java/security/PrivateKey.hpp>
#include <java/security/PublicKey.hpp>


namespace j2cpp {

namespace java { namespace security {

	class KeyPair;
	class KeyPair
		: public cpp_object<KeyPair>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		KeyPair(jobject jobj)
		: cpp_object<KeyPair>(jobj)
		{
		}

		local_ref< java::security::PrivateKey > getPrivate();
		local_ref< java::security::PublicKey > getPublic();
	}; //class KeyPair

} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_KEYPAIR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_KEYPAIR_HPP_IMPL
#define J2CPP_JAVA_SECURITY_KEYPAIR_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::security::KeyPair > create< java::security::KeyPair>(local_ref< java::security::PublicKey > const &a0, local_ref< java::security::PrivateKey > const &a1)
{
	return local_ref< java::security::KeyPair >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::KeyPair::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::KeyPair::J2CPP_CLASS_NAME, java::security::KeyPair::J2CPP_METHOD_NAME(0), java::security::KeyPair::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::security::PrivateKey > java::security::KeyPair::getPrivate()
{
	return local_ref< java::security::PrivateKey >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::security::PublicKey > java::security::KeyPair::getPublic()
{
	return local_ref< java::security::PublicKey >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::KeyPair,"java/security/KeyPair")
J2CPP_DEFINE_METHOD(java::security::KeyPair,0,"<init>","(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V")
J2CPP_DEFINE_METHOD(java::security::KeyPair,1,"getPrivate","()Ljava/security/PrivateKey;")
J2CPP_DEFINE_METHOD(java::security::KeyPair,2,"getPublic","()Ljava/security/PublicKey;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_KEYPAIR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
