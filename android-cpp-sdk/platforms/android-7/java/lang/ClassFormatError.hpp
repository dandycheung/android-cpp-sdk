/*================================================================================
  code generated by: java2cpp
  class: java.lang.ClassFormatError
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_CLASSFORMATERROR_HPP_DECL
#define J2CPP_JAVA_LANG_CLASSFORMATERROR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class LinkageError; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/LinkageError.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class ClassFormatError;
	class ClassFormatError
		: public cpp_object<ClassFormatError>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		explicit ClassFormatError(jobject jobj)
		: cpp_object<ClassFormatError>(jobj)
		{
		}

		operator local_ref<java::lang::LinkageError>() const;


		ClassFormatError();
		ClassFormatError(local_ref< java::lang::String > const&);
	}; //class ClassFormatError

} //namespace lang
} //namespace java

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_CLASSFORMATERROR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_CLASSFORMATERROR_HPP_IMPL
#define J2CPP_JAVA_LANG_CLASSFORMATERROR_HPP_IMPL

namespace j2cpp {



java::lang::ClassFormatError::operator local_ref<java::lang::LinkageError>() const
{
	return local_ref<java::lang::LinkageError>(get_jtype());
}


java::lang::ClassFormatError::ClassFormatError()
: cpp_object<java::lang::ClassFormatError>(
	environment::get().get_jenv()->NewObject(
		get_class<java::lang::ClassFormatError::J2CPP_CLASS_NAME>(),
		get_method_id<java::lang::ClassFormatError::J2CPP_CLASS_NAME, java::lang::ClassFormatError::J2CPP_METHOD_NAME(0), java::lang::ClassFormatError::J2CPP_METHOD_SIGNATURE(0), false>()
	)
)
{
}



java::lang::ClassFormatError::ClassFormatError(local_ref< java::lang::String > const &a0)
: cpp_object<java::lang::ClassFormatError>(
	environment::get().get_jenv()->NewObject(
		get_class<java::lang::ClassFormatError::J2CPP_CLASS_NAME>(),
		get_method_id<java::lang::ClassFormatError::J2CPP_CLASS_NAME, java::lang::ClassFormatError::J2CPP_METHOD_NAME(1), java::lang::ClassFormatError::J2CPP_METHOD_SIGNATURE(1), false>(),
		a0.get_jtype()
	)
)
{
}



J2CPP_DEFINE_CLASS(java::lang::ClassFormatError,"java/lang/ClassFormatError")
J2CPP_DEFINE_METHOD(java::lang::ClassFormatError,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::lang::ClassFormatError,1,"<init>","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_CLASSFORMATERROR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
