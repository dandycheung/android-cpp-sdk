/*================================================================================
  code generated by: java2cpp
  class: java.util.Arrays
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ARRAYS_HPP_DECL
#define J2CPP_JAVA_UTIL_ARRAYS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace util { class Comparator; } } }
namespace j2cpp { namespace java { namespace util { class List; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Comparator.hpp>
#include <java/util/List.hpp>


namespace j2cpp {

namespace java { namespace util {

	class Arrays;
	class Arrays
		: public cpp_object<Arrays>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)

		Arrays(jobject jobj)
		: cpp_object<Arrays>(jobj)
		{
		}

		static local_ref< java::util::List > asList(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static cpp_int binarySearch(local_ref< cpp_byte_array<1> > const&, cpp_byte const&);
		static cpp_int binarySearch(local_ref< cpp_char_array<1> > const&, cpp_char const&);
		static cpp_int binarySearch(local_ref< cpp_double_array<1> > const&, cpp_double const&);
		static cpp_int binarySearch(local_ref< cpp_float_array<1> > const&, cpp_float const&);
		static cpp_int binarySearch(local_ref< cpp_int_array<1> > const&, cpp_int const&);
		static cpp_int binarySearch(local_ref< cpp_long_array<1> > const&, cpp_long const&);
		static cpp_int binarySearch(local_ref< cpp_object_array<java::lang::Object, 1> > const&, local_ref< java::lang::Object > const&);
		static cpp_int binarySearch(local_ref< cpp_object_array<java::lang::Object, 1> > const&, local_ref< java::lang::Object > const&, local_ref< java::util::Comparator > const&);
		static cpp_int binarySearch(local_ref< cpp_short_array<1> > const&, cpp_short const&);
		static void fill(local_ref< cpp_byte_array<1> > const&, cpp_byte const&);
		static void fill(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&, cpp_byte const&);
		static void fill(local_ref< cpp_short_array<1> > const&, cpp_short const&);
		static void fill(local_ref< cpp_short_array<1> > const&, cpp_int const&, cpp_int const&, cpp_short const&);
		static void fill(local_ref< cpp_char_array<1> > const&, cpp_char const&);
		static void fill(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&, cpp_char const&);
		static void fill(local_ref< cpp_int_array<1> > const&, cpp_int const&);
		static void fill(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, cpp_int const&);
		static void fill(local_ref< cpp_long_array<1> > const&, cpp_long const&);
		static void fill(local_ref< cpp_long_array<1> > const&, cpp_int const&, cpp_int const&, cpp_long const&);
		static void fill(local_ref< cpp_float_array<1> > const&, cpp_float const&);
		static void fill(local_ref< cpp_float_array<1> > const&, cpp_int const&, cpp_int const&, cpp_float const&);
		static void fill(local_ref< cpp_double_array<1> > const&, cpp_double const&);
		static void fill(local_ref< cpp_double_array<1> > const&, cpp_int const&, cpp_int const&, cpp_double const&);
		static void fill(local_ref< cpp_boolean_array<1> > const&, cpp_boolean const&);
		static void fill(local_ref< cpp_boolean_array<1> > const&, cpp_int const&, cpp_int const&, cpp_boolean const&);
		static void fill(local_ref< cpp_object_array<java::lang::Object, 1> > const&, local_ref< java::lang::Object > const&);
		static void fill(local_ref< cpp_object_array<java::lang::Object, 1> > const&, cpp_int const&, cpp_int const&, local_ref< java::lang::Object > const&);
		static cpp_int hashCode(local_ref< cpp_boolean_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_int_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_short_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_char_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_byte_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_long_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_float_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_double_array<1> > const&);
		static cpp_int hashCode(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static cpp_int deepHashCode(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static cpp_boolean equals(local_ref< cpp_byte_array<1> > const&, local_ref< cpp_byte_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_short_array<1> > const&, local_ref< cpp_short_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_char_array<1> > const&, local_ref< cpp_char_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_int_array<1> > const&, local_ref< cpp_int_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_long_array<1> > const&, local_ref< cpp_long_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_float_array<1> > const&, local_ref< cpp_float_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_double_array<1> > const&, local_ref< cpp_double_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_boolean_array<1> > const&, local_ref< cpp_boolean_array<1> > const&);
		static cpp_boolean equals(local_ref< cpp_object_array<java::lang::Object, 1> > const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static cpp_boolean deepEquals(local_ref< cpp_object_array<java::lang::Object, 1> > const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static void sort(local_ref< cpp_byte_array<1> > const&);
		static void sort(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_char_array<1> > const&);
		static void sort(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_double_array<1> > const&);
		static void sort(local_ref< cpp_double_array<1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_float_array<1> > const&);
		static void sort(local_ref< cpp_float_array<1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_int_array<1> > const&);
		static void sort(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_long_array<1> > const&);
		static void sort(local_ref< cpp_long_array<1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static void sort(local_ref< cpp_object_array<java::lang::Object, 1> > const&, cpp_int const&, cpp_int const&);
		static void sort(local_ref< cpp_object_array<java::lang::Object, 1> > const&, cpp_int const&, cpp_int const&, local_ref< java::util::Comparator > const&);
		static void sort(local_ref< cpp_object_array<java::lang::Object, 1> > const&, local_ref< java::util::Comparator > const&);
		static void sort(local_ref< cpp_short_array<1> > const&);
		static void sort(local_ref< cpp_short_array<1> > const&, cpp_int const&, cpp_int const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_boolean_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_byte_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_char_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_double_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_float_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_int_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_long_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_short_array<1> > const&);
		static local_ref< java::lang::String > toString(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static local_ref< java::lang::String > deepToString(local_ref< cpp_object_array<java::lang::Object, 1> > const&);
	}; //class Arrays

} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ARRAYS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ARRAYS_HPP_IMPL
#define J2CPP_JAVA_UTIL_ARRAYS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::util::Arrays > create< java::util::Arrays>()
{
	return local_ref< java::util::Arrays >(
		environment::get().get_jenv()->NewObject(
			get_class<java::util::Arrays::J2CPP_CLASS_NAME>(),
			get_method_id<java::util::Arrays::J2CPP_CLASS_NAME, java::util::Arrays::J2CPP_METHOD_NAME(0), java::util::Arrays::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::util::List > java::util::Arrays::asList(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return local_ref< java::util::List >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_byte_array<1> > const &a0, cpp_byte const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_char_array<1> > const &a0, cpp_char const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_double_array<1> > const &a0, cpp_double const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_float_array<1> > const &a0, cpp_float const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_long_array<1> > const &a0, cpp_long const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, local_ref< java::lang::Object > const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, local_ref< java::lang::Object > const &a1, local_ref< java::util::Comparator > const &a2)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::binarySearch(local_ref< cpp_short_array<1> > const &a0, cpp_short const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_byte_array<1> > const &a0, cpp_byte const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_byte const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_short_array<1> > const &a0, cpp_short const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_short_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_short const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_char_array<1> > const &a0, cpp_char const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_char const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_long_array<1> > const &a0, cpp_long const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_long_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_long const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_float_array<1> > const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_float const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_double_array<1> > const &a0, cpp_double const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_double_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_double const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_boolean_array<1> > const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_boolean_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_boolean const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::fill(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< java::lang::Object > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_boolean_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_int_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_short_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_char_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_byte_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_long_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_float_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_double_array<1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::hashCode(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::util::Arrays::deepHashCode(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_byte_array<1> > const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_short_array<1> > const &a0, local_ref< cpp_short_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(40), J2CPP_METHOD_SIGNATURE(40), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_char_array<1> > const &a0, local_ref< cpp_char_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(41), J2CPP_METHOD_SIGNATURE(41), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_int_array<1> > const &a0, local_ref< cpp_int_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(42), J2CPP_METHOD_SIGNATURE(42), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_long_array<1> > const &a0, local_ref< cpp_long_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(43), J2CPP_METHOD_SIGNATURE(43), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_float_array<1> > const &a0, local_ref< cpp_float_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(44), J2CPP_METHOD_SIGNATURE(44), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_double_array<1> > const &a0, local_ref< cpp_double_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(45), J2CPP_METHOD_SIGNATURE(45), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_boolean_array<1> > const &a0, local_ref< cpp_boolean_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(46), J2CPP_METHOD_SIGNATURE(46), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::equals(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(47), J2CPP_METHOD_SIGNATURE(47), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::Arrays::deepEquals(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_byte_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_char_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(51), J2CPP_METHOD_SIGNATURE(51), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(52), J2CPP_METHOD_SIGNATURE(52), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_double_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(53), J2CPP_METHOD_SIGNATURE(53), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_double_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_float_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_float_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_int_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_long_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_long_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(60), J2CPP_METHOD_SIGNATURE(60), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(62), J2CPP_METHOD_SIGNATURE(62), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< java::util::Comparator > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(63), J2CPP_METHOD_SIGNATURE(63), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0, local_ref< java::util::Comparator > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(64), J2CPP_METHOD_SIGNATURE(64), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_short_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(65), J2CPP_METHOD_SIGNATURE(65), true>(),
			a0.get_jtype()
		)
	);
}

void java::util::Arrays::sort(local_ref< cpp_short_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_boolean_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_byte_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_char_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_double_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_float_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(71), J2CPP_METHOD_SIGNATURE(71), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_int_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(72), J2CPP_METHOD_SIGNATURE(72), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_long_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(73), J2CPP_METHOD_SIGNATURE(73), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_short_array<1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(74), J2CPP_METHOD_SIGNATURE(74), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::toString(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(75), J2CPP_METHOD_SIGNATURE(75), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::Arrays::deepToString(local_ref< cpp_object_array<java::lang::Object, 1> > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(76), J2CPP_METHOD_SIGNATURE(76), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::util::Arrays,"java/util/Arrays")
J2CPP_DEFINE_METHOD(java::util::Arrays,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::Arrays,1,"asList","([java.lang.Object)Ljava/util/List;")
J2CPP_DEFINE_METHOD(java::util::Arrays,2,"binarySearch","([BB)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,3,"binarySearch","([CC)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,4,"binarySearch","([DD)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,5,"binarySearch","([FF)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,6,"binarySearch","([II)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,7,"binarySearch","([JJ)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,8,"binarySearch","([java.lang.ObjectLjava/lang/Object;)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,9,"binarySearch","([java.lang.ObjectLjava/lang/Object;Ljava/util/Comparator;)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,10,"binarySearch","([SS)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,11,"fill","([BB)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,12,"fill","([BIIB)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,13,"fill","([SS)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,14,"fill","([SIIS)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,15,"fill","([CC)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,16,"fill","([CIIC)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,17,"fill","([II)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,18,"fill","([IIII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,19,"fill","([JJ)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,20,"fill","([JIIJ)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,21,"fill","([FF)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,22,"fill","([FIIF)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,23,"fill","([DD)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,24,"fill","([DIID)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,25,"fill","([ZZ)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,26,"fill","([ZIIZ)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,27,"fill","([java.lang.ObjectLjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,28,"fill","([java.lang.ObjectIILjava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,29,"hashCode","([Z)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,30,"hashCode","([I)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,31,"hashCode","([S)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,32,"hashCode","([C)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,33,"hashCode","([B)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,34,"hashCode","([J)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,35,"hashCode","([F)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,36,"hashCode","([D)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,37,"hashCode","([java.lang.Object)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,38,"deepHashCode","([java.lang.Object)I")
J2CPP_DEFINE_METHOD(java::util::Arrays,39,"equals","([B[B)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,40,"equals","([S[S)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,41,"equals","([C[C)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,42,"equals","([I[I)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,43,"equals","([J[J)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,44,"equals","([F[F)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,45,"equals","([D[D)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,46,"equals","([Z[Z)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,47,"equals","([java.lang.Object[java.lang.Object)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,48,"deepEquals","([java.lang.Object[java.lang.Object)Z")
J2CPP_DEFINE_METHOD(java::util::Arrays,49,"sort","([B)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,50,"sort","([BII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,51,"sort","([C)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,52,"sort","([CII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,53,"sort","([D)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,54,"sort","([DII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,55,"sort","([F)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,56,"sort","([FII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,57,"sort","([I)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,58,"sort","([III)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,59,"sort","([J)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,60,"sort","([JII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,61,"sort","([java.lang.Object)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,62,"sort","([java.lang.ObjectII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,63,"sort","([java.lang.ObjectIILjava/util/Comparator;)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,64,"sort","([java.lang.ObjectLjava/util/Comparator;)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,65,"sort","([S)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,66,"sort","([SII)V")
J2CPP_DEFINE_METHOD(java::util::Arrays,67,"toString","([Z)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,68,"toString","([B)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,69,"toString","([C)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,70,"toString","([D)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,71,"toString","([F)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,72,"toString","([I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,73,"toString","([J)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,74,"toString","([S)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,75,"toString","([java.lang.Object)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::Arrays,76,"deepToString","([java.lang.Object)Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ARRAYS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
