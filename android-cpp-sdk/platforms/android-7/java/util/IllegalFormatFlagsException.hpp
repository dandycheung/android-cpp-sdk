/*================================================================================
  code generated by: java2cpp
  class: java.util.IllegalFormatFlagsException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_HPP_DECL
#define J2CPP_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace util {

	class IllegalFormatFlagsException;
	class IllegalFormatFlagsException
		: public cpp_object<IllegalFormatFlagsException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		IllegalFormatFlagsException(jobject jobj)
		: cpp_object<IllegalFormatFlagsException>(jobj)
		{
		}

		local_ref< java::lang::String > getFlags();
		local_ref< java::lang::String > getMessage();
	}; //class IllegalFormatFlagsException

} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_HPP_IMPL
#define J2CPP_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::util::IllegalFormatFlagsException > create< java::util::IllegalFormatFlagsException>(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::util::IllegalFormatFlagsException >(
		environment::get().get_jenv()->NewObject(
			get_class<java::util::IllegalFormatFlagsException::J2CPP_CLASS_NAME>(),
			get_method_id<java::util::IllegalFormatFlagsException::J2CPP_CLASS_NAME, java::util::IllegalFormatFlagsException::J2CPP_METHOD_NAME(0), java::util::IllegalFormatFlagsException::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::IllegalFormatFlagsException::getFlags()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::String > java::util::IllegalFormatFlagsException::getMessage()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::util::IllegalFormatFlagsException,"java/util/IllegalFormatFlagsException")
J2CPP_DEFINE_METHOD(java::util::IllegalFormatFlagsException,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::util::IllegalFormatFlagsException,1,"getFlags","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::IllegalFormatFlagsException,2,"getMessage","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
