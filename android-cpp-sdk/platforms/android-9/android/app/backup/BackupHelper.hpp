/*================================================================================
  code generated by: java2cpp
  class: android.app.backup.BackupHelper
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_APP_BACKUP_BACKUPHELPER_HPP_DECL
#define J2CPP_ANDROID_APP_BACKUP_BACKUPHELPER_HPP_DECL


namespace j2cpp { namespace android { namespace app { namespace backup { class BackupDataOutput; } } } }
namespace j2cpp { namespace android { namespace app { namespace backup { class BackupDataInputStream; } } } }
namespace j2cpp { namespace android { namespace os { class ParcelFileDescriptor; } } }


#include <android/app/backup/BackupDataInputStream.hpp>
#include <android/app/backup/BackupDataOutput.hpp>
#include <android/os/ParcelFileDescriptor.hpp>


namespace j2cpp {

namespace android { namespace app { namespace backup {

	class BackupHelper;
	class BackupHelper
		: public cpp_object<BackupHelper>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		BackupHelper(jobject jobj)
		: cpp_object<BackupHelper>(jobj)
		{
		}

		void performBackup(local_ref< android::os::ParcelFileDescriptor > const&, local_ref< android::app::backup::BackupDataOutput > const&, local_ref< android::os::ParcelFileDescriptor > const&);
		void restoreEntity(local_ref< android::app::backup::BackupDataInputStream > const&);
		void writeNewStateDescription(local_ref< android::os::ParcelFileDescriptor > const&);
	}; //class BackupHelper

} //namespace backup
} //namespace app
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_APP_BACKUP_BACKUPHELPER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_APP_BACKUP_BACKUPHELPER_HPP_IMPL
#define J2CPP_ANDROID_APP_BACKUP_BACKUPHELPER_HPP_IMPL

namespace j2cpp {


void android::app::backup::BackupHelper::performBackup(local_ref< android::os::ParcelFileDescriptor > const &a0, local_ref< android::app::backup::BackupDataOutput > const &a1, local_ref< android::os::ParcelFileDescriptor > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::app::backup::BackupHelper::restoreEntity(local_ref< android::app::backup::BackupDataInputStream > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::app::backup::BackupHelper::writeNewStateDescription(local_ref< android::os::ParcelFileDescriptor > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::app::backup::BackupHelper,"android/app/backup/BackupHelper")
J2CPP_DEFINE_METHOD(android::app::backup::BackupHelper,0,"performBackup","(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V")
J2CPP_DEFINE_METHOD(android::app::backup::BackupHelper,1,"restoreEntity","(Landroid/app/backup/BackupDataInputStream;)V")
J2CPP_DEFINE_METHOD(android::app::backup::BackupHelper,2,"writeNewStateDescription","(Landroid/os/ParcelFileDescriptor;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_APP_BACKUP_BACKUPHELPER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
