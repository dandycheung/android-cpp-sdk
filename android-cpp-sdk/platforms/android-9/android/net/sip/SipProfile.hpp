/*================================================================================
  code generated by: java2cpp
  class: android.net.sip.SipProfile
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_DECL
#define J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace net { namespace sip { namespace SipProfile_ { class Builder; } } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/net/sip/SipProfile.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace net { namespace sip {

	class SipProfile;
	namespace SipProfile_ {

		class Builder;
		class Builder
			: public cpp_object<Builder>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)
			J2CPP_DECLARE_METHOD(10)
			J2CPP_DECLARE_METHOD(11)

			Builder(jobject jobj)
			: cpp_object<Builder>(jobj)
			{
			}

			local_ref< android::net::sip::SipProfile_::Builder > setProfileName(local_ref< java::lang::String > const&);
			local_ref< android::net::sip::SipProfile_::Builder > setPassword(local_ref< java::lang::String > const&);
			local_ref< android::net::sip::SipProfile_::Builder > setPort(cpp_int const&);
			local_ref< android::net::sip::SipProfile_::Builder > setProtocol(local_ref< java::lang::String > const&);
			local_ref< android::net::sip::SipProfile_::Builder > setOutboundProxy(local_ref< java::lang::String > const&);
			local_ref< android::net::sip::SipProfile_::Builder > setDisplayName(local_ref< java::lang::String > const&);
			local_ref< android::net::sip::SipProfile_::Builder > setSendKeepAlive(cpp_boolean const&);
			local_ref< android::net::sip::SipProfile_::Builder > setAutoRegistration(cpp_boolean const&);
			local_ref< android::net::sip::SipProfile > build();
		}; //class Builder

	} //namespace SipProfile_

	class SipProfile
		: public cpp_object<SipProfile>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_FIELD(0)

		typedef SipProfile_::Builder Builder;

		SipProfile(jobject jobj)
		: cpp_object<SipProfile>(jobj)
		{
		}

		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);
		cpp_int describeContents();
		local_ref< java::lang::String > getUriString();
		local_ref< java::lang::String > getDisplayName();
		local_ref< java::lang::String > getUserName();
		local_ref< java::lang::String > getPassword();
		local_ref< java::lang::String > getSipDomain();
		cpp_int getPort();
		local_ref< java::lang::String > getProtocol();
		local_ref< java::lang::String > getProxyAddress();
		local_ref< java::lang::String > getProfileName();
		cpp_boolean getSendKeepAlive();
		cpp_boolean getAutoRegistration();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class SipProfile

} //namespace sip
} //namespace net
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_IMPL
#define J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::net::sip::SipProfile_::Builder > create< android::net::sip::SipProfile_::Builder>(local_ref< android::net::sip::SipProfile > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME>(),
			get_method_id<android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME, android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(0), android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::net::sip::SipProfile_::Builder > create< android::net::sip::SipProfile_::Builder>(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME>(),
			get_method_id<android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME, android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(1), android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::net::sip::SipProfile_::Builder > create< android::net::sip::SipProfile_::Builder>(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME>(),
			get_method_id<android::net::sip::SipProfile_::Builder::J2CPP_CLASS_NAME, android::net::sip::SipProfile_::Builder::J2CPP_METHOD_NAME(2), android::net::sip::SipProfile_::Builder::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setProfileName(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setPassword(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setPort(cpp_int const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setProtocol(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setOutboundProxy(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setDisplayName(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setSendKeepAlive(cpp_boolean const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile_::Builder > android::net::sip::SipProfile_::Builder::setAutoRegistration(cpp_boolean const &a0)
{
	return local_ref< android::net::sip::SipProfile_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::net::sip::SipProfile > android::net::sip::SipProfile_::Builder::build()
{
	return local_ref< android::net::sip::SipProfile >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::net::sip::SipProfile_::Builder,"android/net/sip/SipProfile$Builder")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,0,"<init>","(Landroid/net/sip/SipProfile;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,1,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,2,"<init>","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,3,"setProfileName","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,4,"setPassword","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,5,"setPort","(I)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,6,"setProtocol","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,7,"setOutboundProxy","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,8,"setDisplayName","(Ljava/lang/String;)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,9,"setSendKeepAlive","(Z)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,10,"setAutoRegistration","(Z)Landroid/net/sip/SipProfile$Builder;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile_::Builder,11,"build","()Landroid/net/sip/SipProfile;")


template <>
local_ref< android::net::sip::SipProfile > create< android::net::sip::SipProfile>()
{
	return local_ref< android::net::sip::SipProfile >(
		environment::get().get_jenv()->NewObject(
			get_class<android::net::sip::SipProfile::J2CPP_CLASS_NAME>(),
			get_method_id<android::net::sip::SipProfile::J2CPP_CLASS_NAME, android::net::sip::SipProfile::J2CPP_METHOD_NAME(0), android::net::sip::SipProfile::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::net::sip::SipProfile::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::net::sip::SipProfile::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getUriString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getDisplayName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getUserName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getPassword()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getSipDomain()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_int android::net::sip::SipProfile::getPort()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getProtocol()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getProxyAddress()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

local_ref< java::lang::String > android::net::sip::SipProfile::getProfileName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

cpp_boolean android::net::sip::SipProfile::getSendKeepAlive()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_boolean android::net::sip::SipProfile::getAutoRegistration()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}


static_field<
	android::net::sip::SipProfile::J2CPP_CLASS_NAME,
	android::net::sip::SipProfile::J2CPP_FIELD_NAME(0),
	android::net::sip::SipProfile::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::Parcelable_::Creator >
> android::net::sip::SipProfile::CREATOR;


J2CPP_DEFINE_CLASS(android::net::sip::SipProfile,"android/net/sip/SipProfile")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,1,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,2,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,3,"getUriString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,4,"getDisplayName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,5,"getUserName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,6,"getPassword","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,7,"getSipDomain","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,8,"getPort","()I")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,9,"getProtocol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,10,"getProxyAddress","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,11,"getProfileName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,12,"getSendKeepAlive","()Z")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,13,"getAutoRegistration","()Z")
J2CPP_DEFINE_METHOD(android::net::sip::SipProfile,14,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::net::sip::SipProfile,0,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_SIP_SIPPROFILE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
