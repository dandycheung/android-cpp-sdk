/*================================================================================
  code generated by: java2cpp
  class: android.net.wifi.WifiInfo
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_WIFI_WIFIINFO_HPP_DECL
#define J2CPP_ANDROID_NET_WIFI_WIFIINFO_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace net { namespace wifi { class SupplicantState; } } } }
namespace j2cpp { namespace android { namespace net { namespace NetworkInfo_ { class DetailedState; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }


#include <android/net/NetworkInfo.hpp>
#include <android/net/wifi/SupplicantState.hpp>
#include <android/os/Parcel.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace net { namespace wifi {

	class WifiInfo;
	class WifiInfo
		: public cpp_object<WifiInfo>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_FIELD(0)

		WifiInfo(jobject jobj)
		: cpp_object<WifiInfo>(jobj)
		{
		}

		local_ref< java::lang::String > getSSID();
		local_ref< java::lang::String > getBSSID();
		cpp_int getRssi();
		cpp_int getLinkSpeed();
		local_ref< java::lang::String > getMacAddress();
		cpp_int getNetworkId();
		local_ref< android::net::wifi::SupplicantState > getSupplicantState();
		cpp_int getIpAddress();
		cpp_boolean getHiddenSSID();
		static local_ref< android::net::NetworkInfo_::DetailedState > getDetailedStateOf(local_ref< android::net::wifi::SupplicantState > const&);
		local_ref< java::lang::String > toString();
		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > LINK_SPEED_UNITS;
	}; //class WifiInfo

} //namespace wifi
} //namespace net
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_WIFI_WIFIINFO_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_NET_WIFI_WIFIINFO_HPP_IMPL
#define J2CPP_ANDROID_NET_WIFI_WIFIINFO_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::net::wifi::WifiInfo > create< android::net::wifi::WifiInfo>()
{
	return local_ref< android::net::wifi::WifiInfo >(
		environment::get().get_jenv()->NewObject(
			get_class<android::net::wifi::WifiInfo::J2CPP_CLASS_NAME>(),
			get_method_id<android::net::wifi::WifiInfo::J2CPP_CLASS_NAME, android::net::wifi::WifiInfo::J2CPP_METHOD_NAME(0), android::net::wifi::WifiInfo::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > android::net::wifi::WifiInfo::getSSID()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::String > android::net::wifi::WifiInfo::getBSSID()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int android::net::wifi::WifiInfo::getRssi()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_int android::net::wifi::WifiInfo::getLinkSpeed()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::String > android::net::wifi::WifiInfo::getMacAddress()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_int android::net::wifi::WifiInfo::getNetworkId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< android::net::wifi::SupplicantState > android::net::wifi::WifiInfo::getSupplicantState()
{
	return local_ref< android::net::wifi::SupplicantState >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_int android::net::wifi::WifiInfo::getIpAddress()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_boolean android::net::wifi::WifiInfo::getHiddenSSID()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

local_ref< android::net::NetworkInfo_::DetailedState > android::net::wifi::WifiInfo::getDetailedStateOf(local_ref< android::net::wifi::SupplicantState > const &a0)
{
	return local_ref< android::net::NetworkInfo_::DetailedState >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::net::wifi::WifiInfo::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

cpp_int android::net::wifi::WifiInfo::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

void android::net::wifi::WifiInfo::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::net::wifi::WifiInfo::J2CPP_CLASS_NAME,
	android::net::wifi::WifiInfo::J2CPP_FIELD_NAME(0),
	android::net::wifi::WifiInfo::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> android::net::wifi::WifiInfo::LINK_SPEED_UNITS;


J2CPP_DEFINE_CLASS(android::net::wifi::WifiInfo,"android/net/wifi/WifiInfo")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,1,"getSSID","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,2,"getBSSID","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,3,"getRssi","()I")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,4,"getLinkSpeed","()I")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,5,"getMacAddress","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,6,"getNetworkId","()I")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,7,"getSupplicantState","()Landroid/net/wifi/SupplicantState;")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,8,"getIpAddress","()I")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,9,"getHiddenSSID","()Z")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,10,"getDetailedStateOf","(Landroid/net/wifi/SupplicantState;)Landroid/net/NetworkInfo$DetailedState;")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,11,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,12,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::net::wifi::WifiInfo,13,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_FIELD(android::net::wifi::WifiInfo,0,"LINK_SPEED_UNITS","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_NET_WIFI_WIFIINFO_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
