/*================================================================================
  code generated by: java2cpp
  class: android.os.StrictMode
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_STRICTMODE_HPP_DECL
#define J2CPP_ANDROID_OS_STRICTMODE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace os { namespace StrictMode_ { class ThreadPolicy; } } } }
namespace j2cpp { namespace android { namespace os { namespace StrictMode_ { namespace ThreadPolicy_ { class Builder; } } } } }
namespace j2cpp { namespace android { namespace os { namespace StrictMode_ { class VmPolicy; } } } }
namespace j2cpp { namespace android { namespace os { namespace StrictMode_ { namespace VmPolicy_ { class Builder; } } } } }


#include <android/os/StrictMode.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace os {

	class StrictMode;
	namespace StrictMode_ {

		class ThreadPolicy;
		namespace ThreadPolicy_ {

			class Builder;
			class Builder
				: public cpp_object<Builder>
			{
			public:

				J2CPP_DECLARE_CLASS

				J2CPP_DECLARE_METHOD(0)
				J2CPP_DECLARE_METHOD(1)
				J2CPP_DECLARE_METHOD(2)
				J2CPP_DECLARE_METHOD(3)
				J2CPP_DECLARE_METHOD(4)
				J2CPP_DECLARE_METHOD(5)
				J2CPP_DECLARE_METHOD(6)
				J2CPP_DECLARE_METHOD(7)
				J2CPP_DECLARE_METHOD(8)
				J2CPP_DECLARE_METHOD(9)
				J2CPP_DECLARE_METHOD(10)
				J2CPP_DECLARE_METHOD(11)
				J2CPP_DECLARE_METHOD(12)
				J2CPP_DECLARE_METHOD(13)
				J2CPP_DECLARE_METHOD(14)

				Builder(jobject jobj)
				: cpp_object<Builder>(jobj)
				{
				}

				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > detectAll();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > permitAll();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > detectNetwork();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > permitNetwork();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > detectDiskReads();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > permitDiskReads();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > detectDiskWrites();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > permitDiskWrites();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > penaltyDialog();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > penaltyDeath();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > penaltyLog();
				local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > penaltyDropBox();
				local_ref< android::os::StrictMode_::ThreadPolicy > build();
			}; //class Builder

		} //namespace ThreadPolicy_

		class ThreadPolicy
			: public cpp_object<ThreadPolicy>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)

			typedef ThreadPolicy_::Builder Builder;

			ThreadPolicy(jobject jobj)
			: cpp_object<ThreadPolicy>(jobj)
			{
			}

			local_ref< java::lang::String > toString();

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::StrictMode_::ThreadPolicy > > LAX;
		}; //class ThreadPolicy

		class VmPolicy;
		namespace VmPolicy_ {

			class Builder;
			class Builder
				: public cpp_object<Builder>
			{
			public:

				J2CPP_DECLARE_CLASS

				J2CPP_DECLARE_METHOD(0)
				J2CPP_DECLARE_METHOD(1)
				J2CPP_DECLARE_METHOD(2)
				J2CPP_DECLARE_METHOD(3)
				J2CPP_DECLARE_METHOD(4)
				J2CPP_DECLARE_METHOD(5)
				J2CPP_DECLARE_METHOD(6)

				Builder(jobject jobj)
				: cpp_object<Builder>(jobj)
				{
				}

				local_ref< android::os::StrictMode_::VmPolicy_::Builder > detectAll();
				local_ref< android::os::StrictMode_::VmPolicy_::Builder > detectLeakedSqlLiteObjects();
				local_ref< android::os::StrictMode_::VmPolicy_::Builder > penaltyDeath();
				local_ref< android::os::StrictMode_::VmPolicy_::Builder > penaltyLog();
				local_ref< android::os::StrictMode_::VmPolicy_::Builder > penaltyDropBox();
				local_ref< android::os::StrictMode_::VmPolicy > build();
			}; //class Builder

		} //namespace VmPolicy_

		class VmPolicy
			: public cpp_object<VmPolicy>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_FIELD(0)

			typedef VmPolicy_::Builder Builder;

			VmPolicy(jobject jobj)
			: cpp_object<VmPolicy>(jobj)
			{
			}

			local_ref< java::lang::String > toString();

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::os::StrictMode_::VmPolicy > > LAX;
		}; //class VmPolicy

	} //namespace StrictMode_

	class StrictMode
		: public cpp_object<StrictMode>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		typedef StrictMode_::ThreadPolicy ThreadPolicy;
		typedef StrictMode_::VmPolicy VmPolicy;

		StrictMode(jobject jobj)
		: cpp_object<StrictMode>(jobj)
		{
		}

		static void setThreadPolicy(local_ref< android::os::StrictMode_::ThreadPolicy > const&);
		static local_ref< android::os::StrictMode_::ThreadPolicy > getThreadPolicy();
		static local_ref< android::os::StrictMode_::ThreadPolicy > allowThreadDiskWrites();
		static local_ref< android::os::StrictMode_::ThreadPolicy > allowThreadDiskReads();
		static void setVmPolicy(local_ref< android::os::StrictMode_::VmPolicy > const&);
		static local_ref< android::os::StrictMode_::VmPolicy > getVmPolicy();
		static void enableDefaults();
	}; //class StrictMode

} //namespace os
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_STRICTMODE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_STRICTMODE_HPP_IMPL
#define J2CPP_ANDROID_OS_STRICTMODE_HPP_IMPL

namespace j2cpp {




template <>
local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > create< android::os::StrictMode_::ThreadPolicy_::Builder>()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_CLASS_NAME, android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_METHOD_NAME(0), android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > create< android::os::StrictMode_::ThreadPolicy_::Builder>(local_ref< android::os::StrictMode_::ThreadPolicy > const &a0)
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_CLASS_NAME, android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_METHOD_NAME(1), android::os::StrictMode_::ThreadPolicy_::Builder::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::detectAll()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::permitAll()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::detectNetwork()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::permitNetwork()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::detectDiskReads()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::permitDiskReads()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::detectDiskWrites()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::permitDiskWrites()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::penaltyDialog()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::penaltyDeath()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::penaltyLog()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy_::Builder > android::os::StrictMode_::ThreadPolicy_::Builder::penaltyDropBox()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy > android::os::StrictMode_::ThreadPolicy_::Builder::build()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::StrictMode_::ThreadPolicy_::Builder,"android/os/StrictMode$ThreadPolicy$Builder")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,1,"<init>","(Landroid/os/StrictMode$ThreadPolicy;)V")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,2,"detectAll","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,3,"permitAll","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,4,"detectNetwork","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,5,"permitNetwork","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,6,"detectDiskReads","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,7,"permitDiskReads","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,8,"detectDiskWrites","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,9,"permitDiskWrites","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,10,"penaltyDialog","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,11,"penaltyDeath","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,12,"penaltyLog","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,13,"penaltyDropBox","()Landroid/os/StrictMode$ThreadPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy_::Builder,14,"build","()Landroid/os/StrictMode$ThreadPolicy;")


template <>
local_ref< android::os::StrictMode_::ThreadPolicy > create< android::os::StrictMode_::ThreadPolicy>()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::StrictMode_::ThreadPolicy::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::StrictMode_::ThreadPolicy::J2CPP_CLASS_NAME, android::os::StrictMode_::ThreadPolicy::J2CPP_METHOD_NAME(0), android::os::StrictMode_::ThreadPolicy::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > android::os::StrictMode_::ThreadPolicy::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}


static_field<
	android::os::StrictMode_::ThreadPolicy::J2CPP_CLASS_NAME,
	android::os::StrictMode_::ThreadPolicy::J2CPP_FIELD_NAME(0),
	android::os::StrictMode_::ThreadPolicy::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::StrictMode_::ThreadPolicy >
> android::os::StrictMode_::ThreadPolicy::LAX;


J2CPP_DEFINE_CLASS(android::os::StrictMode_::ThreadPolicy,"android/os/StrictMode$ThreadPolicy")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy,1,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::ThreadPolicy,2,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::os::StrictMode_::ThreadPolicy,0,"LAX","Landroid/os/StrictMode$ThreadPolicy;")


template <>
local_ref< android::os::StrictMode_::VmPolicy_::Builder > create< android::os::StrictMode_::VmPolicy_::Builder>()
{
	return local_ref< android::os::StrictMode_::VmPolicy_::Builder >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::StrictMode_::VmPolicy_::Builder::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::StrictMode_::VmPolicy_::Builder::J2CPP_CLASS_NAME, android::os::StrictMode_::VmPolicy_::Builder::J2CPP_METHOD_NAME(0), android::os::StrictMode_::VmPolicy_::Builder::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy_::Builder > android::os::StrictMode_::VmPolicy_::Builder::detectAll()
{
	return local_ref< android::os::StrictMode_::VmPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy_::Builder > android::os::StrictMode_::VmPolicy_::Builder::detectLeakedSqlLiteObjects()
{
	return local_ref< android::os::StrictMode_::VmPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy_::Builder > android::os::StrictMode_::VmPolicy_::Builder::penaltyDeath()
{
	return local_ref< android::os::StrictMode_::VmPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy_::Builder > android::os::StrictMode_::VmPolicy_::Builder::penaltyLog()
{
	return local_ref< android::os::StrictMode_::VmPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy_::Builder > android::os::StrictMode_::VmPolicy_::Builder::penaltyDropBox()
{
	return local_ref< android::os::StrictMode_::VmPolicy_::Builder >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy > android::os::StrictMode_::VmPolicy_::Builder::build()
{
	return local_ref< android::os::StrictMode_::VmPolicy >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::StrictMode_::VmPolicy_::Builder,"android/os/StrictMode$VmPolicy$Builder")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,1,"detectAll","()Landroid/os/StrictMode$VmPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,2,"detectLeakedSqlLiteObjects","()Landroid/os/StrictMode$VmPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,3,"penaltyDeath","()Landroid/os/StrictMode$VmPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,4,"penaltyLog","()Landroid/os/StrictMode$VmPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,5,"penaltyDropBox","()Landroid/os/StrictMode$VmPolicy$Builder;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy_::Builder,6,"build","()Landroid/os/StrictMode$VmPolicy;")


template <>
local_ref< android::os::StrictMode_::VmPolicy > create< android::os::StrictMode_::VmPolicy>()
{
	return local_ref< android::os::StrictMode_::VmPolicy >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::StrictMode_::VmPolicy::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::StrictMode_::VmPolicy::J2CPP_CLASS_NAME, android::os::StrictMode_::VmPolicy::J2CPP_METHOD_NAME(0), android::os::StrictMode_::VmPolicy::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > android::os::StrictMode_::VmPolicy::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}


static_field<
	android::os::StrictMode_::VmPolicy::J2CPP_CLASS_NAME,
	android::os::StrictMode_::VmPolicy::J2CPP_FIELD_NAME(0),
	android::os::StrictMode_::VmPolicy::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::os::StrictMode_::VmPolicy >
> android::os::StrictMode_::VmPolicy::LAX;


J2CPP_DEFINE_CLASS(android::os::StrictMode_::VmPolicy,"android/os/StrictMode$VmPolicy")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy,1,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::os::StrictMode_::VmPolicy,2,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::os::StrictMode_::VmPolicy,0,"LAX","Landroid/os/StrictMode$VmPolicy;")


template <>
local_ref< android::os::StrictMode > create< android::os::StrictMode>()
{
	return local_ref< android::os::StrictMode >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::StrictMode::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::StrictMode::J2CPP_CLASS_NAME, android::os::StrictMode::J2CPP_METHOD_NAME(0), android::os::StrictMode::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::os::StrictMode::setThreadPolicy(local_ref< android::os::StrictMode_::ThreadPolicy > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy > android::os::StrictMode::getThreadPolicy()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy > android::os::StrictMode::allowThreadDiskWrites()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>()
		)
	);
}

local_ref< android::os::StrictMode_::ThreadPolicy > android::os::StrictMode::allowThreadDiskReads()
{
	return local_ref< android::os::StrictMode_::ThreadPolicy >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>()
		)
	);
}

void android::os::StrictMode::setVmPolicy(local_ref< android::os::StrictMode_::VmPolicy > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::os::StrictMode_::VmPolicy > android::os::StrictMode::getVmPolicy()
{
	return local_ref< android::os::StrictMode_::VmPolicy >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>()
		)
	);
}

void android::os::StrictMode::enableDefaults()
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::StrictMode,"android/os/StrictMode")
J2CPP_DEFINE_METHOD(android::os::StrictMode,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::StrictMode,1,"setThreadPolicy","(Landroid/os/StrictMode$ThreadPolicy;)V")
J2CPP_DEFINE_METHOD(android::os::StrictMode,2,"getThreadPolicy","()Landroid/os/StrictMode$ThreadPolicy;")
J2CPP_DEFINE_METHOD(android::os::StrictMode,3,"allowThreadDiskWrites","()Landroid/os/StrictMode$ThreadPolicy;")
J2CPP_DEFINE_METHOD(android::os::StrictMode,4,"allowThreadDiskReads","()Landroid/os/StrictMode$ThreadPolicy;")
J2CPP_DEFINE_METHOD(android::os::StrictMode,5,"setVmPolicy","(Landroid/os/StrictMode$VmPolicy;)V")
J2CPP_DEFINE_METHOD(android::os::StrictMode,6,"getVmPolicy","()Landroid/os/StrictMode$VmPolicy;")
J2CPP_DEFINE_METHOD(android::os::StrictMode,7,"enableDefaults","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_STRICTMODE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
