/*================================================================================
  code generated by: java2cpp
  class: android.os.RemoteCallbackList
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_REMOTECALLBACKLIST_HPP_DECL
#define J2CPP_ANDROID_OS_REMOTECALLBACKLIST_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace android { namespace os { class IInterface; } } }


#include <android/os/IInterface.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace os {

	class RemoteCallbackList;
	class RemoteCallbackList
		: public cpp_object<RemoteCallbackList>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		RemoteCallbackList(jobject jobj)
		: cpp_object<RemoteCallbackList>(jobj)
		{
		}

		cpp_boolean register(local_ref< android::os::IInterface > const&);
		cpp_boolean register(local_ref< android::os::IInterface > const&, local_ref< java::lang::Object > const&);
		cpp_boolean unregister(local_ref< android::os::IInterface > const&);
		void kill();
		void onCallbackDied(local_ref< android::os::IInterface > const&);
		void onCallbackDied(local_ref< android::os::IInterface > const&, local_ref< java::lang::Object > const&);
		cpp_int beginBroadcast();
		local_ref< android::os::IInterface > getBroadcastItem(cpp_int const&);
		local_ref< java::lang::Object > getBroadcastCookie(cpp_int const&);
		void finishBroadcast();
	}; //class RemoteCallbackList

} //namespace os
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_REMOTECALLBACKLIST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_OS_REMOTECALLBACKLIST_HPP_IMPL
#define J2CPP_ANDROID_OS_REMOTECALLBACKLIST_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::os::RemoteCallbackList > create< android::os::RemoteCallbackList>()
{
	return local_ref< android::os::RemoteCallbackList >(
		environment::get().get_jenv()->NewObject(
			get_class<android::os::RemoteCallbackList::J2CPP_CLASS_NAME>(),
			get_method_id<android::os::RemoteCallbackList::J2CPP_CLASS_NAME, android::os::RemoteCallbackList::J2CPP_METHOD_NAME(0), android::os::RemoteCallbackList::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean android::os::RemoteCallbackList::register(local_ref< android::os::IInterface > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::os::RemoteCallbackList::register(local_ref< android::os::IInterface > const &a0, local_ref< java::lang::Object > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::os::RemoteCallbackList::unregister(local_ref< android::os::IInterface > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::RemoteCallbackList::kill()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::os::RemoteCallbackList::onCallbackDied(local_ref< android::os::IInterface > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::RemoteCallbackList::onCallbackDied(local_ref< android::os::IInterface > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::os::RemoteCallbackList::beginBroadcast()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< android::os::IInterface > android::os::RemoteCallbackList::getBroadcastItem(cpp_int const &a0)
{
	return local_ref< android::os::IInterface >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > android::os::RemoteCallbackList::getBroadcastCookie(cpp_int const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

void android::os::RemoteCallbackList::finishBroadcast()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::os::RemoteCallbackList,"android/os/RemoteCallbackList")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,1,"register","(Landroid/os/IInterface;)Z")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,2,"register","(Landroid/os/IInterface;Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,3,"unregister","(Landroid/os/IInterface;)Z")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,4,"kill","()V")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,5,"onCallbackDied","(Landroid/os/IInterface;)V")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,6,"onCallbackDied","(Landroid/os/IInterface;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,7,"beginBroadcast","()I")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,8,"getBroadcastItem","(I)Landroid/os/IInterface;")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,9,"getBroadcastCookie","(I)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(android::os::RemoteCallbackList,10,"finishBroadcast","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_OS_REMOTECALLBACKLIST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
