/*================================================================================
  code generated by: java2cpp
  class: android.graphics.drawable.StateListDrawable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_HPP_DECL


namespace j2cpp { namespace android { namespace content { namespace res { class Resources; } } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace graphics { namespace drawable { class Drawable; } } } }
namespace j2cpp { namespace org { namespace xmlpull { namespace v1 { class XmlPullParser; } } } }


#include <android/content/res/Resources.hpp>
#include <android/graphics/drawable/Drawable.hpp>
#include <android/util/AttributeSet.hpp>
#include <org/xmlpull/v1/XmlPullParser.hpp>


namespace j2cpp {

namespace android { namespace graphics { namespace drawable {

	class StateListDrawable;
	class StateListDrawable
		: public cpp_object<StateListDrawable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		StateListDrawable(jobject jobj)
		: cpp_object<StateListDrawable>(jobj)
		{
		}

		void addState(local_ref< cpp_int_array<1> > const&, local_ref< android::graphics::drawable::Drawable > const&);
		cpp_boolean isStateful();
		void inflate(local_ref< android::content::res::Resources > const&, local_ref< org::xmlpull::v1::XmlPullParser > const&, local_ref< android::util::AttributeSet > const&);
		local_ref< android::graphics::drawable::Drawable > mutate();
	}; //class StateListDrawable

} //namespace drawable
} //namespace graphics
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::graphics::drawable::StateListDrawable > create< android::graphics::drawable::StateListDrawable>()
{
	return local_ref< android::graphics::drawable::StateListDrawable >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::drawable::StateListDrawable::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::drawable::StateListDrawable::J2CPP_CLASS_NAME, android::graphics::drawable::StateListDrawable::J2CPP_METHOD_NAME(0), android::graphics::drawable::StateListDrawable::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::graphics::drawable::StateListDrawable::addState(local_ref< cpp_int_array<1> > const &a0, local_ref< android::graphics::drawable::Drawable > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::graphics::drawable::StateListDrawable::isStateful()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


void android::graphics::drawable::StateListDrawable::inflate(local_ref< android::content::res::Resources > const &a0, local_ref< org::xmlpull::v1::XmlPullParser > const &a1, local_ref< android::util::AttributeSet > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< android::graphics::drawable::Drawable > android::graphics::drawable::StateListDrawable::mutate()
{
	return local_ref< android::graphics::drawable::Drawable >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::graphics::drawable::StateListDrawable,"android/graphics/drawable/StateListDrawable")
J2CPP_DEFINE_METHOD(android::graphics::drawable::StateListDrawable,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::StateListDrawable,1,"addState","([ILandroid/graphics/drawable/Drawable;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::StateListDrawable,2,"isStateful","()Z")
J2CPP_DEFINE_METHOD(android::graphics::drawable::StateListDrawable,3,"onStateChange","([I)Z")
J2CPP_DEFINE_METHOD(android::graphics::drawable::StateListDrawable,4,"inflate","(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::graphics::drawable::StateListDrawable,5,"mutate","()Landroid/graphics/drawable/Drawable;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
