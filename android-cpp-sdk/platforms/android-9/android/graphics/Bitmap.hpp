/*================================================================================
  code generated by: java2cpp
  class: android.graphics.Bitmap
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_BITMAP_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_BITMAP_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace nio { class Buffer; } } }
namespace j2cpp { namespace java { namespace io { class OutputStream; } } }
namespace j2cpp { namespace android { namespace util { class DisplayMetrics; } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace graphics { class Canvas; } } }
namespace j2cpp { namespace android { namespace graphics { class Paint; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Bitmap_ { class CompressFormat; } } } }
namespace j2cpp { namespace android { namespace graphics { class Matrix; } } }
namespace j2cpp { namespace android { namespace graphics { namespace Bitmap_ { class Config; } } } }


#include <android/graphics/Bitmap.hpp>
#include <android/graphics/Canvas.hpp>
#include <android/graphics/Matrix.hpp>
#include <android/graphics/Paint.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <android/util/DisplayMetrics.hpp>
#include <java/io/OutputStream.hpp>
#include <java/lang/String.hpp>
#include <java/nio/Buffer.hpp>


namespace j2cpp {

namespace android { namespace graphics {

	class Bitmap;
	namespace Bitmap_ {

		class CompressFormat;
		class CompressFormat
			: public cpp_object<CompressFormat>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)

			CompressFormat(jobject jobj)
			: cpp_object<CompressFormat>(jobj)
			{
			}

			static local_ref< cpp_object_array<android::graphics::Bitmap_::CompressFormat, 1> > values();
			static local_ref< android::graphics::Bitmap_::CompressFormat > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Bitmap_::CompressFormat > > JPEG;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Bitmap_::CompressFormat > > PNG;
		}; //class CompressFormat

		class Config;
		class Config
			: public cpp_object<Config>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			Config(jobject jobj)
			: cpp_object<Config>(jobj)
			{
			}

			static local_ref< cpp_object_array<android::graphics::Bitmap_::Config, 1> > values();
			static local_ref< android::graphics::Bitmap_::Config > valueOf(local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::graphics::Bitmap_::Config > > ALPHA_8;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::graphics::Bitmap_::Config > > ARGB_4444;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::graphics::Bitmap_::Config > > ARGB_8888;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), local_ref< android::graphics::Bitmap_::Config > > RGB_565;
		}; //class Config

	} //namespace Bitmap_

	class Bitmap
		: public cpp_object<Bitmap>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)

		typedef Bitmap_::CompressFormat CompressFormat;
		typedef Bitmap_::Config Config;

		Bitmap(jobject jobj)
		: cpp_object<Bitmap>(jobj)
		{
		}

		cpp_int getDensity();
		void setDensity(cpp_int const&);
		void recycle();
		cpp_boolean isRecycled();
		void copyPixelsToBuffer(local_ref< java::nio::Buffer > const&);
		void copyPixelsFromBuffer(local_ref< java::nio::Buffer > const&);
		local_ref< android::graphics::Bitmap > copy(local_ref< android::graphics::Bitmap_::Config > const&, cpp_boolean const&);
		static local_ref< android::graphics::Bitmap > createScaledBitmap(local_ref< android::graphics::Bitmap > const&, cpp_int const&, cpp_int const&, cpp_boolean const&);
		static local_ref< android::graphics::Bitmap > createBitmap(local_ref< android::graphics::Bitmap > const&);
		static local_ref< android::graphics::Bitmap > createBitmap(local_ref< android::graphics::Bitmap > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		static local_ref< android::graphics::Bitmap > createBitmap(local_ref< android::graphics::Bitmap > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Matrix > const&, cpp_boolean const&);
		static local_ref< android::graphics::Bitmap > createBitmap(cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap_::Config > const&);
		static local_ref< android::graphics::Bitmap > createBitmap(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap_::Config > const&);
		static local_ref< android::graphics::Bitmap > createBitmap(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< android::graphics::Bitmap_::Config > const&);
		local_ref< cpp_byte_array<1> > getNinePatchChunk();
		cpp_boolean compress(local_ref< android::graphics::Bitmap_::CompressFormat > const&, cpp_int const&, local_ref< java::io::OutputStream > const&);
		cpp_boolean isMutable();
		cpp_int getWidth();
		cpp_int getHeight();
		cpp_int getScaledWidth(local_ref< android::graphics::Canvas > const&);
		cpp_int getScaledHeight(local_ref< android::graphics::Canvas > const&);
		cpp_int getScaledWidth(local_ref< android::util::DisplayMetrics > const&);
		cpp_int getScaledHeight(local_ref< android::util::DisplayMetrics > const&);
		cpp_int getScaledWidth(cpp_int const&);
		cpp_int getScaledHeight(cpp_int const&);
		cpp_int getRowBytes();
		local_ref< android::graphics::Bitmap_::Config > getConfig();
		cpp_boolean hasAlpha();
		void eraseColor(cpp_int const&);
		cpp_int getPixel(cpp_int const&, cpp_int const&);
		void getPixels(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void setPixel(cpp_int const&, cpp_int const&, cpp_int const&);
		void setPixels(local_ref< cpp_int_array<1> > const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);
		local_ref< android::graphics::Bitmap > extractAlpha();
		local_ref< android::graphics::Bitmap > extractAlpha(local_ref< android::graphics::Paint > const&, local_ref< cpp_int_array<1> > const&);
		void prepareToDraw();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > DENSITY_NONE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class Bitmap

} //namespace graphics
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_BITMAP_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_BITMAP_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_BITMAP_HPP_IMPL

namespace j2cpp {



local_ref< cpp_object_array<android::graphics::Bitmap_::CompressFormat, 1> > android::graphics::Bitmap_::CompressFormat::values()
{
	return local_ref< cpp_object_array<android::graphics::Bitmap_::CompressFormat, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< android::graphics::Bitmap_::CompressFormat > android::graphics::Bitmap_::CompressFormat::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::graphics::Bitmap_::CompressFormat >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::Bitmap_::CompressFormat > create< android::graphics::Bitmap_::CompressFormat>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< android::graphics::Bitmap_::CompressFormat >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Bitmap_::CompressFormat::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Bitmap_::CompressFormat::J2CPP_CLASS_NAME, android::graphics::Bitmap_::CompressFormat::J2CPP_METHOD_NAME(2), android::graphics::Bitmap_::CompressFormat::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::graphics::Bitmap_::CompressFormat::J2CPP_CLASS_NAME,
	android::graphics::Bitmap_::CompressFormat::J2CPP_FIELD_NAME(0),
	android::graphics::Bitmap_::CompressFormat::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Bitmap_::CompressFormat >
> android::graphics::Bitmap_::CompressFormat::JPEG;

static_field<
	android::graphics::Bitmap_::CompressFormat::J2CPP_CLASS_NAME,
	android::graphics::Bitmap_::CompressFormat::J2CPP_FIELD_NAME(1),
	android::graphics::Bitmap_::CompressFormat::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Bitmap_::CompressFormat >
> android::graphics::Bitmap_::CompressFormat::PNG;


J2CPP_DEFINE_CLASS(android::graphics::Bitmap_::CompressFormat,"android/graphics/Bitmap$CompressFormat")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::CompressFormat,0,"values","()[android.graphics.Bitmap.CompressFormat")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::CompressFormat,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Bitmap$CompressFormat;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::CompressFormat,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::CompressFormat,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::CompressFormat,0,"JPEG","Landroid/graphics/Bitmap$CompressFormat;")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::CompressFormat,1,"PNG","Landroid/graphics/Bitmap$CompressFormat;")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::CompressFormat,2,"$VALUES","[android.graphics.Bitmap.CompressFormat")

local_ref< cpp_object_array<android::graphics::Bitmap_::Config, 1> > android::graphics::Bitmap_::Config::values()
{
	return local_ref< cpp_object_array<android::graphics::Bitmap_::Config, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), true>()
		)
	);
}

local_ref< android::graphics::Bitmap_::Config > android::graphics::Bitmap_::Config::valueOf(local_ref< java::lang::String > const &a0)
{
	return local_ref< android::graphics::Bitmap_::Config >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::Bitmap_::Config > create< android::graphics::Bitmap_::Config>(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< android::graphics::Bitmap_::Config >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Bitmap_::Config::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Bitmap_::Config::J2CPP_CLASS_NAME, android::graphics::Bitmap_::Config::J2CPP_METHOD_NAME(2), android::graphics::Bitmap_::Config::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::graphics::Bitmap_::Config::J2CPP_CLASS_NAME,
	android::graphics::Bitmap_::Config::J2CPP_FIELD_NAME(0),
	android::graphics::Bitmap_::Config::J2CPP_FIELD_SIGNATURE(0),
	local_ref< android::graphics::Bitmap_::Config >
> android::graphics::Bitmap_::Config::ALPHA_8;

static_field<
	android::graphics::Bitmap_::Config::J2CPP_CLASS_NAME,
	android::graphics::Bitmap_::Config::J2CPP_FIELD_NAME(1),
	android::graphics::Bitmap_::Config::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::graphics::Bitmap_::Config >
> android::graphics::Bitmap_::Config::ARGB_4444;

static_field<
	android::graphics::Bitmap_::Config::J2CPP_CLASS_NAME,
	android::graphics::Bitmap_::Config::J2CPP_FIELD_NAME(2),
	android::graphics::Bitmap_::Config::J2CPP_FIELD_SIGNATURE(2),
	local_ref< android::graphics::Bitmap_::Config >
> android::graphics::Bitmap_::Config::ARGB_8888;

static_field<
	android::graphics::Bitmap_::Config::J2CPP_CLASS_NAME,
	android::graphics::Bitmap_::Config::J2CPP_FIELD_NAME(3),
	android::graphics::Bitmap_::Config::J2CPP_FIELD_SIGNATURE(3),
	local_ref< android::graphics::Bitmap_::Config >
> android::graphics::Bitmap_::Config::RGB_565;


J2CPP_DEFINE_CLASS(android::graphics::Bitmap_::Config,"android/graphics/Bitmap$Config")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::Config,0,"values","()[android.graphics.Bitmap.Config")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::Config,1,"valueOf","(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::Config,2,"<init>","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap_::Config,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::Config,0,"ALPHA_8","Landroid/graphics/Bitmap$Config;")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::Config,1,"ARGB_4444","Landroid/graphics/Bitmap$Config;")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::Config,2,"ARGB_8888","Landroid/graphics/Bitmap$Config;")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::Config,3,"RGB_565","Landroid/graphics/Bitmap$Config;")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap_::Config,4,"$VALUES","[android.graphics.Bitmap.Config")


template <>
local_ref< android::graphics::Bitmap > create< android::graphics::Bitmap>()
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::Bitmap::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::Bitmap::J2CPP_CLASS_NAME, android::graphics::Bitmap::J2CPP_METHOD_NAME(0), android::graphics::Bitmap::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_int android::graphics::Bitmap::getDensity()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::graphics::Bitmap::setDensity(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Bitmap::recycle()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_boolean android::graphics::Bitmap::isRecycled()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::graphics::Bitmap::copyPixelsToBuffer(local_ref< java::nio::Buffer > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::Bitmap::copyPixelsFromBuffer(local_ref< java::nio::Buffer > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::copy(local_ref< android::graphics::Bitmap_::Config > const &a0, cpp_boolean const &a1)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createScaledBitmap(local_ref< android::graphics::Bitmap > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_boolean const &a3)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createBitmap(local_ref< android::graphics::Bitmap > const &a0)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createBitmap(local_ref< android::graphics::Bitmap > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createBitmap(local_ref< android::graphics::Bitmap > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, local_ref< android::graphics::Matrix > const &a5, cpp_boolean const &a6)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createBitmap(cpp_int const &a0, cpp_int const &a1, local_ref< android::graphics::Bitmap_::Config > const &a2)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createBitmap(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, local_ref< android::graphics::Bitmap_::Config > const &a5)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::createBitmap(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< android::graphics::Bitmap_::Config > const &a3)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > android::graphics::Bitmap::getNinePatchChunk()
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

cpp_boolean android::graphics::Bitmap::compress(local_ref< android::graphics::Bitmap_::CompressFormat > const &a0, cpp_int const &a1, local_ref< java::io::OutputStream > const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::graphics::Bitmap::isMutable()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_int android::graphics::Bitmap::getWidth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_int android::graphics::Bitmap::getHeight()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

cpp_int android::graphics::Bitmap::getScaledWidth(local_ref< android::graphics::Canvas > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getScaledHeight(local_ref< android::graphics::Canvas > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getScaledWidth(local_ref< android::util::DisplayMetrics > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getScaledHeight(local_ref< android::util::DisplayMetrics > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getScaledWidth(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getScaledHeight(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getRowBytes()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>()
		)
	);
}

local_ref< android::graphics::Bitmap_::Config > android::graphics::Bitmap::getConfig()
{
	return local_ref< android::graphics::Bitmap_::Config >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>()
		)
	);
}

cpp_boolean android::graphics::Bitmap::hasAlpha()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>()
		)
	);
}

void android::graphics::Bitmap::eraseColor(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::getPixel(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Bitmap::getPixels(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5, cpp_int const &a6)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}

void android::graphics::Bitmap::setPixel(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::graphics::Bitmap::setPixels(local_ref< cpp_int_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3, cpp_int const &a4, cpp_int const &a5, cpp_int const &a6)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype()
		)
	);
}

cpp_int android::graphics::Bitmap::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>()
		)
	);
}

void android::graphics::Bitmap::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::extractAlpha()
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>()
		)
	);
}

local_ref< android::graphics::Bitmap > android::graphics::Bitmap::extractAlpha(local_ref< android::graphics::Paint > const &a0, local_ref< cpp_int_array<1> > const &a1)
{
	return local_ref< android::graphics::Bitmap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::Bitmap::prepareToDraw()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>()
		)
	);
}



static_field<
	android::graphics::Bitmap::J2CPP_CLASS_NAME,
	android::graphics::Bitmap::J2CPP_FIELD_NAME(0),
	android::graphics::Bitmap::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::graphics::Bitmap::DENSITY_NONE;

static_field<
	android::graphics::Bitmap::J2CPP_CLASS_NAME,
	android::graphics::Bitmap::J2CPP_FIELD_NAME(1),
	android::graphics::Bitmap::J2CPP_FIELD_SIGNATURE(1),
	local_ref< android::os::Parcelable_::Creator >
> android::graphics::Bitmap::CREATOR;


J2CPP_DEFINE_CLASS(android::graphics::Bitmap,"android/graphics/Bitmap")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,1,"getDensity","()I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,2,"setDensity","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,3,"recycle","()V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,4,"isRecycled","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,5,"copyPixelsToBuffer","(Ljava/nio/Buffer;)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,6,"copyPixelsFromBuffer","(Ljava/nio/Buffer;)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,7,"copy","(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,8,"createScaledBitmap","(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,9,"createBitmap","(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,10,"createBitmap","(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,11,"createBitmap","(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,12,"createBitmap","(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,13,"createBitmap","([IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,14,"createBitmap","([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,15,"getNinePatchChunk","()[B")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,16,"compress","(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,17,"isMutable","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,18,"getWidth","()I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,19,"getHeight","()I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,20,"getScaledWidth","(Landroid/graphics/Canvas;)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,21,"getScaledHeight","(Landroid/graphics/Canvas;)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,22,"getScaledWidth","(Landroid/util/DisplayMetrics;)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,23,"getScaledHeight","(Landroid/util/DisplayMetrics;)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,24,"getScaledWidth","(I)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,25,"getScaledHeight","(I)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,26,"getRowBytes","()I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,27,"getConfig","()Landroid/graphics/Bitmap$Config;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,28,"hasAlpha","()Z")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,29,"eraseColor","(I)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,30,"getPixel","(II)I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,31,"getPixels","([IIIIIII)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,32,"setPixel","(III)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,33,"setPixels","([IIIIIII)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,34,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,35,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,36,"extractAlpha","()Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,37,"extractAlpha","(Landroid/graphics/Paint;[I)Landroid/graphics/Bitmap;")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,38,"prepareToDraw","()V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,39,"finalize","()V")
J2CPP_DEFINE_METHOD(android::graphics::Bitmap,40,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap,0,"DENSITY_NONE","I")
J2CPP_DEFINE_FIELD(android::graphics::Bitmap,1,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_BITMAP_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
