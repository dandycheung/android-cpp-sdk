/*================================================================================
  code generated by: java2cpp
  class: android.util.TimeUtils
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_TIMEUTILS_HPP_DECL
#define J2CPP_ANDROID_UTIL_TIMEUTILS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace util { class TimeZone; } } }


#include <java/lang/String.hpp>
#include <java/util/TimeZone.hpp>


namespace j2cpp {

namespace android { namespace util {

	class TimeUtils;
	class TimeUtils
		: public cpp_object<TimeUtils>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		TimeUtils(jobject jobj)
		: cpp_object<TimeUtils>(jobj)
		{
		}

		static local_ref< java::util::TimeZone > getTimeZone(cpp_int const&, cpp_boolean const&, cpp_long const&, local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > getTimeZoneDatabaseVersion();
	}; //class TimeUtils

} //namespace util
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_TIMEUTILS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_TIMEUTILS_HPP_IMPL
#define J2CPP_ANDROID_UTIL_TIMEUTILS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::util::TimeUtils > create< android::util::TimeUtils>()
{
	return local_ref< android::util::TimeUtils >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::TimeUtils::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::TimeUtils::J2CPP_CLASS_NAME, android::util::TimeUtils::J2CPP_METHOD_NAME(0), android::util::TimeUtils::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::util::TimeZone > android::util::TimeUtils::getTimeZone(cpp_int const &a0, cpp_boolean const &a1, cpp_long const &a2, local_ref< java::lang::String > const &a3)
{
	return local_ref< java::util::TimeZone >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::util::TimeUtils::getTimeZoneDatabaseVersion()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::util::TimeUtils,"android/util/TimeUtils")
J2CPP_DEFINE_METHOD(android::util::TimeUtils,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::TimeUtils,1,"getTimeZone","(IZJLjava/lang/String;)Ljava/util/TimeZone;")
J2CPP_DEFINE_METHOD(android::util::TimeUtils,2,"getTimeZoneDatabaseVersion","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_TIMEUTILS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
