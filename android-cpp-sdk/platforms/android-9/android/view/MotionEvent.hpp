/*================================================================================
  code generated by: java2cpp
  class: android.view.MotionEvent
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_MOTIONEVENT_HPP_DECL
#define J2CPP_ANDROID_VIEW_MOTIONEVENT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace android { namespace view { namespace MotionEvent_ { class PointerCoords; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }


#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <android/view/MotionEvent.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace view {

	class MotionEvent;
	namespace MotionEvent_ {

		class PointerCoords;
		class PointerCoords
			: public cpp_object<PointerCoords>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)
			J2CPP_DECLARE_FIELD(6)
			J2CPP_DECLARE_FIELD(7)
			J2CPP_DECLARE_FIELD(8)

			PointerCoords(jobject jobj)
			: cpp_object<PointerCoords>(jobj)
			, x(jobj)
			, y(jobj)
			, pressure(jobj)
			, size(jobj)
			, touchMajor(jobj)
			, touchMinor(jobj)
			, toolMajor(jobj)
			, toolMinor(jobj)
			, orientation(jobj)
			{
			}


			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_float > x;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_float > y;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_float > pressure;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_float > size;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_float > touchMajor;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_float > touchMinor;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), cpp_float > toolMajor;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), cpp_float > toolMinor;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), cpp_float > orientation;
		}; //class PointerCoords

	} //namespace MotionEvent_

	class MotionEvent
		: public cpp_object<MotionEvent>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)
		J2CPP_DECLARE_FIELD(8)
		J2CPP_DECLARE_FIELD(9)
		J2CPP_DECLARE_FIELD(10)
		J2CPP_DECLARE_FIELD(11)
		J2CPP_DECLARE_FIELD(12)
		J2CPP_DECLARE_FIELD(13)
		J2CPP_DECLARE_FIELD(14)
		J2CPP_DECLARE_FIELD(15)
		J2CPP_DECLARE_FIELD(16)
		J2CPP_DECLARE_FIELD(17)
		J2CPP_DECLARE_FIELD(18)
		J2CPP_DECLARE_FIELD(19)
		J2CPP_DECLARE_FIELD(20)
		J2CPP_DECLARE_FIELD(21)
		J2CPP_DECLARE_FIELD(22)
		J2CPP_DECLARE_FIELD(23)

		typedef MotionEvent_::PointerCoords PointerCoords;

		MotionEvent(jobject jobj)
		: cpp_object<MotionEvent>(jobj)
		{
		}

		static local_ref< android::view::MotionEvent > obtain(cpp_long const&, cpp_long const&, cpp_int const&, cpp_int const&, local_ref< cpp_int_array<1> > const&, local_ref< cpp_object_array<android::view::MotionEvent_::PointerCoords, 1> > const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		static local_ref< android::view::MotionEvent > obtain(cpp_long const&, cpp_long const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_int const&);
		static local_ref< android::view::MotionEvent > obtain(cpp_long const&, cpp_long const&, cpp_int const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_int const&, cpp_int const&);
		static local_ref< android::view::MotionEvent > obtain(cpp_long const&, cpp_long const&, cpp_int const&, cpp_float const&, cpp_float const&, cpp_int const&);
		static local_ref< android::view::MotionEvent > obtain(local_ref< android::view::MotionEvent > const&);
		static local_ref< android::view::MotionEvent > obtainNoHistory(local_ref< android::view::MotionEvent > const&);
		void recycle();
		cpp_int getAction();
		cpp_int getActionMasked();
		cpp_int getActionIndex();
		cpp_int getFlags();
		cpp_long getDownTime();
		cpp_long getEventTime();
		cpp_float getX();
		cpp_float getY();
		cpp_float getPressure();
		cpp_float getSize();
		cpp_float getTouchMajor();
		cpp_float getTouchMinor();
		cpp_float getToolMajor();
		cpp_float getToolMinor();
		cpp_float getOrientation();
		cpp_int getPointerCount();
		cpp_int getPointerId(cpp_int const&);
		cpp_int findPointerIndex(cpp_int const&);
		cpp_float getX(cpp_int const&);
		cpp_float getY(cpp_int const&);
		cpp_float getPressure(cpp_int const&);
		cpp_float getSize(cpp_int const&);
		cpp_float getTouchMajor(cpp_int const&);
		cpp_float getTouchMinor(cpp_int const&);
		cpp_float getToolMajor(cpp_int const&);
		cpp_float getToolMinor(cpp_int const&);
		cpp_float getOrientation(cpp_int const&);
		void getPointerCoords(cpp_int const&, local_ref< android::view::MotionEvent_::PointerCoords > const&);
		cpp_int getMetaState();
		cpp_float getRawX();
		cpp_float getRawY();
		cpp_float getXPrecision();
		cpp_float getYPrecision();
		cpp_int getHistorySize();
		cpp_long getHistoricalEventTime(cpp_int const&);
		cpp_float getHistoricalX(cpp_int const&);
		cpp_float getHistoricalY(cpp_int const&);
		cpp_float getHistoricalPressure(cpp_int const&);
		cpp_float getHistoricalSize(cpp_int const&);
		cpp_float getHistoricalTouchMajor(cpp_int const&);
		cpp_float getHistoricalTouchMinor(cpp_int const&);
		cpp_float getHistoricalToolMajor(cpp_int const&);
		cpp_float getHistoricalToolMinor(cpp_int const&);
		cpp_float getHistoricalOrientation(cpp_int const&);
		cpp_float getHistoricalX(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalY(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalPressure(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalSize(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalTouchMajor(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalTouchMinor(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalToolMajor(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalToolMinor(cpp_int const&, cpp_int const&);
		cpp_float getHistoricalOrientation(cpp_int const&, cpp_int const&);
		void getHistoricalPointerCoords(cpp_int const&, cpp_int const&, local_ref< android::view::MotionEvent_::PointerCoords > const&);
		cpp_int getEdgeFlags();
		void setEdgeFlags(cpp_int const&);
		void setAction(cpp_int const&);
		void offsetLocation(cpp_float const&, cpp_float const&);
		void setLocation(cpp_float const&, cpp_float const&);
		void addBatch(cpp_long const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&, cpp_int const&);
		void addBatch(cpp_long const&, local_ref< cpp_object_array<android::view::MotionEvent_::PointerCoords, 1> > const&, cpp_int const&);
		local_ref< java::lang::String > toString();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > ACTION_MASK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > ACTION_DOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > ACTION_UP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > ACTION_MOVE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > ACTION_CANCEL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > ACTION_OUTSIDE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), cpp_int > ACTION_POINTER_DOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), cpp_int > ACTION_POINTER_UP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(8), J2CPP_FIELD_SIGNATURE(8), cpp_int > ACTION_POINTER_INDEX_MASK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(9), J2CPP_FIELD_SIGNATURE(9), cpp_int > ACTION_POINTER_INDEX_SHIFT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(10), J2CPP_FIELD_SIGNATURE(10), cpp_int > ACTION_POINTER_1_DOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(11), J2CPP_FIELD_SIGNATURE(11), cpp_int > ACTION_POINTER_2_DOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(12), J2CPP_FIELD_SIGNATURE(12), cpp_int > ACTION_POINTER_3_DOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(13), J2CPP_FIELD_SIGNATURE(13), cpp_int > ACTION_POINTER_1_UP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(14), J2CPP_FIELD_SIGNATURE(14), cpp_int > ACTION_POINTER_2_UP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(15), J2CPP_FIELD_SIGNATURE(15), cpp_int > ACTION_POINTER_3_UP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(16), J2CPP_FIELD_SIGNATURE(16), cpp_int > ACTION_POINTER_ID_MASK;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(17), J2CPP_FIELD_SIGNATURE(17), cpp_int > ACTION_POINTER_ID_SHIFT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(18), J2CPP_FIELD_SIGNATURE(18), cpp_int > FLAG_WINDOW_IS_OBSCURED;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(19), J2CPP_FIELD_SIGNATURE(19), cpp_int > EDGE_TOP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(20), J2CPP_FIELD_SIGNATURE(20), cpp_int > EDGE_BOTTOM;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(21), J2CPP_FIELD_SIGNATURE(21), cpp_int > EDGE_LEFT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(22), J2CPP_FIELD_SIGNATURE(22), cpp_int > EDGE_RIGHT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(23), J2CPP_FIELD_SIGNATURE(23), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class MotionEvent

} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_MOTIONEVENT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_MOTIONEVENT_HPP_IMPL
#define J2CPP_ANDROID_VIEW_MOTIONEVENT_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::view::MotionEvent_::PointerCoords > create< android::view::MotionEvent_::PointerCoords>()
{
	return local_ref< android::view::MotionEvent_::PointerCoords >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::MotionEvent_::PointerCoords::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::MotionEvent_::PointerCoords::J2CPP_CLASS_NAME, android::view::MotionEvent_::PointerCoords::J2CPP_METHOD_NAME(0), android::view::MotionEvent_::PointerCoords::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}



J2CPP_DEFINE_CLASS(android::view::MotionEvent_::PointerCoords,"android/view/MotionEvent$PointerCoords")
J2CPP_DEFINE_METHOD(android::view::MotionEvent_::PointerCoords,0,"<init>","()V")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,0,"x","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,1,"y","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,2,"pressure","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,3,"size","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,4,"touchMajor","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,5,"touchMinor","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,6,"toolMajor","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,7,"toolMinor","F")
J2CPP_DEFINE_FIELD(android::view::MotionEvent_::PointerCoords,8,"orientation","F")


template <>
local_ref< android::view::MotionEvent > create< android::view::MotionEvent>()
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::MotionEvent::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::MotionEvent::J2CPP_CLASS_NAME, android::view::MotionEvent::J2CPP_METHOD_NAME(0), android::view::MotionEvent::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< android::view::MotionEvent > android::view::MotionEvent::obtain(cpp_long const &a0, cpp_long const &a1, cpp_int const &a2, cpp_int const &a3, local_ref< cpp_int_array<1> > const &a4, local_ref< cpp_object_array<android::view::MotionEvent_::PointerCoords, 1> > const &a5, cpp_int const &a6, cpp_float const &a7, cpp_float const &a8, cpp_int const &a9, cpp_int const &a10, cpp_int const &a11, cpp_int const &a12)
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype(), a11.get_jtype(), a12.get_jtype()
		)
	);
}

local_ref< android::view::MotionEvent > android::view::MotionEvent::obtain(cpp_long const &a0, cpp_long const &a1, cpp_int const &a2, cpp_float const &a3, cpp_float const &a4, cpp_float const &a5, cpp_float const &a6, cpp_int const &a7, cpp_float const &a8, cpp_float const &a9, cpp_int const &a10, cpp_int const &a11)
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype(), a11.get_jtype()
		)
	);
}

local_ref< android::view::MotionEvent > android::view::MotionEvent::obtain(cpp_long const &a0, cpp_long const &a1, cpp_int const &a2, cpp_int const &a3, cpp_float const &a4, cpp_float const &a5, cpp_float const &a6, cpp_float const &a7, cpp_int const &a8, cpp_float const &a9, cpp_float const &a10, cpp_int const &a11, cpp_int const &a12)
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype(), a6.get_jtype(), a7.get_jtype(), a8.get_jtype(), a9.get_jtype(), a10.get_jtype(), a11.get_jtype(), a12.get_jtype()
		)
	);
}

local_ref< android::view::MotionEvent > android::view::MotionEvent::obtain(cpp_long const &a0, cpp_long const &a1, cpp_int const &a2, cpp_float const &a3, cpp_float const &a4, cpp_int const &a5)
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

local_ref< android::view::MotionEvent > android::view::MotionEvent::obtain(local_ref< android::view::MotionEvent > const &a0)
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::view::MotionEvent > android::view::MotionEvent::obtainNoHistory(local_ref< android::view::MotionEvent > const &a0)
{
	return local_ref< android::view::MotionEvent >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}

void android::view::MotionEvent::recycle()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getAction()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getActionMasked()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getActionIndex()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getFlags()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

cpp_long android::view::MotionEvent::getDownTime()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_long android::view::MotionEvent::getEventTime()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getX()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getY()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getPressure()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getSize()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getTouchMajor()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getTouchMinor()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getToolMajor()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getToolMinor()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getOrientation()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getPointerCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getPointerId(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::view::MotionEvent::findPointerIndex(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getX(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getY(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getPressure(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getSize(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getTouchMajor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getTouchMinor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getToolMajor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getToolMinor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getOrientation(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::MotionEvent::getPointerCoords(cpp_int const &a0, local_ref< android::view::MotionEvent_::PointerCoords > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::view::MotionEvent::getMetaState()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getRawX()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getRawY()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getXPrecision()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), false>()
		)
	);
}

cpp_float android::view::MotionEvent::getYPrecision()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(40), J2CPP_METHOD_SIGNATURE(40), false>()
		)
	);
}

cpp_int android::view::MotionEvent::getHistorySize()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(41), J2CPP_METHOD_SIGNATURE(41), false>()
		)
	);
}

cpp_long android::view::MotionEvent::getHistoricalEventTime(cpp_int const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(42), J2CPP_METHOD_SIGNATURE(42), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalX(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(43), J2CPP_METHOD_SIGNATURE(43), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalY(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(44), J2CPP_METHOD_SIGNATURE(44), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalPressure(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(45), J2CPP_METHOD_SIGNATURE(45), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalSize(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(46), J2CPP_METHOD_SIGNATURE(46), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalTouchMajor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(47), J2CPP_METHOD_SIGNATURE(47), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalTouchMinor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalToolMajor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalToolMinor(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalOrientation(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(51), J2CPP_METHOD_SIGNATURE(51), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalX(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(52), J2CPP_METHOD_SIGNATURE(52), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalY(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(53), J2CPP_METHOD_SIGNATURE(53), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalPressure(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalSize(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalTouchMajor(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalTouchMinor(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalToolMajor(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalToolMinor(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_float android::view::MotionEvent::getHistoricalOrientation(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(60), J2CPP_METHOD_SIGNATURE(60), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::MotionEvent::getHistoricalPointerCoords(cpp_int const &a0, cpp_int const &a1, local_ref< android::view::MotionEvent_::PointerCoords > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::view::MotionEvent::getEdgeFlags()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(62), J2CPP_METHOD_SIGNATURE(62), false>()
		)
	);
}

void android::view::MotionEvent::setEdgeFlags(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(63), J2CPP_METHOD_SIGNATURE(63), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::MotionEvent::setAction(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(64), J2CPP_METHOD_SIGNATURE(64), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::MotionEvent::offsetLocation(cpp_float const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(65), J2CPP_METHOD_SIGNATURE(65), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::MotionEvent::setLocation(cpp_float const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::MotionEvent::addBatch(cpp_long const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3, cpp_float const &a4, cpp_int const &a5)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::view::MotionEvent::addBatch(cpp_long const &a0, local_ref< cpp_object_array<android::view::MotionEvent_::PointerCoords, 1> > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::view::MotionEvent::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), false>()
		)
	);
}

void android::view::MotionEvent::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(0),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::view::MotionEvent::ACTION_MASK;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(1),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::view::MotionEvent::ACTION_DOWN;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(2),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::view::MotionEvent::ACTION_UP;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(3),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::view::MotionEvent::ACTION_MOVE;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(4),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::view::MotionEvent::ACTION_CANCEL;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(5),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(5),
	cpp_int
> android::view::MotionEvent::ACTION_OUTSIDE;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(6),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(6),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_DOWN;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(7),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(7),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_UP;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(8),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(8),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_INDEX_MASK;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(9),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(9),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_INDEX_SHIFT;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(10),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(10),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_1_DOWN;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(11),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(11),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_2_DOWN;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(12),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(12),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_3_DOWN;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(13),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(13),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_1_UP;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(14),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(14),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_2_UP;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(15),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(15),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_3_UP;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(16),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(16),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_ID_MASK;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(17),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(17),
	cpp_int
> android::view::MotionEvent::ACTION_POINTER_ID_SHIFT;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(18),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(18),
	cpp_int
> android::view::MotionEvent::FLAG_WINDOW_IS_OBSCURED;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(19),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(19),
	cpp_int
> android::view::MotionEvent::EDGE_TOP;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(20),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(20),
	cpp_int
> android::view::MotionEvent::EDGE_BOTTOM;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(21),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(21),
	cpp_int
> android::view::MotionEvent::EDGE_LEFT;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(22),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(22),
	cpp_int
> android::view::MotionEvent::EDGE_RIGHT;

static_field<
	android::view::MotionEvent::J2CPP_CLASS_NAME,
	android::view::MotionEvent::J2CPP_FIELD_NAME(23),
	android::view::MotionEvent::J2CPP_FIELD_SIGNATURE(23),
	local_ref< android::os::Parcelable_::Creator >
> android::view::MotionEvent::CREATOR;


J2CPP_DEFINE_CLASS(android::view::MotionEvent,"android/view/MotionEvent")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,1,"obtain","(JJII[I[android.view.MotionEvent.PointerCoordsIFFIIII)Landroid/view/MotionEvent;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,2,"obtain","(JJIFFFFIFFII)Landroid/view/MotionEvent;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,3,"obtain","(JJIIFFFFIFFII)Landroid/view/MotionEvent;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,4,"obtain","(JJIFFI)Landroid/view/MotionEvent;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,5,"obtain","(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,6,"obtainNoHistory","(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,7,"recycle","()V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,8,"getAction","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,9,"getActionMasked","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,10,"getActionIndex","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,11,"getFlags","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,12,"getDownTime","()J")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,13,"getEventTime","()J")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,14,"getX","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,15,"getY","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,16,"getPressure","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,17,"getSize","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,18,"getTouchMajor","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,19,"getTouchMinor","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,20,"getToolMajor","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,21,"getToolMinor","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,22,"getOrientation","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,23,"getPointerCount","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,24,"getPointerId","(I)I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,25,"findPointerIndex","(I)I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,26,"getX","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,27,"getY","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,28,"getPressure","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,29,"getSize","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,30,"getTouchMajor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,31,"getTouchMinor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,32,"getToolMajor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,33,"getToolMinor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,34,"getOrientation","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,35,"getPointerCoords","(ILandroid/view/MotionEvent$PointerCoords;)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,36,"getMetaState","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,37,"getRawX","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,38,"getRawY","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,39,"getXPrecision","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,40,"getYPrecision","()F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,41,"getHistorySize","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,42,"getHistoricalEventTime","(I)J")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,43,"getHistoricalX","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,44,"getHistoricalY","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,45,"getHistoricalPressure","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,46,"getHistoricalSize","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,47,"getHistoricalTouchMajor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,48,"getHistoricalTouchMinor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,49,"getHistoricalToolMajor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,50,"getHistoricalToolMinor","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,51,"getHistoricalOrientation","(I)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,52,"getHistoricalX","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,53,"getHistoricalY","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,54,"getHistoricalPressure","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,55,"getHistoricalSize","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,56,"getHistoricalTouchMajor","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,57,"getHistoricalTouchMinor","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,58,"getHistoricalToolMajor","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,59,"getHistoricalToolMinor","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,60,"getHistoricalOrientation","(II)F")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,61,"getHistoricalPointerCoords","(IILandroid/view/MotionEvent$PointerCoords;)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,62,"getEdgeFlags","()I")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,63,"setEdgeFlags","(I)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,64,"setAction","(I)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,65,"offsetLocation","(FF)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,66,"setLocation","(FF)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,67,"addBatch","(JFFFFI)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,68,"addBatch","(J[android.view.MotionEvent.PointerCoordsI)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,69,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,70,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::view::MotionEvent,71,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,0,"ACTION_MASK","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,1,"ACTION_DOWN","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,2,"ACTION_UP","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,3,"ACTION_MOVE","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,4,"ACTION_CANCEL","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,5,"ACTION_OUTSIDE","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,6,"ACTION_POINTER_DOWN","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,7,"ACTION_POINTER_UP","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,8,"ACTION_POINTER_INDEX_MASK","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,9,"ACTION_POINTER_INDEX_SHIFT","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,10,"ACTION_POINTER_1_DOWN","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,11,"ACTION_POINTER_2_DOWN","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,12,"ACTION_POINTER_3_DOWN","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,13,"ACTION_POINTER_1_UP","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,14,"ACTION_POINTER_2_UP","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,15,"ACTION_POINTER_3_UP","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,16,"ACTION_POINTER_ID_MASK","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,17,"ACTION_POINTER_ID_SHIFT","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,18,"FLAG_WINDOW_IS_OBSCURED","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,19,"EDGE_TOP","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,20,"EDGE_BOTTOM","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,21,"EDGE_LEFT","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,22,"EDGE_RIGHT","I")
J2CPP_DEFINE_FIELD(android::view::MotionEvent,23,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_MOTIONEVENT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
