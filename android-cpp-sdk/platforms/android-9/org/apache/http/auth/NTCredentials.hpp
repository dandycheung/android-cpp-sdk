/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.auth.NTCredentials
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_AUTH_NTCREDENTIALS_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_AUTH_NTCREDENTIALS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class Principal; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/security/Principal.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace auth {

	class NTCredentials;
	class NTCredentials
		: public cpp_object<NTCredentials>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		NTCredentials(jobject jobj)
		: cpp_object<NTCredentials>(jobj)
		{
		}

		local_ref< java::security::Principal > getUserPrincipal();
		local_ref< java::lang::String > getUserName();
		local_ref< java::lang::String > getPassword();
		local_ref< java::lang::String > getDomain();
		local_ref< java::lang::String > getWorkstation();
		cpp_int hashCode();
		cpp_boolean equals(local_ref< java::lang::Object > const&);
		local_ref< java::lang::String > toString();
	}; //class NTCredentials

} //namespace auth
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_AUTH_NTCREDENTIALS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_AUTH_NTCREDENTIALS_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_AUTH_NTCREDENTIALS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::apache::http::auth::NTCredentials > create< org::apache::http::auth::NTCredentials>(local_ref< java::lang::String > const &a0)
{
	return local_ref< org::apache::http::auth::NTCredentials >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::auth::NTCredentials::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::auth::NTCredentials::J2CPP_CLASS_NAME, org::apache::http::auth::NTCredentials::J2CPP_METHOD_NAME(0), org::apache::http::auth::NTCredentials::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< org::apache::http::auth::NTCredentials > create< org::apache::http::auth::NTCredentials>(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return local_ref< org::apache::http::auth::NTCredentials >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::auth::NTCredentials::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::auth::NTCredentials::J2CPP_CLASS_NAME, org::apache::http::auth::NTCredentials::J2CPP_METHOD_NAME(1), org::apache::http::auth::NTCredentials::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::security::Principal > org::apache::http::auth::NTCredentials::getUserPrincipal()
{
	return local_ref< java::security::Principal >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< java::lang::String > org::apache::http::auth::NTCredentials::getUserName()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

local_ref< java::lang::String > org::apache::http::auth::NTCredentials::getPassword()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::String > org::apache::http::auth::NTCredentials::getDomain()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< java::lang::String > org::apache::http::auth::NTCredentials::getWorkstation()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

cpp_int org::apache::http::auth::NTCredentials::hashCode()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_boolean org::apache::http::auth::NTCredentials::equals(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > org::apache::http::auth::NTCredentials::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::auth::NTCredentials,"org/apache/http/auth/NTCredentials")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,1,"<init>","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,2,"getUserPrincipal","()Ljava/security/Principal;")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,3,"getUserName","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,4,"getPassword","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,5,"getDomain","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,6,"getWorkstation","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,7,"hashCode","()I")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,8,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(org::apache::http::auth::NTCredentials,9,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_AUTH_NTCREDENTIALS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
