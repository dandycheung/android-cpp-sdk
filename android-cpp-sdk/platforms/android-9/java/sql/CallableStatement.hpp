/*================================================================================
  code generated by: java2cpp
  class: java.sql.CallableStatement
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_CALLABLESTATEMENT_HPP_DECL
#define J2CPP_JAVA_SQL_CALLABLESTATEMENT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace util { class Calendar; } } }
namespace j2cpp { namespace java { namespace sql { class Array; } } }
namespace j2cpp { namespace java { namespace sql { class Date; } } }
namespace j2cpp { namespace java { namespace sql { class Timestamp; } } }
namespace j2cpp { namespace java { namespace sql { class Clob; } } }
namespace j2cpp { namespace java { namespace sql { class Ref; } } }
namespace j2cpp { namespace java { namespace sql { class NClob; } } }
namespace j2cpp { namespace java { namespace sql { class Blob; } } }
namespace j2cpp { namespace java { namespace sql { class Time; } } }
namespace j2cpp { namespace java { namespace sql { class SQLXML; } } }
namespace j2cpp { namespace java { namespace sql { class RowId; } } }
namespace j2cpp { namespace java { namespace net { class URL; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }
namespace j2cpp { namespace java { namespace io { class Reader; } } }
namespace j2cpp { namespace java { namespace math { class BigDecimal; } } }


#include <java/io/InputStream.hpp>
#include <java/io/Reader.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/math/BigDecimal.hpp>
#include <java/net/URL.hpp>
#include <java/sql/Array.hpp>
#include <java/sql/Blob.hpp>
#include <java/sql/Clob.hpp>
#include <java/sql/Date.hpp>
#include <java/sql/NClob.hpp>
#include <java/sql/Ref.hpp>
#include <java/sql/RowId.hpp>
#include <java/sql/SQLXML.hpp>
#include <java/sql/Time.hpp>
#include <java/sql/Timestamp.hpp>
#include <java/util/Calendar.hpp>
#include <java/util/Map.hpp>


namespace j2cpp {

namespace java { namespace sql {

	class CallableStatement;
	class CallableStatement
		: public cpp_object<CallableStatement>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_METHOD(101)
		J2CPP_DECLARE_METHOD(102)
		J2CPP_DECLARE_METHOD(103)
		J2CPP_DECLARE_METHOD(104)
		J2CPP_DECLARE_METHOD(105)
		J2CPP_DECLARE_METHOD(106)
		J2CPP_DECLARE_METHOD(107)
		J2CPP_DECLARE_METHOD(108)
		J2CPP_DECLARE_METHOD(109)
		J2CPP_DECLARE_METHOD(110)

		CallableStatement(jobject jobj)
		: cpp_object<CallableStatement>(jobj)
		{
		}

		local_ref< java::sql::Array > getArray(cpp_int const&);
		local_ref< java::sql::Array > getArray(local_ref< java::lang::String > const&);
		local_ref< java::math::BigDecimal > getBigDecimal(cpp_int const&);
		local_ref< java::math::BigDecimal > getBigDecimal(cpp_int const&, cpp_int const&);
		local_ref< java::math::BigDecimal > getBigDecimal(local_ref< java::lang::String > const&);
		local_ref< java::sql::Blob > getBlob(cpp_int const&);
		local_ref< java::sql::Blob > getBlob(local_ref< java::lang::String > const&);
		cpp_boolean getBoolean(cpp_int const&);
		cpp_boolean getBoolean(local_ref< java::lang::String > const&);
		cpp_byte getByte(cpp_int const&);
		cpp_byte getByte(local_ref< java::lang::String > const&);
		local_ref< cpp_byte_array<1> > getBytes(cpp_int const&);
		local_ref< cpp_byte_array<1> > getBytes(local_ref< java::lang::String > const&);
		local_ref< java::sql::Clob > getClob(cpp_int const&);
		local_ref< java::sql::Clob > getClob(local_ref< java::lang::String > const&);
		local_ref< java::sql::Date > getDate(cpp_int const&);
		local_ref< java::sql::Date > getDate(cpp_int const&, local_ref< java::util::Calendar > const&);
		local_ref< java::sql::Date > getDate(local_ref< java::lang::String > const&);
		local_ref< java::sql::Date > getDate(local_ref< java::lang::String > const&, local_ref< java::util::Calendar > const&);
		cpp_double getDouble(cpp_int const&);
		cpp_double getDouble(local_ref< java::lang::String > const&);
		cpp_float getFloat(cpp_int const&);
		cpp_float getFloat(local_ref< java::lang::String > const&);
		cpp_int getInt(cpp_int const&);
		cpp_int getInt(local_ref< java::lang::String > const&);
		cpp_long getLong(cpp_int const&);
		cpp_long getLong(local_ref< java::lang::String > const&);
		local_ref< java::lang::Object > getObject(cpp_int const&);
		local_ref< java::lang::Object > getObject(cpp_int const&, local_ref< java::util::Map > const&);
		local_ref< java::lang::Object > getObject(local_ref< java::lang::String > const&);
		local_ref< java::lang::Object > getObject(local_ref< java::lang::String > const&, local_ref< java::util::Map > const&);
		local_ref< java::sql::Ref > getRef(cpp_int const&);
		local_ref< java::sql::Ref > getRef(local_ref< java::lang::String > const&);
		cpp_short getShort(cpp_int const&);
		cpp_short getShort(local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getString(cpp_int const&);
		local_ref< java::lang::String > getString(local_ref< java::lang::String > const&);
		local_ref< java::sql::Time > getTime(cpp_int const&);
		local_ref< java::sql::Time > getTime(cpp_int const&, local_ref< java::util::Calendar > const&);
		local_ref< java::sql::Time > getTime(local_ref< java::lang::String > const&);
		local_ref< java::sql::Time > getTime(local_ref< java::lang::String > const&, local_ref< java::util::Calendar > const&);
		local_ref< java::sql::Timestamp > getTimestamp(cpp_int const&);
		local_ref< java::sql::Timestamp > getTimestamp(cpp_int const&, local_ref< java::util::Calendar > const&);
		local_ref< java::sql::Timestamp > getTimestamp(local_ref< java::lang::String > const&);
		local_ref< java::sql::Timestamp > getTimestamp(local_ref< java::lang::String > const&, local_ref< java::util::Calendar > const&);
		local_ref< java::net::URL > getURL(cpp_int const&);
		local_ref< java::net::URL > getURL(local_ref< java::lang::String > const&);
		void registerOutParameter(cpp_int const&, cpp_int const&);
		void registerOutParameter(cpp_int const&, cpp_int const&, cpp_int const&);
		void registerOutParameter(cpp_int const&, cpp_int const&, local_ref< java::lang::String > const&);
		void registerOutParameter(local_ref< java::lang::String > const&, cpp_int const&);
		void registerOutParameter(local_ref< java::lang::String > const&, cpp_int const&, cpp_int const&);
		void registerOutParameter(local_ref< java::lang::String > const&, cpp_int const&, local_ref< java::lang::String > const&);
		void setAsciiStream(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&, cpp_int const&);
		void setBigDecimal(local_ref< java::lang::String > const&, local_ref< java::math::BigDecimal > const&);
		void setBinaryStream(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&, cpp_int const&);
		void setBoolean(local_ref< java::lang::String > const&, cpp_boolean const&);
		void setByte(local_ref< java::lang::String > const&, cpp_byte const&);
		void setBytes(local_ref< java::lang::String > const&, local_ref< cpp_byte_array<1> > const&);
		void setCharacterStream(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&, cpp_int const&);
		void setDate(local_ref< java::lang::String > const&, local_ref< java::sql::Date > const&);
		void setDate(local_ref< java::lang::String > const&, local_ref< java::sql::Date > const&, local_ref< java::util::Calendar > const&);
		void setDouble(local_ref< java::lang::String > const&, cpp_double const&);
		void setFloat(local_ref< java::lang::String > const&, cpp_float const&);
		void setInt(local_ref< java::lang::String > const&, cpp_int const&);
		void setLong(local_ref< java::lang::String > const&, cpp_long const&);
		void setNull(local_ref< java::lang::String > const&, cpp_int const&);
		void setNull(local_ref< java::lang::String > const&, cpp_int const&, local_ref< java::lang::String > const&);
		void setObject(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&);
		void setObject(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&, cpp_int const&);
		void setObject(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&, cpp_int const&, cpp_int const&);
		void setShort(local_ref< java::lang::String > const&, cpp_short const&);
		void setString(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void setTime(local_ref< java::lang::String > const&, local_ref< java::sql::Time > const&);
		void setTime(local_ref< java::lang::String > const&, local_ref< java::sql::Time > const&, local_ref< java::util::Calendar > const&);
		void setTimestamp(local_ref< java::lang::String > const&, local_ref< java::sql::Timestamp > const&);
		void setTimestamp(local_ref< java::lang::String > const&, local_ref< java::sql::Timestamp > const&, local_ref< java::util::Calendar > const&);
		void setURL(local_ref< java::lang::String > const&, local_ref< java::net::URL > const&);
		cpp_boolean wasNull();
		local_ref< java::sql::RowId > getRowId(cpp_int const&);
		local_ref< java::sql::RowId > getRowId(local_ref< java::lang::String > const&);
		void setRowId(local_ref< java::lang::String > const&, local_ref< java::sql::RowId > const&);
		void setNString(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void setNCharacterStream(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&, cpp_long const&);
		void setNClob(local_ref< java::lang::String > const&, local_ref< java::sql::NClob > const&);
		void setClob(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&, cpp_long const&);
		void setBlob(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&, cpp_long const&);
		void setNClob(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&, cpp_long const&);
		local_ref< java::sql::NClob > getNClob(cpp_int const&);
		local_ref< java::sql::NClob > getNClob(local_ref< java::lang::String > const&);
		void setSQLXML(local_ref< java::lang::String > const&, local_ref< java::sql::SQLXML > const&);
		local_ref< java::sql::SQLXML > getSQLXML(cpp_int const&);
		local_ref< java::sql::SQLXML > getSQLXML(local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getNString(cpp_int const&);
		local_ref< java::lang::String > getNString(local_ref< java::lang::String > const&);
		local_ref< java::io::Reader > getNCharacterStream(cpp_int const&);
		local_ref< java::io::Reader > getNCharacterStream(local_ref< java::lang::String > const&);
		local_ref< java::io::Reader > getCharacterStream(cpp_int const&);
		local_ref< java::io::Reader > getCharacterStream(local_ref< java::lang::String > const&);
		void setBlob(local_ref< java::lang::String > const&, local_ref< java::sql::Blob > const&);
		void setClob(local_ref< java::lang::String > const&, local_ref< java::sql::Clob > const&);
		void setAsciiStream(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&, cpp_long const&);
		void setAsciiStream(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&);
		void setBinaryStream(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&, cpp_long const&);
		void setBinaryStream(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&);
		void setCharacterStream(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&, cpp_long const&);
		void setCharacterStream(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&);
		void setNCharacterStream(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&);
		void setClob(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&);
		void setBlob(local_ref< java::lang::String > const&, local_ref< java::io::InputStream > const&);
		void setNClob(local_ref< java::lang::String > const&, local_ref< java::io::Reader > const&);
	}; //class CallableStatement

} //namespace sql
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_CALLABLESTATEMENT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SQL_CALLABLESTATEMENT_HPP_IMPL
#define J2CPP_JAVA_SQL_CALLABLESTATEMENT_HPP_IMPL

namespace j2cpp {


local_ref< java::sql::Array > java::sql::CallableStatement::getArray(cpp_int const &a0)
{
	return local_ref< java::sql::Array >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Array > java::sql::CallableStatement::getArray(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Array >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::math::BigDecimal > java::sql::CallableStatement::getBigDecimal(cpp_int const &a0)
{
	return local_ref< java::math::BigDecimal >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::math::BigDecimal > java::sql::CallableStatement::getBigDecimal(cpp_int const &a0, cpp_int const &a1)
{
	return local_ref< java::math::BigDecimal >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::math::BigDecimal > java::sql::CallableStatement::getBigDecimal(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::math::BigDecimal >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Blob > java::sql::CallableStatement::getBlob(cpp_int const &a0)
{
	return local_ref< java::sql::Blob >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Blob > java::sql::CallableStatement::getBlob(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Blob >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean java::sql::CallableStatement::getBoolean(cpp_int const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean java::sql::CallableStatement::getBoolean(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

cpp_byte java::sql::CallableStatement::getByte(cpp_int const &a0)
{
	return cpp_byte(
		environment::get().get_jenv()->CallByteMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

cpp_byte java::sql::CallableStatement::getByte(local_ref< java::lang::String > const &a0)
{
	return cpp_byte(
		environment::get().get_jenv()->CallByteMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > java::sql::CallableStatement::getBytes(cpp_int const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > java::sql::CallableStatement::getBytes(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Clob > java::sql::CallableStatement::getClob(cpp_int const &a0)
{
	return local_ref< java::sql::Clob >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Clob > java::sql::CallableStatement::getClob(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Clob >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Date > java::sql::CallableStatement::getDate(cpp_int const &a0)
{
	return local_ref< java::sql::Date >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Date > java::sql::CallableStatement::getDate(cpp_int const &a0, local_ref< java::util::Calendar > const &a1)
{
	return local_ref< java::sql::Date >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::sql::Date > java::sql::CallableStatement::getDate(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Date >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Date > java::sql::CallableStatement::getDate(local_ref< java::lang::String > const &a0, local_ref< java::util::Calendar > const &a1)
{
	return local_ref< java::sql::Date >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_double java::sql::CallableStatement::getDouble(cpp_int const &a0)
{
	return cpp_double(
		environment::get().get_jenv()->CallDoubleMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype()
		)
	);
}

cpp_double java::sql::CallableStatement::getDouble(local_ref< java::lang::String > const &a0)
{
	return cpp_double(
		environment::get().get_jenv()->CallDoubleMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float java::sql::CallableStatement::getFloat(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float java::sql::CallableStatement::getFloat(local_ref< java::lang::String > const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::sql::CallableStatement::getInt(cpp_int const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int java::sql::CallableStatement::getInt(local_ref< java::lang::String > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

cpp_long java::sql::CallableStatement::getLong(cpp_int const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

cpp_long java::sql::CallableStatement::getLong(local_ref< java::lang::String > const &a0)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::sql::CallableStatement::getObject(cpp_int const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::sql::CallableStatement::getObject(cpp_int const &a0, local_ref< java::util::Map > const &a1)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::sql::CallableStatement::getObject(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::sql::CallableStatement::getObject(local_ref< java::lang::String > const &a0, local_ref< java::util::Map > const &a1)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::sql::Ref > java::sql::CallableStatement::getRef(cpp_int const &a0)
{
	return local_ref< java::sql::Ref >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Ref > java::sql::CallableStatement::getRef(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Ref >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

cpp_short java::sql::CallableStatement::getShort(cpp_int const &a0)
{
	return cpp_short(
		environment::get().get_jenv()->CallShortMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

cpp_short java::sql::CallableStatement::getShort(local_ref< java::lang::String > const &a0)
{
	return cpp_short(
		environment::get().get_jenv()->CallShortMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::sql::CallableStatement::getString(cpp_int const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::sql::CallableStatement::getString(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Time > java::sql::CallableStatement::getTime(cpp_int const &a0)
{
	return local_ref< java::sql::Time >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Time > java::sql::CallableStatement::getTime(cpp_int const &a0, local_ref< java::util::Calendar > const &a1)
{
	return local_ref< java::sql::Time >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::sql::Time > java::sql::CallableStatement::getTime(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Time >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Time > java::sql::CallableStatement::getTime(local_ref< java::lang::String > const &a0, local_ref< java::util::Calendar > const &a1)
{
	return local_ref< java::sql::Time >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(40), J2CPP_METHOD_SIGNATURE(40), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::sql::Timestamp > java::sql::CallableStatement::getTimestamp(cpp_int const &a0)
{
	return local_ref< java::sql::Timestamp >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(41), J2CPP_METHOD_SIGNATURE(41), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Timestamp > java::sql::CallableStatement::getTimestamp(cpp_int const &a0, local_ref< java::util::Calendar > const &a1)
{
	return local_ref< java::sql::Timestamp >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(42), J2CPP_METHOD_SIGNATURE(42), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::sql::Timestamp > java::sql::CallableStatement::getTimestamp(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::Timestamp >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(43), J2CPP_METHOD_SIGNATURE(43), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::Timestamp > java::sql::CallableStatement::getTimestamp(local_ref< java::lang::String > const &a0, local_ref< java::util::Calendar > const &a1)
{
	return local_ref< java::sql::Timestamp >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(44), J2CPP_METHOD_SIGNATURE(44), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::net::URL > java::sql::CallableStatement::getURL(cpp_int const &a0)
{
	return local_ref< java::net::URL >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(45), J2CPP_METHOD_SIGNATURE(45), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::net::URL > java::sql::CallableStatement::getURL(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::net::URL >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(46), J2CPP_METHOD_SIGNATURE(46), false>(),
			a0.get_jtype()
		)
	);
}

void java::sql::CallableStatement::registerOutParameter(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(47), J2CPP_METHOD_SIGNATURE(47), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::registerOutParameter(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::registerOutParameter(cpp_int const &a0, cpp_int const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::registerOutParameter(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::registerOutParameter(local_ref< java::lang::String > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(51), J2CPP_METHOD_SIGNATURE(51), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::registerOutParameter(local_ref< java::lang::String > const &a0, cpp_int const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(52), J2CPP_METHOD_SIGNATURE(52), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setAsciiStream(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(53), J2CPP_METHOD_SIGNATURE(53), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBigDecimal(local_ref< java::lang::String > const &a0, local_ref< java::math::BigDecimal > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBinaryStream(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBoolean(local_ref< java::lang::String > const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setByte(local_ref< java::lang::String > const &a0, cpp_byte const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBytes(local_ref< java::lang::String > const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setCharacterStream(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setDate(local_ref< java::lang::String > const &a0, local_ref< java::sql::Date > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(60), J2CPP_METHOD_SIGNATURE(60), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setDate(local_ref< java::lang::String > const &a0, local_ref< java::sql::Date > const &a1, local_ref< java::util::Calendar > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setDouble(local_ref< java::lang::String > const &a0, cpp_double const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(62), J2CPP_METHOD_SIGNATURE(62), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setFloat(local_ref< java::lang::String > const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(63), J2CPP_METHOD_SIGNATURE(63), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setInt(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(64), J2CPP_METHOD_SIGNATURE(64), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setLong(local_ref< java::lang::String > const &a0, cpp_long const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(65), J2CPP_METHOD_SIGNATURE(65), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNull(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNull(local_ref< java::lang::String > const &a0, cpp_int const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setObject(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setObject(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setObject(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setShort(local_ref< java::lang::String > const &a0, cpp_short const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(71), J2CPP_METHOD_SIGNATURE(71), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setString(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(72), J2CPP_METHOD_SIGNATURE(72), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setTime(local_ref< java::lang::String > const &a0, local_ref< java::sql::Time > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(73), J2CPP_METHOD_SIGNATURE(73), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setTime(local_ref< java::lang::String > const &a0, local_ref< java::sql::Time > const &a1, local_ref< java::util::Calendar > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(74), J2CPP_METHOD_SIGNATURE(74), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setTimestamp(local_ref< java::lang::String > const &a0, local_ref< java::sql::Timestamp > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(75), J2CPP_METHOD_SIGNATURE(75), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setTimestamp(local_ref< java::lang::String > const &a0, local_ref< java::sql::Timestamp > const &a1, local_ref< java::util::Calendar > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(76), J2CPP_METHOD_SIGNATURE(76), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setURL(local_ref< java::lang::String > const &a0, local_ref< java::net::URL > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(77), J2CPP_METHOD_SIGNATURE(77), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::sql::CallableStatement::wasNull()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(78), J2CPP_METHOD_SIGNATURE(78), false>()
		)
	);
}

local_ref< java::sql::RowId > java::sql::CallableStatement::getRowId(cpp_int const &a0)
{
	return local_ref< java::sql::RowId >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(79), J2CPP_METHOD_SIGNATURE(79), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::RowId > java::sql::CallableStatement::getRowId(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::RowId >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(80), J2CPP_METHOD_SIGNATURE(80), false>(),
			a0.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setRowId(local_ref< java::lang::String > const &a0, local_ref< java::sql::RowId > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(81), J2CPP_METHOD_SIGNATURE(81), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNString(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(82), J2CPP_METHOD_SIGNATURE(82), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNCharacterStream(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(83), J2CPP_METHOD_SIGNATURE(83), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNClob(local_ref< java::lang::String > const &a0, local_ref< java::sql::NClob > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(84), J2CPP_METHOD_SIGNATURE(84), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setClob(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(85), J2CPP_METHOD_SIGNATURE(85), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBlob(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(86), J2CPP_METHOD_SIGNATURE(86), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNClob(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(87), J2CPP_METHOD_SIGNATURE(87), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::sql::NClob > java::sql::CallableStatement::getNClob(cpp_int const &a0)
{
	return local_ref< java::sql::NClob >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(88), J2CPP_METHOD_SIGNATURE(88), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::NClob > java::sql::CallableStatement::getNClob(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::NClob >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(89), J2CPP_METHOD_SIGNATURE(89), false>(),
			a0.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setSQLXML(local_ref< java::lang::String > const &a0, local_ref< java::sql::SQLXML > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(90), J2CPP_METHOD_SIGNATURE(90), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::sql::SQLXML > java::sql::CallableStatement::getSQLXML(cpp_int const &a0)
{
	return local_ref< java::sql::SQLXML >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(91), J2CPP_METHOD_SIGNATURE(91), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::sql::SQLXML > java::sql::CallableStatement::getSQLXML(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::sql::SQLXML >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(92), J2CPP_METHOD_SIGNATURE(92), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::sql::CallableStatement::getNString(cpp_int const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(93), J2CPP_METHOD_SIGNATURE(93), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::sql::CallableStatement::getNString(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(94), J2CPP_METHOD_SIGNATURE(94), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::io::Reader > java::sql::CallableStatement::getNCharacterStream(cpp_int const &a0)
{
	return local_ref< java::io::Reader >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(95), J2CPP_METHOD_SIGNATURE(95), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::io::Reader > java::sql::CallableStatement::getNCharacterStream(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::io::Reader >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(96), J2CPP_METHOD_SIGNATURE(96), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::io::Reader > java::sql::CallableStatement::getCharacterStream(cpp_int const &a0)
{
	return local_ref< java::io::Reader >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(97), J2CPP_METHOD_SIGNATURE(97), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::io::Reader > java::sql::CallableStatement::getCharacterStream(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::io::Reader >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(98), J2CPP_METHOD_SIGNATURE(98), false>(),
			a0.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBlob(local_ref< java::lang::String > const &a0, local_ref< java::sql::Blob > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(99), J2CPP_METHOD_SIGNATURE(99), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setClob(local_ref< java::lang::String > const &a0, local_ref< java::sql::Clob > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(100), J2CPP_METHOD_SIGNATURE(100), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setAsciiStream(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(101), J2CPP_METHOD_SIGNATURE(101), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setAsciiStream(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(102), J2CPP_METHOD_SIGNATURE(102), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBinaryStream(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(103), J2CPP_METHOD_SIGNATURE(103), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBinaryStream(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(104), J2CPP_METHOD_SIGNATURE(104), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setCharacterStream(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1, cpp_long const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(105), J2CPP_METHOD_SIGNATURE(105), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setCharacterStream(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(106), J2CPP_METHOD_SIGNATURE(106), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNCharacterStream(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(107), J2CPP_METHOD_SIGNATURE(107), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setClob(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(108), J2CPP_METHOD_SIGNATURE(108), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setBlob(local_ref< java::lang::String > const &a0, local_ref< java::io::InputStream > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(109), J2CPP_METHOD_SIGNATURE(109), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::sql::CallableStatement::setNClob(local_ref< java::lang::String > const &a0, local_ref< java::io::Reader > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(110), J2CPP_METHOD_SIGNATURE(110), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::sql::CallableStatement,"java/sql/CallableStatement")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,0,"getArray","(I)Ljava/sql/Array;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,1,"getArray","(Ljava/lang/String;)Ljava/sql/Array;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,2,"getBigDecimal","(I)Ljava/math/BigDecimal;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,3,"getBigDecimal","(II)Ljava/math/BigDecimal;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,4,"getBigDecimal","(Ljava/lang/String;)Ljava/math/BigDecimal;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,5,"getBlob","(I)Ljava/sql/Blob;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,6,"getBlob","(Ljava/lang/String;)Ljava/sql/Blob;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,7,"getBoolean","(I)Z")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,8,"getBoolean","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,9,"getByte","(I)B")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,10,"getByte","(Ljava/lang/String;)B")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,11,"getBytes","(I)[B")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,12,"getBytes","(Ljava/lang/String;)[B")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,13,"getClob","(I)Ljava/sql/Clob;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,14,"getClob","(Ljava/lang/String;)Ljava/sql/Clob;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,15,"getDate","(I)Ljava/sql/Date;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,16,"getDate","(ILjava/util/Calendar;)Ljava/sql/Date;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,17,"getDate","(Ljava/lang/String;)Ljava/sql/Date;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,18,"getDate","(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,19,"getDouble","(I)D")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,20,"getDouble","(Ljava/lang/String;)D")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,21,"getFloat","(I)F")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,22,"getFloat","(Ljava/lang/String;)F")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,23,"getInt","(I)I")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,24,"getInt","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,25,"getLong","(I)J")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,26,"getLong","(Ljava/lang/String;)J")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,27,"getObject","(I)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,28,"getObject","(ILjava/util/Map;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,29,"getObject","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,30,"getObject","(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,31,"getRef","(I)Ljava/sql/Ref;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,32,"getRef","(Ljava/lang/String;)Ljava/sql/Ref;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,33,"getShort","(I)S")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,34,"getShort","(Ljava/lang/String;)S")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,35,"getString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,36,"getString","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,37,"getTime","(I)Ljava/sql/Time;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,38,"getTime","(ILjava/util/Calendar;)Ljava/sql/Time;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,39,"getTime","(Ljava/lang/String;)Ljava/sql/Time;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,40,"getTime","(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,41,"getTimestamp","(I)Ljava/sql/Timestamp;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,42,"getTimestamp","(ILjava/util/Calendar;)Ljava/sql/Timestamp;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,43,"getTimestamp","(Ljava/lang/String;)Ljava/sql/Timestamp;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,44,"getTimestamp","(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,45,"getURL","(I)Ljava/net/URL;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,46,"getURL","(Ljava/lang/String;)Ljava/net/URL;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,47,"registerOutParameter","(II)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,48,"registerOutParameter","(III)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,49,"registerOutParameter","(IILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,50,"registerOutParameter","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,51,"registerOutParameter","(Ljava/lang/String;II)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,52,"registerOutParameter","(Ljava/lang/String;ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,53,"setAsciiStream","(Ljava/lang/String;Ljava/io/InputStream;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,54,"setBigDecimal","(Ljava/lang/String;Ljava/math/BigDecimal;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,55,"setBinaryStream","(Ljava/lang/String;Ljava/io/InputStream;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,56,"setBoolean","(Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,57,"setByte","(Ljava/lang/String;B)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,58,"setBytes","(Ljava/lang/String;[B)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,59,"setCharacterStream","(Ljava/lang/String;Ljava/io/Reader;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,60,"setDate","(Ljava/lang/String;Ljava/sql/Date;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,61,"setDate","(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,62,"setDouble","(Ljava/lang/String;D)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,63,"setFloat","(Ljava/lang/String;F)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,64,"setInt","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,65,"setLong","(Ljava/lang/String;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,66,"setNull","(Ljava/lang/String;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,67,"setNull","(Ljava/lang/String;ILjava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,68,"setObject","(Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,69,"setObject","(Ljava/lang/String;Ljava/lang/Object;I)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,70,"setObject","(Ljava/lang/String;Ljava/lang/Object;II)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,71,"setShort","(Ljava/lang/String;S)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,72,"setString","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,73,"setTime","(Ljava/lang/String;Ljava/sql/Time;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,74,"setTime","(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,75,"setTimestamp","(Ljava/lang/String;Ljava/sql/Timestamp;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,76,"setTimestamp","(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,77,"setURL","(Ljava/lang/String;Ljava/net/URL;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,78,"wasNull","()Z")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,79,"getRowId","(I)Ljava/sql/RowId;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,80,"getRowId","(Ljava/lang/String;)Ljava/sql/RowId;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,81,"setRowId","(Ljava/lang/String;Ljava/sql/RowId;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,82,"setNString","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,83,"setNCharacterStream","(Ljava/lang/String;Ljava/io/Reader;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,84,"setNClob","(Ljava/lang/String;Ljava/sql/NClob;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,85,"setClob","(Ljava/lang/String;Ljava/io/Reader;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,86,"setBlob","(Ljava/lang/String;Ljava/io/InputStream;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,87,"setNClob","(Ljava/lang/String;Ljava/io/Reader;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,88,"getNClob","(I)Ljava/sql/NClob;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,89,"getNClob","(Ljava/lang/String;)Ljava/sql/NClob;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,90,"setSQLXML","(Ljava/lang/String;Ljava/sql/SQLXML;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,91,"getSQLXML","(I)Ljava/sql/SQLXML;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,92,"getSQLXML","(Ljava/lang/String;)Ljava/sql/SQLXML;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,93,"getNString","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,94,"getNString","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,95,"getNCharacterStream","(I)Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,96,"getNCharacterStream","(Ljava/lang/String;)Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,97,"getCharacterStream","(I)Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,98,"getCharacterStream","(Ljava/lang/String;)Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,99,"setBlob","(Ljava/lang/String;Ljava/sql/Blob;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,100,"setClob","(Ljava/lang/String;Ljava/sql/Clob;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,101,"setAsciiStream","(Ljava/lang/String;Ljava/io/InputStream;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,102,"setAsciiStream","(Ljava/lang/String;Ljava/io/InputStream;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,103,"setBinaryStream","(Ljava/lang/String;Ljava/io/InputStream;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,104,"setBinaryStream","(Ljava/lang/String;Ljava/io/InputStream;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,105,"setCharacterStream","(Ljava/lang/String;Ljava/io/Reader;J)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,106,"setCharacterStream","(Ljava/lang/String;Ljava/io/Reader;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,107,"setNCharacterStream","(Ljava/lang/String;Ljava/io/Reader;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,108,"setClob","(Ljava/lang/String;Ljava/io/Reader;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,109,"setBlob","(Ljava/lang/String;Ljava/io/InputStream;)V")
J2CPP_DEFINE_METHOD(java::sql::CallableStatement,110,"setNClob","(Ljava/lang/String;Ljava/io/Reader;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_SQL_CALLABLESTATEMENT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
