/*================================================================================
  code generated by: java2cpp
  class: java.io.Console
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_CONSOLE_HPP_DECL
#define J2CPP_JAVA_IO_CONSOLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace io { class PrintWriter; } } }
namespace j2cpp { namespace java { namespace io { class Reader; } } }


#include <java/io/PrintWriter.hpp>
#include <java/io/Reader.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace java { namespace io {

	class Console;
	class Console
		: public cpp_object<Console>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		Console(jobject jobj)
		: cpp_object<Console>(jobj)
		{
		}

		void flush();
		local_ref< java::io::Console > format(local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		local_ref< java::io::Console > printf(local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		local_ref< java::io::Reader > reader();
		local_ref< java::lang::String > readLine();
		local_ref< java::lang::String > readLine(local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		local_ref< cpp_char_array<1> > readPassword();
		local_ref< cpp_char_array<1> > readPassword(local_ref< java::lang::String > const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		local_ref< java::io::PrintWriter > writer();
	}; //class Console

} //namespace io
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_IO_CONSOLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_CONSOLE_HPP_IMPL
#define J2CPP_JAVA_IO_CONSOLE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::io::Console > create< java::io::Console>()
{
	return local_ref< java::io::Console >(
		environment::get().get_jenv()->NewObject(
			get_class<java::io::Console::J2CPP_CLASS_NAME>(),
			get_method_id<java::io::Console::J2CPP_CLASS_NAME, java::io::Console::J2CPP_METHOD_NAME(0), java::io::Console::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void java::io::Console::flush()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::io::Console > java::io::Console::format(local_ref< java::lang::String > const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return local_ref< java::io::Console >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::io::Console > java::io::Console::printf(local_ref< java::lang::String > const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return local_ref< java::io::Console >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::io::Reader > java::io::Console::reader()
{
	return local_ref< java::io::Reader >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::String > java::io::Console::readLine()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

local_ref< java::lang::String > java::io::Console::readLine(local_ref< java::lang::String > const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< cpp_char_array<1> > java::io::Console::readPassword()
{
	return local_ref< cpp_char_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< cpp_char_array<1> > java::io::Console::readPassword(local_ref< java::lang::String > const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return local_ref< cpp_char_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::io::PrintWriter > java::io::Console::writer()
{
	return local_ref< java::io::PrintWriter >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::io::Console,"java/io/Console")
J2CPP_DEFINE_METHOD(java::io::Console,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::io::Console,1,"flush","()V")
J2CPP_DEFINE_METHOD(java::io::Console,2,"format","(Ljava/lang/String;[java.lang.Object)Ljava/io/Console;")
J2CPP_DEFINE_METHOD(java::io::Console,3,"printf","(Ljava/lang/String;[java.lang.Object)Ljava/io/Console;")
J2CPP_DEFINE_METHOD(java::io::Console,4,"reader","()Ljava/io/Reader;")
J2CPP_DEFINE_METHOD(java::io::Console,5,"readLine","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::io::Console,6,"readLine","(Ljava/lang/String;[java.lang.Object)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::io::Console,7,"readPassword","()[C")
J2CPP_DEFINE_METHOD(java::io::Console,8,"readPassword","(Ljava/lang/String;[java.lang.Object)[C")
J2CPP_DEFINE_METHOD(java::io::Console,9,"writer","()Ljava/io/PrintWriter;")

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_CONSOLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
