/*================================================================================
  code generated by: java2cpp
  class: java.io.IOError
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_IOERROR_HPP_DECL
#define J2CPP_JAVA_IO_IOERROR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Throwable; } } }


#include <java/lang/Throwable.hpp>


namespace j2cpp {

namespace java { namespace io {

	class IOError;
	class IOError
		: public cpp_object<IOError>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		IOError(jobject jobj)
		: cpp_object<IOError>(jobj)
		{
		}

	}; //class IOError

} //namespace io
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_IO_IOERROR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_IO_IOERROR_HPP_IMPL
#define J2CPP_JAVA_IO_IOERROR_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::io::IOError > create< java::io::IOError>(local_ref< java::lang::Throwable > const &a0)
{
	return local_ref< java::io::IOError >(
		environment::get().get_jenv()->NewObject(
			get_class<java::io::IOError::J2CPP_CLASS_NAME>(),
			get_method_id<java::io::IOError::J2CPP_CLASS_NAME, java::io::IOError::J2CPP_METHOD_NAME(0), java::io::IOError::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::io::IOError,"java/io/IOError")
J2CPP_DEFINE_METHOD(java::io::IOError,0,"<init>","(Ljava/lang/Throwable;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_IO_IOERROR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
