/*================================================================================
  code generated by: java2cpp
  class: java.text.DecimalFormatSymbols
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_TEXT_DECIMALFORMATSYMBOLS_HPP_DECL
#define J2CPP_JAVA_TEXT_DECIMALFORMATSYMBOLS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Locale; } } }
namespace j2cpp { namespace java { namespace util { class Currency; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Currency.hpp>
#include <java/util/Locale.hpp>


namespace j2cpp {

namespace java { namespace text {

	class DecimalFormatSymbols;
	class DecimalFormatSymbols
		: public cpp_object<DecimalFormatSymbols>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)

		DecimalFormatSymbols(jobject jobj)
		: cpp_object<DecimalFormatSymbols>(jobj)
		{
		}

		static local_ref< java::text::DecimalFormatSymbols > getInstance();
		static local_ref< java::text::DecimalFormatSymbols > getInstance(local_ref< java::util::Locale > const&);
		static local_ref< cpp_object_array<java::util::Locale, 1> > getAvailableLocales();
		local_ref< java::lang::Object > clone();
		cpp_boolean equals(local_ref< java::lang::Object > const&);
		local_ref< java::lang::String > toString();
		local_ref< java::util::Currency > getCurrency();
		local_ref< java::lang::String > getInternationalCurrencySymbol();
		local_ref< java::lang::String > getCurrencySymbol();
		cpp_char getDecimalSeparator();
		cpp_char getDigit();
		cpp_char getGroupingSeparator();
		local_ref< java::lang::String > getInfinity();
		cpp_char getMinusSign();
		cpp_char getMonetaryDecimalSeparator();
		local_ref< java::lang::String > getNaN();
		cpp_char getPatternSeparator();
		cpp_char getPercent();
		cpp_char getPerMill();
		cpp_char getZeroDigit();
		local_ref< java::lang::String > getExponentSeparator();
		cpp_int hashCode();
		void setCurrency(local_ref< java::util::Currency > const&);
		void setInternationalCurrencySymbol(local_ref< java::lang::String > const&);
		void setCurrencySymbol(local_ref< java::lang::String > const&);
		void setDecimalSeparator(cpp_char const&);
		void setDigit(cpp_char const&);
		void setGroupingSeparator(cpp_char const&);
		void setInfinity(local_ref< java::lang::String > const&);
		void setMinusSign(cpp_char const&);
		void setMonetaryDecimalSeparator(cpp_char const&);
		void setNaN(local_ref< java::lang::String > const&);
		void setPatternSeparator(cpp_char const&);
		void setPercent(cpp_char const&);
		void setPerMill(cpp_char const&);
		void setZeroDigit(cpp_char const&);
		void setExponentSeparator(local_ref< java::lang::String > const&);
	}; //class DecimalFormatSymbols

} //namespace text
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_TEXT_DECIMALFORMATSYMBOLS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_TEXT_DECIMALFORMATSYMBOLS_HPP_IMPL
#define J2CPP_JAVA_TEXT_DECIMALFORMATSYMBOLS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::text::DecimalFormatSymbols > create< java::text::DecimalFormatSymbols>()
{
	return local_ref< java::text::DecimalFormatSymbols >(
		environment::get().get_jenv()->NewObject(
			get_class<java::text::DecimalFormatSymbols::J2CPP_CLASS_NAME>(),
			get_method_id<java::text::DecimalFormatSymbols::J2CPP_CLASS_NAME, java::text::DecimalFormatSymbols::J2CPP_METHOD_NAME(0), java::text::DecimalFormatSymbols::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< java::text::DecimalFormatSymbols > create< java::text::DecimalFormatSymbols>(local_ref< java::util::Locale > const &a0)
{
	return local_ref< java::text::DecimalFormatSymbols >(
		environment::get().get_jenv()->NewObject(
			get_class<java::text::DecimalFormatSymbols::J2CPP_CLASS_NAME>(),
			get_method_id<java::text::DecimalFormatSymbols::J2CPP_CLASS_NAME, java::text::DecimalFormatSymbols::J2CPP_METHOD_NAME(1), java::text::DecimalFormatSymbols::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::text::DecimalFormatSymbols > java::text::DecimalFormatSymbols::getInstance()
{
	return local_ref< java::text::DecimalFormatSymbols >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>()
		)
	);
}

local_ref< java::text::DecimalFormatSymbols > java::text::DecimalFormatSymbols::getInstance(local_ref< java::util::Locale > const &a0)
{
	return local_ref< java::text::DecimalFormatSymbols >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::util::Locale, 1> > java::text::DecimalFormatSymbols::getAvailableLocales()
{
	return local_ref< cpp_object_array<java::util::Locale, 1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>()
		)
	);
}

local_ref< java::lang::Object > java::text::DecimalFormatSymbols::clone()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_boolean java::text::DecimalFormatSymbols::equals(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::text::DecimalFormatSymbols::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< java::util::Currency > java::text::DecimalFormatSymbols::getCurrency()
{
	return local_ref< java::util::Currency >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

local_ref< java::lang::String > java::text::DecimalFormatSymbols::getInternationalCurrencySymbol()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}

local_ref< java::lang::String > java::text::DecimalFormatSymbols::getCurrencySymbol()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getDecimalSeparator()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getDigit()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getGroupingSeparator()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

local_ref< java::lang::String > java::text::DecimalFormatSymbols::getInfinity()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getMinusSign()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getMonetaryDecimalSeparator()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

local_ref< java::lang::String > java::text::DecimalFormatSymbols::getNaN()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getPatternSeparator()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getPercent()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getPerMill()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>()
		)
	);
}

cpp_char java::text::DecimalFormatSymbols::getZeroDigit()
{
	return cpp_char(
		environment::get().get_jenv()->CallCharMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

local_ref< java::lang::String > java::text::DecimalFormatSymbols::getExponentSeparator()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>()
		)
	);
}

cpp_int java::text::DecimalFormatSymbols::hashCode()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>()
		)
	);
}

void java::text::DecimalFormatSymbols::setCurrency(local_ref< java::util::Currency > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setInternationalCurrencySymbol(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setCurrencySymbol(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setDecimalSeparator(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setDigit(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setGroupingSeparator(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setInfinity(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setMinusSign(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setMonetaryDecimalSeparator(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setNaN(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setPatternSeparator(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setPercent(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setPerMill(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setZeroDigit(cpp_char const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype()
		)
	);
}

void java::text::DecimalFormatSymbols::setExponentSeparator(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::text::DecimalFormatSymbols,"java/text/DecimalFormatSymbols")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,1,"<init>","(Ljava/util/Locale;)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,2,"getInstance","()Ljava/text/DecimalFormatSymbols;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,3,"getInstance","(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,4,"getAvailableLocales","()[java.util.Locale")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,5,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,6,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,7,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,8,"getCurrency","()Ljava/util/Currency;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,9,"getInternationalCurrencySymbol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,10,"getCurrencySymbol","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,11,"getDecimalSeparator","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,12,"getDigit","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,13,"getGroupingSeparator","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,14,"getInfinity","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,15,"getMinusSign","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,16,"getMonetaryDecimalSeparator","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,17,"getNaN","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,18,"getPatternSeparator","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,19,"getPercent","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,20,"getPerMill","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,21,"getZeroDigit","()C")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,22,"getExponentSeparator","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,23,"hashCode","()I")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,24,"setCurrency","(Ljava/util/Currency;)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,25,"setInternationalCurrencySymbol","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,26,"setCurrencySymbol","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,27,"setDecimalSeparator","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,28,"setDigit","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,29,"setGroupingSeparator","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,30,"setInfinity","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,31,"setMinusSign","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,32,"setMonetaryDecimalSeparator","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,33,"setNaN","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,34,"setPatternSeparator","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,35,"setPercent","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,36,"setPerMill","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,37,"setZeroDigit","(C)V")
J2CPP_DEFINE_METHOD(java::text::DecimalFormatSymbols,38,"setExponentSeparator","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_TEXT_DECIMALFORMATSYMBOLS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
