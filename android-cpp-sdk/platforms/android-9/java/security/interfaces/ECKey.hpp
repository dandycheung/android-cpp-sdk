/*================================================================================
  code generated by: java2cpp
  class: java.security.interfaces.ECKey
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_INTERFACES_ECKEY_HPP_DECL
#define J2CPP_JAVA_SECURITY_INTERFACES_ECKEY_HPP_DECL


namespace j2cpp { namespace java { namespace security { namespace spec { class ECParameterSpec; } } } }


#include <java/security/spec/ECParameterSpec.hpp>


namespace j2cpp {

namespace java { namespace security { namespace interfaces {

	class ECKey;
	class ECKey
		: public cpp_object<ECKey>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		ECKey(jobject jobj)
		: cpp_object<ECKey>(jobj)
		{
		}

		local_ref< java::security::spec::ECParameterSpec > getParams();
	}; //class ECKey

} //namespace interfaces
} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_INTERFACES_ECKEY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_INTERFACES_ECKEY_HPP_IMPL
#define J2CPP_JAVA_SECURITY_INTERFACES_ECKEY_HPP_IMPL

namespace j2cpp {


local_ref< java::security::spec::ECParameterSpec > java::security::interfaces::ECKey::getParams()
{
	return local_ref< java::security::spec::ECParameterSpec >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::interfaces::ECKey,"java/security/interfaces/ECKey")
J2CPP_DEFINE_METHOD(java::security::interfaces::ECKey,0,"getParams","()Ljava/security/spec/ECParameterSpec;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_INTERFACES_ECKEY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
