/*================================================================================
  code generated by: java2cpp
  class: java.util.NavigableMap
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_NAVIGABLEMAP_HPP_DECL
#define J2CPP_JAVA_UTIL_NAVIGABLEMAP_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class NavigableSet; } } }
namespace j2cpp { namespace java { namespace util { namespace Map_ { class Entry; } } } }


#include <java/lang/Object.hpp>
#include <java/util/Map.hpp>
#include <java/util/NavigableSet.hpp>


namespace j2cpp {

namespace java { namespace util {

	class NavigableMap;
	class NavigableMap
		: public cpp_object<NavigableMap>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)

		NavigableMap(jobject jobj)
		: cpp_object<NavigableMap>(jobj)
		{
		}

		local_ref< java::util::Map_::Entry > firstEntry();
		local_ref< java::util::Map_::Entry > lastEntry();
		local_ref< java::util::Map_::Entry > pollFirstEntry();
		local_ref< java::util::Map_::Entry > pollLastEntry();
		local_ref< java::util::Map_::Entry > ceilingEntry(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > ceilingKey(local_ref< java::lang::Object > const&);
		local_ref< java::util::Map_::Entry > higherEntry(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > higherKey(local_ref< java::lang::Object > const&);
		local_ref< java::util::Map_::Entry > floorEntry(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > floorKey(local_ref< java::lang::Object > const&);
		local_ref< java::util::Map_::Entry > lowerEntry(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > lowerKey(local_ref< java::lang::Object > const&);
		local_ref< java::util::NavigableSet > navigableKeySet();
		local_ref< java::util::NavigableMap > descendingMap();
		local_ref< java::util::NavigableSet > descendingKeySet();
		local_ref< java::util::NavigableMap > subMap(local_ref< java::lang::Object > const&, cpp_boolean const&, local_ref< java::lang::Object > const&, cpp_boolean const&);
		local_ref< java::util::NavigableMap > headMap(local_ref< java::lang::Object > const&, cpp_boolean const&);
		local_ref< java::util::NavigableMap > tailMap(local_ref< java::lang::Object > const&, cpp_boolean const&);
	}; //class NavigableMap

} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_NAVIGABLEMAP_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_NAVIGABLEMAP_HPP_IMPL
#define J2CPP_JAVA_UTIL_NAVIGABLEMAP_HPP_IMPL

namespace j2cpp {


local_ref< java::util::Map_::Entry > java::util::NavigableMap::firstEntry()
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::lastEntry()
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::pollFirstEntry()
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::pollLastEntry()
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::ceilingEntry(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableMap::ceilingKey(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::higherEntry(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableMap::higherKey(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::floorEntry(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableMap::floorKey(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Map_::Entry > java::util::NavigableMap::lowerEntry(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::util::Map_::Entry >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableMap::lowerKey(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::NavigableSet > java::util::NavigableMap::navigableKeySet()
{
	return local_ref< java::util::NavigableSet >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

local_ref< java::util::NavigableMap > java::util::NavigableMap::descendingMap()
{
	return local_ref< java::util::NavigableMap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

local_ref< java::util::NavigableSet > java::util::NavigableMap::descendingKeySet()
{
	return local_ref< java::util::NavigableSet >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

local_ref< java::util::NavigableMap > java::util::NavigableMap::subMap(local_ref< java::lang::Object > const &a0, cpp_boolean const &a1, local_ref< java::lang::Object > const &a2, cpp_boolean const &a3)
{
	return local_ref< java::util::NavigableMap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::util::NavigableMap > java::util::NavigableMap::headMap(local_ref< java::lang::Object > const &a0, cpp_boolean const &a1)
{
	return local_ref< java::util::NavigableMap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::NavigableMap > java::util::NavigableMap::tailMap(local_ref< java::lang::Object > const &a0, cpp_boolean const &a1)
{
	return local_ref< java::util::NavigableMap >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::util::NavigableMap,"java/util/NavigableMap")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,0,"firstEntry","()Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,1,"lastEntry","()Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,2,"pollFirstEntry","()Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,3,"pollLastEntry","()Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,4,"ceilingEntry","(Ljava/lang/Object;)Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,5,"ceilingKey","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,6,"higherEntry","(Ljava/lang/Object;)Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,7,"higherKey","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,8,"floorEntry","(Ljava/lang/Object;)Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,9,"floorKey","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,10,"lowerEntry","(Ljava/lang/Object;)Ljava/util/Map$Entry;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,11,"lowerKey","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,12,"navigableKeySet","()Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,13,"descendingMap","()Ljava/util/NavigableMap;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,14,"descendingKeySet","()Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,15,"subMap","(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,16,"headMap","(Ljava/lang/Object;Z)Ljava/util/NavigableMap;")
J2CPP_DEFINE_METHOD(java::util::NavigableMap,17,"tailMap","(Ljava/lang/Object;Z)Ljava/util/NavigableMap;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_NAVIGABLEMAP_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
