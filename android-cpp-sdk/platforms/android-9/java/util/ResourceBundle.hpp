/*================================================================================
  code generated by: java2cpp
  class: java.util.ResourceBundle
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_RESOURCEBUNDLE_HPP_DECL
#define J2CPP_JAVA_UTIL_RESOURCEBUNDLE_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class ClassLoader; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Locale; } } }
namespace j2cpp { namespace java { namespace util { namespace ResourceBundle_ { class Control; } } } }
namespace j2cpp { namespace java { namespace util { class Enumeration; } } }
namespace j2cpp { namespace java { namespace util { class List; } } }
namespace j2cpp { namespace java { namespace util { class Set; } } }


#include <java/lang/ClassLoader.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Enumeration.hpp>
#include <java/util/List.hpp>
#include <java/util/Locale.hpp>
#include <java/util/ResourceBundle.hpp>
#include <java/util/Set.hpp>


namespace j2cpp {

namespace java { namespace util {

	class ResourceBundle;
	namespace ResourceBundle_ {

		class Control;
		class Control
			: public cpp_object<Control>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)
			J2CPP_DECLARE_METHOD(6)
			J2CPP_DECLARE_METHOD(7)
			J2CPP_DECLARE_METHOD(8)
			J2CPP_DECLARE_METHOD(9)
			J2CPP_DECLARE_METHOD(10)
			J2CPP_DECLARE_METHOD(11)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			Control(jobject jobj)
			: cpp_object<Control>(jobj)
			{
			}

			static local_ref< java::util::ResourceBundle_::Control > getControl(local_ref< java::util::List > const&);
			static local_ref< java::util::ResourceBundle_::Control > getNoFallbackControl(local_ref< java::util::List > const&);
			local_ref< java::util::List > getCandidateLocales(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&);
			local_ref< java::util::List > getFormats(local_ref< java::lang::String > const&);
			local_ref< java::util::Locale > getFallbackLocale(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&);
			local_ref< java::util::ResourceBundle > newBundle(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&, local_ref< java::lang::String > const&, local_ref< java::lang::ClassLoader > const&, cpp_boolean const&);
			cpp_long getTimeToLive(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&);
			cpp_boolean needsReload(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&, local_ref< java::lang::String > const&, local_ref< java::lang::ClassLoader > const&, local_ref< java::util::ResourceBundle > const&, cpp_long const&);
			local_ref< java::lang::String > toBundleName(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&);
			local_ref< java::lang::String > toResourceName(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::util::List > > FORMAT_DEFAULT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::util::List > > FORMAT_CLASS;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< java::util::List > > FORMAT_PROPERTIES;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_long > TTL_DONT_CACHE;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_long > TTL_NO_EXPIRATION_CONTROL;
		}; //class Control

	} //namespace ResourceBundle_

	class ResourceBundle
		: public cpp_object<ResourceBundle>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_FIELD(0)

		typedef ResourceBundle_::Control Control;

		ResourceBundle(jobject jobj)
		: cpp_object<ResourceBundle>(jobj)
		{
		}

		static local_ref< java::util::ResourceBundle > getBundle(local_ref< java::lang::String > const&);
		static local_ref< java::util::ResourceBundle > getBundle(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&);
		static local_ref< java::util::ResourceBundle > getBundle(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&, local_ref< java::lang::ClassLoader > const&);
		static local_ref< java::util::ResourceBundle > getBundle(local_ref< java::lang::String > const&, local_ref< java::util::ResourceBundle_::Control > const&);
		static local_ref< java::util::ResourceBundle > getBundle(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&, local_ref< java::util::ResourceBundle_::Control > const&);
		static local_ref< java::util::ResourceBundle > getBundle(local_ref< java::lang::String > const&, local_ref< java::util::Locale > const&, local_ref< java::lang::ClassLoader > const&, local_ref< java::util::ResourceBundle_::Control > const&);
		local_ref< java::util::Enumeration > getKeys();
		local_ref< java::util::Locale > getLocale();
		local_ref< java::lang::Object > getObject(local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getString(local_ref< java::lang::String > const&);
		local_ref< cpp_object_array<java::lang::String, 1> > getStringArray(local_ref< java::lang::String > const&);
		static void clearCache();
		static void clearCache(local_ref< java::lang::ClassLoader > const&);
		cpp_boolean containsKey(local_ref< java::lang::String > const&);
		local_ref< java::util::Set > keySet();

	}; //class ResourceBundle

} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_RESOURCEBUNDLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_RESOURCEBUNDLE_HPP_IMPL
#define J2CPP_JAVA_UTIL_RESOURCEBUNDLE_HPP_IMPL

namespace j2cpp {



template <>
local_ref< java::util::ResourceBundle_::Control > create< java::util::ResourceBundle_::Control>()
{
	return local_ref< java::util::ResourceBundle_::Control >(
		environment::get().get_jenv()->NewObject(
			get_class<java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME>(),
			get_method_id<java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME, java::util::ResourceBundle_::Control::J2CPP_METHOD_NAME(0), java::util::ResourceBundle_::Control::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::util::ResourceBundle_::Control > java::util::ResourceBundle_::Control::getControl(local_ref< java::util::List > const &a0)
{
	return local_ref< java::util::ResourceBundle_::Control >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle_::Control > java::util::ResourceBundle_::Control::getNoFallbackControl(local_ref< java::util::List > const &a0)
{
	return local_ref< java::util::ResourceBundle_::Control >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::List > java::util::ResourceBundle_::Control::getCandidateLocales(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1)
{
	return local_ref< java::util::List >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::List > java::util::ResourceBundle_::Control::getFormats(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::util::List >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Locale > java::util::ResourceBundle_::Control::getFallbackLocale(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1)
{
	return local_ref< java::util::Locale >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle_::Control::newBundle(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::ClassLoader > const &a3, cpp_boolean const &a4)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

cpp_long java::util::ResourceBundle_::Control::getTimeToLive(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1)
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean java::util::ResourceBundle_::Control::needsReload(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::ClassLoader > const &a3, local_ref< java::util::ResourceBundle > const &a4, cpp_long const &a5)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::ResourceBundle_::Control::toBundleName(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::ResourceBundle_::Control::toResourceName(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


static_field<
	java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME,
	java::util::ResourceBundle_::Control::J2CPP_FIELD_NAME(0),
	java::util::ResourceBundle_::Control::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::util::List >
> java::util::ResourceBundle_::Control::FORMAT_DEFAULT;

static_field<
	java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME,
	java::util::ResourceBundle_::Control::J2CPP_FIELD_NAME(1),
	java::util::ResourceBundle_::Control::J2CPP_FIELD_SIGNATURE(1),
	local_ref< java::util::List >
> java::util::ResourceBundle_::Control::FORMAT_CLASS;

static_field<
	java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME,
	java::util::ResourceBundle_::Control::J2CPP_FIELD_NAME(2),
	java::util::ResourceBundle_::Control::J2CPP_FIELD_SIGNATURE(2),
	local_ref< java::util::List >
> java::util::ResourceBundle_::Control::FORMAT_PROPERTIES;

static_field<
	java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME,
	java::util::ResourceBundle_::Control::J2CPP_FIELD_NAME(3),
	java::util::ResourceBundle_::Control::J2CPP_FIELD_SIGNATURE(3),
	cpp_long
> java::util::ResourceBundle_::Control::TTL_DONT_CACHE;

static_field<
	java::util::ResourceBundle_::Control::J2CPP_CLASS_NAME,
	java::util::ResourceBundle_::Control::J2CPP_FIELD_NAME(4),
	java::util::ResourceBundle_::Control::J2CPP_FIELD_SIGNATURE(4),
	cpp_long
> java::util::ResourceBundle_::Control::TTL_NO_EXPIRATION_CONTROL;


J2CPP_DEFINE_CLASS(java::util::ResourceBundle_::Control,"java/util/ResourceBundle$Control")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,1,"getControl","(Ljava/util/List;)Ljava/util/ResourceBundle$Control;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,2,"getNoFallbackControl","(Ljava/util/List;)Ljava/util/ResourceBundle$Control;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,3,"getCandidateLocales","(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/List;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,4,"getFormats","(Ljava/lang/String;)Ljava/util/List;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,5,"getFallbackLocale","(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Locale;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,6,"newBundle","(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,7,"getTimeToLive","(Ljava/lang/String;Ljava/util/Locale;)J")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,8,"needsReload","(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle;J)Z")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,9,"toBundleName","(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,10,"toResourceName","(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle_::Control,11,"<clinit>","()V")
J2CPP_DEFINE_FIELD(java::util::ResourceBundle_::Control,0,"FORMAT_DEFAULT","Ljava/util/List;")
J2CPP_DEFINE_FIELD(java::util::ResourceBundle_::Control,1,"FORMAT_CLASS","Ljava/util/List;")
J2CPP_DEFINE_FIELD(java::util::ResourceBundle_::Control,2,"FORMAT_PROPERTIES","Ljava/util/List;")
J2CPP_DEFINE_FIELD(java::util::ResourceBundle_::Control,3,"TTL_DONT_CACHE","J")
J2CPP_DEFINE_FIELD(java::util::ResourceBundle_::Control,4,"TTL_NO_EXPIRATION_CONTROL","J")


template <>
local_ref< java::util::ResourceBundle > create< java::util::ResourceBundle>()
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->NewObject(
			get_class<java::util::ResourceBundle::J2CPP_CLASS_NAME>(),
			get_method_id<java::util::ResourceBundle::J2CPP_CLASS_NAME, java::util::ResourceBundle::J2CPP_METHOD_NAME(0), java::util::ResourceBundle::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle::getBundle(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle::getBundle(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle::getBundle(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1, local_ref< java::lang::ClassLoader > const &a2)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle::getBundle(local_ref< java::lang::String > const &a0, local_ref< java::util::ResourceBundle_::Control > const &a1)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle::getBundle(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1, local_ref< java::util::ResourceBundle_::Control > const &a2)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::util::ResourceBundle > java::util::ResourceBundle::getBundle(local_ref< java::lang::String > const &a0, local_ref< java::util::Locale > const &a1, local_ref< java::lang::ClassLoader > const &a2, local_ref< java::util::ResourceBundle_::Control > const &a3)
{
	return local_ref< java::util::ResourceBundle >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::util::Enumeration > java::util::ResourceBundle::getKeys()
{
	return local_ref< java::util::Enumeration >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< java::util::Locale > java::util::ResourceBundle::getLocale()
{
	return local_ref< java::util::Locale >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

local_ref< java::lang::Object > java::util::ResourceBundle::getObject(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::util::ResourceBundle::getString(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_object_array<java::lang::String, 1> > java::util::ResourceBundle::getStringArray(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_object_array<java::lang::String, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}



void java::util::ResourceBundle::clearCache()
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>()
		)
	);
}

void java::util::ResourceBundle::clearCache(local_ref< java::lang::ClassLoader > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean java::util::ResourceBundle::containsKey(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Set > java::util::ResourceBundle::keySet()
{
	return local_ref< java::util::Set >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}




J2CPP_DEFINE_CLASS(java::util::ResourceBundle,"java/util/ResourceBundle")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,1,"getBundle","(Ljava/lang/String;)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,2,"getBundle","(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,3,"getBundle","(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,4,"getBundle","(Ljava/lang/String;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,5,"getBundle","(Ljava/lang/String;Ljava/util/Locale;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,6,"getBundle","(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,7,"getKeys","()Ljava/util/Enumeration;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,8,"getLocale","()Ljava/util/Locale;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,9,"getObject","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,10,"getString","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,11,"getStringArray","(Ljava/lang/String;)[java.lang.String")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,12,"handleGetObject","(Ljava/lang/String;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,13,"setParent","(Ljava/util/ResourceBundle;)V")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,14,"clearCache","()V")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,15,"clearCache","(Ljava/lang/ClassLoader;)V")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,16,"containsKey","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,17,"keySet","()Ljava/util/Set;")
J2CPP_DEFINE_METHOD(java::util::ResourceBundle,18,"handleKeySet","()Ljava/util/Set;")
J2CPP_DEFINE_FIELD(java::util::ResourceBundle,0,"parent","Ljava/util/ResourceBundle;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_RESOURCEBUNDLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
