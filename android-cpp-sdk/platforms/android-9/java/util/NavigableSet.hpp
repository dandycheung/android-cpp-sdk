/*================================================================================
  code generated by: java2cpp
  class: java.util.NavigableSet
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_NAVIGABLESET_HPP_DECL
#define J2CPP_JAVA_UTIL_NAVIGABLESET_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Iterator; } } }


#include <java/lang/Object.hpp>
#include <java/util/Iterator.hpp>


namespace j2cpp {

namespace java { namespace util {

	class NavigableSet;
	class NavigableSet
		: public cpp_object<NavigableSet>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)

		NavigableSet(jobject jobj)
		: cpp_object<NavigableSet>(jobj)
		{
		}

		local_ref< java::lang::Object > pollFirst();
		local_ref< java::lang::Object > pollLast();
		local_ref< java::lang::Object > higher(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > ceiling(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > lower(local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > floor(local_ref< java::lang::Object > const&);
		local_ref< java::util::Iterator > descendingIterator();
		local_ref< java::util::NavigableSet > descendingSet();
		local_ref< java::util::NavigableSet > subSet(local_ref< java::lang::Object > const&, cpp_boolean const&, local_ref< java::lang::Object > const&, cpp_boolean const&);
		local_ref< java::util::NavigableSet > headSet(local_ref< java::lang::Object > const&, cpp_boolean const&);
		local_ref< java::util::NavigableSet > tailSet(local_ref< java::lang::Object > const&, cpp_boolean const&);
	}; //class NavigableSet

} //namespace util
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_NAVIGABLESET_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_UTIL_NAVIGABLESET_HPP_IMPL
#define J2CPP_JAVA_UTIL_NAVIGABLESET_HPP_IMPL

namespace j2cpp {


local_ref< java::lang::Object > java::util::NavigableSet::pollFirst()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableSet::pollLast()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableSet::higher(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableSet::ceiling(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableSet::lower(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > java::util::NavigableSet::floor(local_ref< java::lang::Object > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::Iterator > java::util::NavigableSet::descendingIterator()
{
	return local_ref< java::util::Iterator >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

local_ref< java::util::NavigableSet > java::util::NavigableSet::descendingSet()
{
	return local_ref< java::util::NavigableSet >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

local_ref< java::util::NavigableSet > java::util::NavigableSet::subSet(local_ref< java::lang::Object > const &a0, cpp_boolean const &a1, local_ref< java::lang::Object > const &a2, cpp_boolean const &a3)
{
	return local_ref< java::util::NavigableSet >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::util::NavigableSet > java::util::NavigableSet::headSet(local_ref< java::lang::Object > const &a0, cpp_boolean const &a1)
{
	return local_ref< java::util::NavigableSet >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::util::NavigableSet > java::util::NavigableSet::tailSet(local_ref< java::lang::Object > const &a0, cpp_boolean const &a1)
{
	return local_ref< java::util::NavigableSet >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::util::NavigableSet,"java/util/NavigableSet")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,0,"pollFirst","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,1,"pollLast","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,2,"higher","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,3,"ceiling","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,4,"lower","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,5,"floor","(Ljava/lang/Object;)Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,6,"descendingIterator","()Ljava/util/Iterator;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,7,"descendingSet","()Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,8,"subSet","(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,9,"headSet","(Ljava/lang/Object;Z)Ljava/util/NavigableSet;")
J2CPP_DEFINE_METHOD(java::util::NavigableSet,10,"tailSet","(Ljava/lang/Object;Z)Ljava/util/NavigableSet;")

} //namespace j2cpp

#endif //J2CPP_JAVA_UTIL_NAVIGABLESET_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
