/*================================================================================
  code generated by: java2cpp
  class: javax.xml.datatype.XMLGregorianCalendar
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_DATATYPE_XMLGREGORIANCALENDAR_HPP_DECL
#define J2CPP_JAVAX_XML_DATATYPE_XMLGREGORIANCALENDAR_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace javax { namespace xml { namespace datatype { class Duration; } } } }
namespace j2cpp { namespace javax { namespace xml { namespace namespace { class QName; } } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class GregorianCalendar; } } }
namespace j2cpp { namespace java { namespace util { class Locale; } } }
namespace j2cpp { namespace java { namespace util { class TimeZone; } } }
namespace j2cpp { namespace java { namespace math { class BigInteger; } } }
namespace j2cpp { namespace java { namespace math { class BigDecimal; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/math/BigDecimal.hpp>
#include <java/math/BigInteger.hpp>
#include <java/util/GregorianCalendar.hpp>
#include <java/util/Locale.hpp>
#include <java/util/TimeZone.hpp>
#include <javax/xml/datatype/Duration.hpp>
#include <javax/xml/namespace/QName.hpp>


namespace j2cpp {

namespace javax { namespace xml { namespace datatype {

	class XMLGregorianCalendar;
	class XMLGregorianCalendar
		: public cpp_object<XMLGregorianCalendar>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)

		XMLGregorianCalendar(jobject jobj)
		: cpp_object<XMLGregorianCalendar>(jobj)
		{
		}

		void clear();
		void reset();
		void setYear(local_ref< java::math::BigInteger > const&);
		void setYear(cpp_int const&);
		void setMonth(cpp_int const&);
		void setDay(cpp_int const&);
		void setTimezone(cpp_int const&);
		void setTime(cpp_int const&, cpp_int const&, cpp_int const&);
		void setHour(cpp_int const&);
		void setMinute(cpp_int const&);
		void setSecond(cpp_int const&);
		void setMillisecond(cpp_int const&);
		void setFractionalSecond(local_ref< java::math::BigDecimal > const&);
		void setTime(cpp_int const&, cpp_int const&, cpp_int const&, local_ref< java::math::BigDecimal > const&);
		void setTime(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		local_ref< java::math::BigInteger > getEon();
		cpp_int getYear();
		local_ref< java::math::BigInteger > getEonAndYear();
		cpp_int getMonth();
		cpp_int getDay();
		cpp_int getTimezone();
		cpp_int getHour();
		cpp_int getMinute();
		cpp_int getSecond();
		cpp_int getMillisecond();
		local_ref< java::math::BigDecimal > getFractionalSecond();
		cpp_int compare(local_ref< javax::xml::datatype::XMLGregorianCalendar > const&);
		local_ref< javax::xml::datatype::XMLGregorianCalendar > normalize();
		cpp_boolean equals(local_ref< java::lang::Object > const&);
		cpp_int hashCode();
		local_ref< java::lang::String > toXMLFormat();
		local_ref< javax::xml::namespace::QName > getXMLSchemaType();
		local_ref< java::lang::String > toString();
		cpp_boolean isValid();
		void add(local_ref< javax::xml::datatype::Duration > const&);
		local_ref< java::util::GregorianCalendar > toGregorianCalendar();
		local_ref< java::util::GregorianCalendar > toGregorianCalendar(local_ref< java::util::TimeZone > const&, local_ref< java::util::Locale > const&, local_ref< javax::xml::datatype::XMLGregorianCalendar > const&);
		local_ref< java::util::TimeZone > getTimeZone(cpp_int const&);
		local_ref< java::lang::Object > clone();
	}; //class XMLGregorianCalendar

} //namespace datatype
} //namespace xml
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_DATATYPE_XMLGREGORIANCALENDAR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_DATATYPE_XMLGREGORIANCALENDAR_HPP_IMPL
#define J2CPP_JAVAX_XML_DATATYPE_XMLGREGORIANCALENDAR_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::xml::datatype::XMLGregorianCalendar > create< javax::xml::datatype::XMLGregorianCalendar>()
{
	return local_ref< javax::xml::datatype::XMLGregorianCalendar >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::xml::datatype::XMLGregorianCalendar::J2CPP_CLASS_NAME>(),
			get_method_id<javax::xml::datatype::XMLGregorianCalendar::J2CPP_CLASS_NAME, javax::xml::datatype::XMLGregorianCalendar::J2CPP_METHOD_NAME(0), javax::xml::datatype::XMLGregorianCalendar::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::clear()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setYear(local_ref< java::math::BigInteger > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setYear(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setMonth(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setDay(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setTimezone(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setTime(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setHour(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setMinute(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setSecond(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setMillisecond(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setFractionalSecond(local_ref< java::math::BigDecimal > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setTime(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< java::math::BigDecimal > const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::setTime(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::math::BigInteger > javax::xml::datatype::XMLGregorianCalendar::getEon()
{
	return local_ref< java::math::BigInteger >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getYear()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>()
		)
	);
}

local_ref< java::math::BigInteger > javax::xml::datatype::XMLGregorianCalendar::getEonAndYear()
{
	return local_ref< java::math::BigInteger >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getMonth()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getDay()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getTimezone()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getHour()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getMinute()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getSecond()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::getMillisecond()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>()
		)
	);
}

local_ref< java::math::BigDecimal > javax::xml::datatype::XMLGregorianCalendar::getFractionalSecond()
{
	return local_ref< java::math::BigDecimal >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::compare(local_ref< javax::xml::datatype::XMLGregorianCalendar > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< javax::xml::datatype::XMLGregorianCalendar > javax::xml::datatype::XMLGregorianCalendar::normalize()
{
	return local_ref< javax::xml::datatype::XMLGregorianCalendar >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>()
		)
	);
}

cpp_boolean javax::xml::datatype::XMLGregorianCalendar::equals(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int javax::xml::datatype::XMLGregorianCalendar::hashCode()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>()
		)
	);
}

local_ref< java::lang::String > javax::xml::datatype::XMLGregorianCalendar::toXMLFormat()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>()
		)
	);
}

local_ref< javax::xml::namespace::QName > javax::xml::datatype::XMLGregorianCalendar::getXMLSchemaType()
{
	return local_ref< javax::xml::namespace::QName >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>()
		)
	);
}

local_ref< java::lang::String > javax::xml::datatype::XMLGregorianCalendar::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>()
		)
	);
}

cpp_boolean javax::xml::datatype::XMLGregorianCalendar::isValid()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>()
		)
	);
}

void javax::xml::datatype::XMLGregorianCalendar::add(local_ref< javax::xml::datatype::Duration > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(35), J2CPP_METHOD_SIGNATURE(35), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::util::GregorianCalendar > javax::xml::datatype::XMLGregorianCalendar::toGregorianCalendar()
{
	return local_ref< java::util::GregorianCalendar >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>()
		)
	);
}

local_ref< java::util::GregorianCalendar > javax::xml::datatype::XMLGregorianCalendar::toGregorianCalendar(local_ref< java::util::TimeZone > const &a0, local_ref< java::util::Locale > const &a1, local_ref< javax::xml::datatype::XMLGregorianCalendar > const &a2)
{
	return local_ref< java::util::GregorianCalendar >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::util::TimeZone > javax::xml::datatype::XMLGregorianCalendar::getTimeZone(cpp_int const &a0)
{
	return local_ref< java::util::TimeZone >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(38), J2CPP_METHOD_SIGNATURE(38), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Object > javax::xml::datatype::XMLGregorianCalendar::clone()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(39), J2CPP_METHOD_SIGNATURE(39), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::xml::datatype::XMLGregorianCalendar,"javax/xml/datatype/XMLGregorianCalendar")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,1,"clear","()V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,2,"reset","()V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,3,"setYear","(Ljava/math/BigInteger;)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,4,"setYear","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,5,"setMonth","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,6,"setDay","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,7,"setTimezone","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,8,"setTime","(III)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,9,"setHour","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,10,"setMinute","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,11,"setSecond","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,12,"setMillisecond","(I)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,13,"setFractionalSecond","(Ljava/math/BigDecimal;)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,14,"setTime","(IIILjava/math/BigDecimal;)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,15,"setTime","(IIII)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,16,"getEon","()Ljava/math/BigInteger;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,17,"getYear","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,18,"getEonAndYear","()Ljava/math/BigInteger;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,19,"getMonth","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,20,"getDay","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,21,"getTimezone","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,22,"getHour","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,23,"getMinute","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,24,"getSecond","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,25,"getMillisecond","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,26,"getFractionalSecond","()Ljava/math/BigDecimal;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,27,"compare","(Ljavax/xml/datatype/XMLGregorianCalendar;)I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,28,"normalize","()Ljavax/xml/datatype/XMLGregorianCalendar;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,29,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,30,"hashCode","()I")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,31,"toXMLFormat","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,32,"getXMLSchemaType","()Ljavax/xml/namespace/QName;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,33,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,34,"isValid","()Z")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,35,"add","(Ljavax/xml/datatype/Duration;)V")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,36,"toGregorianCalendar","()Ljava/util/GregorianCalendar;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,37,"toGregorianCalendar","(Ljava/util/TimeZone;Ljava/util/Locale;Ljavax/xml/datatype/XMLGregorianCalendar;)Ljava/util/GregorianCalendar;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,38,"getTimeZone","(I)Ljava/util/TimeZone;")
J2CPP_DEFINE_METHOD(javax::xml::datatype::XMLGregorianCalendar,39,"clone","()Ljava/lang/Object;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_DATATYPE_XMLGREGORIANCALENDAR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
