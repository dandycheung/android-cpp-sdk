/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.media.AudioFormat
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_AUDIOFORMAT_HPP_DECL
#define J2CPP_ANDROID_MEDIA_AUDIOFORMAT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace media {

	class AudioFormat;
	class AudioFormat
		: public object<AudioFormat>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)

		explicit AudioFormat(jobject jobj)
		: object<AudioFormat>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;


		AudioFormat();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), jint > ENCODING_INVALID;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), jint > ENCODING_DEFAULT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), jint > ENCODING_PCM_16BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), jint > ENCODING_PCM_8BIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), jint > CHANNEL_CONFIGURATION_INVALID;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), jint > CHANNEL_CONFIGURATION_DEFAULT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), jint > CHANNEL_CONFIGURATION_MONO;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), jint > CHANNEL_CONFIGURATION_STEREO;
	}; //class AudioFormat

} //namespace media
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_AUDIOFORMAT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_AUDIOFORMAT_HPP_IMPL
#define J2CPP_ANDROID_MEDIA_AUDIOFORMAT_HPP_IMPL

namespace j2cpp {



android::media::AudioFormat::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}


android::media::AudioFormat::AudioFormat()
: object<android::media::AudioFormat>(
	call_new_object<
		android::media::AudioFormat::J2CPP_CLASS_NAME,
		android::media::AudioFormat::J2CPP_METHOD_NAME(0),
		android::media::AudioFormat::J2CPP_METHOD_SIGNATURE(0)
	>()
)
{
}



static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(0),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(0),
	jint
> android::media::AudioFormat::ENCODING_INVALID;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(1),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(1),
	jint
> android::media::AudioFormat::ENCODING_DEFAULT;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(2),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(2),
	jint
> android::media::AudioFormat::ENCODING_PCM_16BIT;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(3),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(3),
	jint
> android::media::AudioFormat::ENCODING_PCM_8BIT;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(4),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(4),
	jint
> android::media::AudioFormat::CHANNEL_CONFIGURATION_INVALID;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(5),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(5),
	jint
> android::media::AudioFormat::CHANNEL_CONFIGURATION_DEFAULT;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(6),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(6),
	jint
> android::media::AudioFormat::CHANNEL_CONFIGURATION_MONO;

static_field<
	android::media::AudioFormat::J2CPP_CLASS_NAME,
	android::media::AudioFormat::J2CPP_FIELD_NAME(7),
	android::media::AudioFormat::J2CPP_FIELD_SIGNATURE(7),
	jint
> android::media::AudioFormat::CHANNEL_CONFIGURATION_STEREO;


J2CPP_DEFINE_CLASS(android::media::AudioFormat,"android/media/AudioFormat")
J2CPP_DEFINE_METHOD(android::media::AudioFormat,0,"<init>","()V")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,0,"ENCODING_INVALID","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,1,"ENCODING_DEFAULT","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,2,"ENCODING_PCM_16BIT","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,3,"ENCODING_PCM_8BIT","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,4,"CHANNEL_CONFIGURATION_INVALID","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,5,"CHANNEL_CONFIGURATION_DEFAULT","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,6,"CHANNEL_CONFIGURATION_MONO","I")
J2CPP_DEFINE_FIELD(android::media::AudioFormat,7,"CHANNEL_CONFIGURATION_STEREO","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_AUDIOFORMAT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
