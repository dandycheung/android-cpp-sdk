/*================================================================================
  code generated by: java2cpp
  author: Zoran Angelov, mailto://baldzar@gmail.com
  class: android.text.style.LineHeightSpan
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_DECL
#define J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_DECL


namespace j2cpp { namespace android { namespace graphics { namespace Paint_ { class FontMetricsInt; } } } }
namespace j2cpp { namespace android { namespace text { namespace style { class ParagraphStyle; } } } }
namespace j2cpp { namespace android { namespace text { namespace style { class WrapTogetherSpan; } } } }
namespace j2cpp { namespace java { namespace lang { class CharSequence; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/graphics/Paint.hpp>
#include <android/text/style/ParagraphStyle.hpp>
#include <android/text/style/WrapTogetherSpan.hpp>
#include <java/lang/CharSequence.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace text { namespace style {

	class LineHeightSpan;
	class LineHeightSpan
		: public object<LineHeightSpan>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		explicit LineHeightSpan(jobject jobj)
		: object<LineHeightSpan>(jobj)
		{
		}

		operator local_ref<java::lang::Object>() const;
		operator local_ref<android::text::style::ParagraphStyle>() const;
		operator local_ref<android::text::style::WrapTogetherSpan>() const;


		void chooseHeight(local_ref< java::lang::CharSequence >  const&, jint, jint, jint, jint, local_ref< android::graphics::Paint_::FontMetricsInt >  const&);
	}; //class LineHeightSpan

} //namespace style
} //namespace text
} //namespace android

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_IMPL
#define J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_IMPL

namespace j2cpp {



android::text::style::LineHeightSpan::operator local_ref<java::lang::Object>() const
{
	return local_ref<java::lang::Object>(get_jobject());
}

android::text::style::LineHeightSpan::operator local_ref<android::text::style::ParagraphStyle>() const
{
	return local_ref<android::text::style::ParagraphStyle>(get_jobject());
}

android::text::style::LineHeightSpan::operator local_ref<android::text::style::WrapTogetherSpan>() const
{
	return local_ref<android::text::style::WrapTogetherSpan>(get_jobject());
}

void android::text::style::LineHeightSpan::chooseHeight(local_ref< java::lang::CharSequence > const &a0, jint a1, jint a2, jint a3, jint a4, local_ref< android::graphics::Paint_::FontMetricsInt > const &a5)
{
	return call_method<
		android::text::style::LineHeightSpan::J2CPP_CLASS_NAME,
		android::text::style::LineHeightSpan::J2CPP_METHOD_NAME(0),
		android::text::style::LineHeightSpan::J2CPP_METHOD_SIGNATURE(0), 
		void >
	(get_jobject(), a0, a1, a2, a3, a4, a5);
}


J2CPP_DEFINE_CLASS(android::text::style::LineHeightSpan,"android/text/style/LineHeightSpan")
J2CPP_DEFINE_METHOD(android::text::style::LineHeightSpan,0,"chooseHeight","(Ljava/lang/CharSequence;IIIILandroid/graphics/Paint$FontMetricsInt;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
