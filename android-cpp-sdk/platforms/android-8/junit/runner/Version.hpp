/*================================================================================
  code generated by: java2cpp
  class: junit.runner.Version
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JUNIT_RUNNER_VERSION_HPP_DECL
#define J2CPP_JUNIT_RUNNER_VERSION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace junit { namespace runner {

	class Version;
	class Version
		: public cpp_object<Version>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		Version(jobject jobj)
		: cpp_object<Version>(jobj)
		{
		}

		static local_ref< java::lang::String > id();
	}; //class Version

} //namespace runner
} //namespace junit


} //namespace j2cpp

#endif //J2CPP_JUNIT_RUNNER_VERSION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JUNIT_RUNNER_VERSION_HPP_IMPL
#define J2CPP_JUNIT_RUNNER_VERSION_HPP_IMPL

namespace j2cpp {


template <>
local_ref< junit::runner::Version > create< junit::runner::Version>()
{
	return local_ref< junit::runner::Version >(
		environment::get().get_jenv()->NewObject(
			get_class<junit::runner::Version::J2CPP_CLASS_NAME>(),
			get_method_id<junit::runner::Version::J2CPP_CLASS_NAME, junit::runner::Version::J2CPP_METHOD_NAME(0), junit::runner::Version::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > junit::runner::Version::id()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>()
		)
	);
}


J2CPP_DEFINE_CLASS(junit::runner::Version,"junit/runner/Version")
J2CPP_DEFINE_METHOD(junit::runner::Version,0,"<init>","()V")
J2CPP_DEFINE_METHOD(junit::runner::Version,1,"id","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JUNIT_RUNNER_VERSION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
