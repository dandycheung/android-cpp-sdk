/*================================================================================
  code generated by: java2cpp
  class: android.view.ScaleGestureDetector
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_SCALEGESTUREDETECTOR_HPP_DECL
#define J2CPP_ANDROID_VIEW_SCALEGESTUREDETECTOR_HPP_DECL


namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace ScaleGestureDetector_ { class OnScaleGestureListener; } } } }


#include <android/content/Context.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/ScaleGestureDetector.hpp>


namespace j2cpp {

namespace android { namespace view {

	class ScaleGestureDetector;
	namespace ScaleGestureDetector_ {

		class SimpleOnScaleGestureListener;
		class SimpleOnScaleGestureListener
			: public cpp_object<SimpleOnScaleGestureListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)

			SimpleOnScaleGestureListener(jobject jobj)
			: cpp_object<SimpleOnScaleGestureListener>(jobj)
			{
			}

			cpp_boolean onScale(local_ref< android::view::ScaleGestureDetector > const&);
			cpp_boolean onScaleBegin(local_ref< android::view::ScaleGestureDetector > const&);
			void onScaleEnd(local_ref< android::view::ScaleGestureDetector > const&);
		}; //class SimpleOnScaleGestureListener

		class OnScaleGestureListener;
		class OnScaleGestureListener
			: public cpp_object<OnScaleGestureListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)

			OnScaleGestureListener(jobject jobj)
			: cpp_object<OnScaleGestureListener>(jobj)
			{
			}

			cpp_boolean onScale(local_ref< android::view::ScaleGestureDetector > const&);
			cpp_boolean onScaleBegin(local_ref< android::view::ScaleGestureDetector > const&);
			void onScaleEnd(local_ref< android::view::ScaleGestureDetector > const&);
		}; //class OnScaleGestureListener

	} //namespace ScaleGestureDetector_

	class ScaleGestureDetector
		: public cpp_object<ScaleGestureDetector>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)

		typedef ScaleGestureDetector_::SimpleOnScaleGestureListener SimpleOnScaleGestureListener;
		typedef ScaleGestureDetector_::OnScaleGestureListener OnScaleGestureListener;

		ScaleGestureDetector(jobject jobj)
		: cpp_object<ScaleGestureDetector>(jobj)
		{
		}

		cpp_boolean onTouchEvent(local_ref< android::view::MotionEvent > const&);
		cpp_boolean isInProgress();
		cpp_float getFocusX();
		cpp_float getFocusY();
		cpp_float getCurrentSpan();
		cpp_float getPreviousSpan();
		cpp_float getScaleFactor();
		cpp_long getTimeDelta();
		cpp_long getEventTime();
	}; //class ScaleGestureDetector

} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_SCALEGESTUREDETECTOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_SCALEGESTUREDETECTOR_HPP_IMPL
#define J2CPP_ANDROID_VIEW_SCALEGESTUREDETECTOR_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener > create< android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener>()
{
	return local_ref< android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::J2CPP_CLASS_NAME, android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::J2CPP_METHOD_NAME(0), android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::onScale(local_ref< android::view::ScaleGestureDetector > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::onScaleBegin(local_ref< android::view::ScaleGestureDetector > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener::onScaleEnd(local_ref< android::view::ScaleGestureDetector > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener,"android/view/ScaleGestureDetector$SimpleOnScaleGestureListener")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener,1,"onScale","(Landroid/view/ScaleGestureDetector;)Z")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener,2,"onScaleBegin","(Landroid/view/ScaleGestureDetector;)Z")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::SimpleOnScaleGestureListener,3,"onScaleEnd","(Landroid/view/ScaleGestureDetector;)V")

cpp_boolean android::view::ScaleGestureDetector_::OnScaleGestureListener::onScale(local_ref< android::view::ScaleGestureDetector > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ScaleGestureDetector_::OnScaleGestureListener::onScaleBegin(local_ref< android::view::ScaleGestureDetector > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ScaleGestureDetector_::OnScaleGestureListener::onScaleEnd(local_ref< android::view::ScaleGestureDetector > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::ScaleGestureDetector_::OnScaleGestureListener,"android/view/ScaleGestureDetector$OnScaleGestureListener")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::OnScaleGestureListener,0,"onScale","(Landroid/view/ScaleGestureDetector;)Z")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::OnScaleGestureListener,1,"onScaleBegin","(Landroid/view/ScaleGestureDetector;)Z")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector_::OnScaleGestureListener,2,"onScaleEnd","(Landroid/view/ScaleGestureDetector;)V")


template <>
local_ref< android::view::ScaleGestureDetector > create< android::view::ScaleGestureDetector>(local_ref< android::content::Context > const &a0, local_ref< android::view::ScaleGestureDetector_::OnScaleGestureListener > const &a1)
{
	return local_ref< android::view::ScaleGestureDetector >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ScaleGestureDetector::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ScaleGestureDetector::J2CPP_CLASS_NAME, android::view::ScaleGestureDetector::J2CPP_METHOD_NAME(0), android::view::ScaleGestureDetector::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::ScaleGestureDetector::onTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ScaleGestureDetector::isInProgress()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_float android::view::ScaleGestureDetector::getFocusX()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_float android::view::ScaleGestureDetector::getFocusY()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

cpp_float android::view::ScaleGestureDetector::getCurrentSpan()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

cpp_float android::view::ScaleGestureDetector::getPreviousSpan()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>()
		)
	);
}

cpp_float android::view::ScaleGestureDetector::getScaleFactor()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_long android::view::ScaleGestureDetector::getTimeDelta()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_long android::view::ScaleGestureDetector::getEventTime()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::ScaleGestureDetector,"android/view/ScaleGestureDetector")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,0,"<init>","(Landroid/content/Context;Landroid/view/ScaleGestureDetector$OnScaleGestureListener;)V")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,1,"onTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,2,"isInProgress","()Z")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,3,"getFocusX","()F")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,4,"getFocusY","()F")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,5,"getCurrentSpan","()F")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,6,"getPreviousSpan","()F")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,7,"getScaleFactor","()F")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,8,"getTimeDelta","()J")
J2CPP_DEFINE_METHOD(android::view::ScaleGestureDetector,9,"getEventTime","()J")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_SCALEGESTUREDETECTOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
