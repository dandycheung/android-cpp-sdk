/*================================================================================
  code generated by: java2cpp
  class: android.view.ViewGroup
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_VIEWGROUP_HPP_DECL
#define J2CPP_ANDROID_VIEW_VIEWGROUP_HPP_DECL


namespace j2cpp { namespace android { namespace content { namespace res { class Configuration; } } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace android { namespace view { class View; } } }
namespace j2cpp { namespace android { namespace view { class KeyEvent; } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class MarginLayoutParams; } } } }
namespace j2cpp { namespace android { namespace view { namespace accessibility { class AccessibilityEvent; } } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class LayoutParams; } } } }
namespace j2cpp { namespace android { namespace view { namespace animation { class LayoutAnimationController; } } } }
namespace j2cpp { namespace android { namespace view { namespace animation { namespace LayoutAnimationController_ { class AnimationParameters; } } } } }
namespace j2cpp { namespace android { namespace view { namespace animation { namespace Animation_ { class AnimationListener; } } } } }
namespace j2cpp { namespace android { namespace view { class ViewParent; } } }
namespace j2cpp { namespace android { namespace view { namespace ViewGroup_ { class OnHierarchyChangeListener; } } } }
namespace j2cpp { namespace android { namespace view { class MotionEvent; } } }
namespace j2cpp { namespace android { namespace graphics { class Rect; } } }
namespace j2cpp { namespace android { namespace graphics { class Region; } } }
namespace j2cpp { namespace android { namespace graphics { class Point; } } }
namespace j2cpp { namespace java { namespace util { class ArrayList; } } }


#include <android/content/Context.hpp>
#include <android/content/res/Configuration.hpp>
#include <android/graphics/Point.hpp>
#include <android/graphics/Rect.hpp>
#include <android/graphics/Region.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/view/KeyEvent.hpp>
#include <android/view/MotionEvent.hpp>
#include <android/view/View.hpp>
#include <android/view/ViewGroup.hpp>
#include <android/view/ViewParent.hpp>
#include <android/view/accessibility/AccessibilityEvent.hpp>
#include <android/view/animation/Animation.hpp>
#include <android/view/animation/LayoutAnimationController.hpp>
#include <java/util/ArrayList.hpp>


namespace j2cpp {

namespace android { namespace view {

	class ViewGroup;
	namespace ViewGroup_ {

		class MarginLayoutParams;
		class MarginLayoutParams
			: public cpp_object<MarginLayoutParams>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)

			MarginLayoutParams(jobject jobj)
			: cpp_object<MarginLayoutParams>(jobj)
			, leftMargin(jobj)
			, topMargin(jobj)
			, rightMargin(jobj)
			, bottomMargin(jobj)
			{
			}

			void setMargins(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);

			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > leftMargin;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > topMargin;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > rightMargin;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > bottomMargin;
		}; //class MarginLayoutParams

		class LayoutParams;
		class LayoutParams
			: public cpp_object<LayoutParams>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)
			J2CPP_DECLARE_FIELD(5)

			LayoutParams(jobject jobj)
			: cpp_object<LayoutParams>(jobj)
			, width(jobj)
			, height(jobj)
			, layoutAnimationParameters(jobj)
			{
			}


			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > FILL_PARENT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > MATCH_PARENT;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > WRAP_CONTENT;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > width;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > height;
			field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), local_ref< android::view::animation::LayoutAnimationController_::AnimationParameters > > layoutAnimationParameters;
		}; //class LayoutParams

		class OnHierarchyChangeListener;
		class OnHierarchyChangeListener
			: public cpp_object<OnHierarchyChangeListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)

			OnHierarchyChangeListener(jobject jobj)
			: cpp_object<OnHierarchyChangeListener>(jobj)
			{
			}

			void onChildViewAdded(local_ref< android::view::View > const&, local_ref< android::view::View > const&);
			void onChildViewRemoved(local_ref< android::view::View > const&, local_ref< android::view::View > const&);
		}; //class OnHierarchyChangeListener

	} //namespace ViewGroup_

	class ViewGroup
		: public cpp_object<ViewGroup>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_METHOD(31)
		J2CPP_DECLARE_METHOD(32)
		J2CPP_DECLARE_METHOD(33)
		J2CPP_DECLARE_METHOD(34)
		J2CPP_DECLARE_METHOD(35)
		J2CPP_DECLARE_METHOD(36)
		J2CPP_DECLARE_METHOD(37)
		J2CPP_DECLARE_METHOD(38)
		J2CPP_DECLARE_METHOD(39)
		J2CPP_DECLARE_METHOD(40)
		J2CPP_DECLARE_METHOD(41)
		J2CPP_DECLARE_METHOD(42)
		J2CPP_DECLARE_METHOD(43)
		J2CPP_DECLARE_METHOD(44)
		J2CPP_DECLARE_METHOD(45)
		J2CPP_DECLARE_METHOD(46)
		J2CPP_DECLARE_METHOD(47)
		J2CPP_DECLARE_METHOD(48)
		J2CPP_DECLARE_METHOD(49)
		J2CPP_DECLARE_METHOD(50)
		J2CPP_DECLARE_METHOD(51)
		J2CPP_DECLARE_METHOD(52)
		J2CPP_DECLARE_METHOD(53)
		J2CPP_DECLARE_METHOD(54)
		J2CPP_DECLARE_METHOD(55)
		J2CPP_DECLARE_METHOD(56)
		J2CPP_DECLARE_METHOD(57)
		J2CPP_DECLARE_METHOD(58)
		J2CPP_DECLARE_METHOD(59)
		J2CPP_DECLARE_METHOD(60)
		J2CPP_DECLARE_METHOD(61)
		J2CPP_DECLARE_METHOD(62)
		J2CPP_DECLARE_METHOD(63)
		J2CPP_DECLARE_METHOD(64)
		J2CPP_DECLARE_METHOD(65)
		J2CPP_DECLARE_METHOD(66)
		J2CPP_DECLARE_METHOD(67)
		J2CPP_DECLARE_METHOD(68)
		J2CPP_DECLARE_METHOD(69)
		J2CPP_DECLARE_METHOD(70)
		J2CPP_DECLARE_METHOD(71)
		J2CPP_DECLARE_METHOD(72)
		J2CPP_DECLARE_METHOD(73)
		J2CPP_DECLARE_METHOD(74)
		J2CPP_DECLARE_METHOD(75)
		J2CPP_DECLARE_METHOD(76)
		J2CPP_DECLARE_METHOD(77)
		J2CPP_DECLARE_METHOD(78)
		J2CPP_DECLARE_METHOD(79)
		J2CPP_DECLARE_METHOD(80)
		J2CPP_DECLARE_METHOD(81)
		J2CPP_DECLARE_METHOD(82)
		J2CPP_DECLARE_METHOD(83)
		J2CPP_DECLARE_METHOD(84)
		J2CPP_DECLARE_METHOD(85)
		J2CPP_DECLARE_METHOD(86)
		J2CPP_DECLARE_METHOD(87)
		J2CPP_DECLARE_METHOD(88)
		J2CPP_DECLARE_METHOD(89)
		J2CPP_DECLARE_METHOD(90)
		J2CPP_DECLARE_METHOD(91)
		J2CPP_DECLARE_METHOD(92)
		J2CPP_DECLARE_METHOD(93)
		J2CPP_DECLARE_METHOD(94)
		J2CPP_DECLARE_METHOD(95)
		J2CPP_DECLARE_METHOD(96)
		J2CPP_DECLARE_METHOD(97)
		J2CPP_DECLARE_METHOD(98)
		J2CPP_DECLARE_METHOD(99)
		J2CPP_DECLARE_METHOD(100)
		J2CPP_DECLARE_METHOD(101)
		J2CPP_DECLARE_METHOD(102)
		J2CPP_DECLARE_METHOD(103)
		J2CPP_DECLARE_METHOD(104)
		J2CPP_DECLARE_METHOD(105)
		J2CPP_DECLARE_METHOD(106)
		J2CPP_DECLARE_METHOD(107)
		J2CPP_DECLARE_METHOD(108)
		J2CPP_DECLARE_METHOD(109)
		J2CPP_DECLARE_METHOD(110)
		J2CPP_DECLARE_METHOD(111)
		J2CPP_DECLARE_METHOD(112)
		J2CPP_DECLARE_METHOD(113)
		J2CPP_DECLARE_METHOD(114)
		J2CPP_DECLARE_METHOD(115)
		J2CPP_DECLARE_METHOD(116)
		J2CPP_DECLARE_METHOD(117)
		J2CPP_DECLARE_METHOD(118)
		J2CPP_DECLARE_METHOD(119)
		J2CPP_DECLARE_METHOD(120)
		J2CPP_DECLARE_METHOD(121)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)

		typedef ViewGroup_::MarginLayoutParams MarginLayoutParams;
		typedef ViewGroup_::LayoutParams LayoutParams;
		typedef ViewGroup_::OnHierarchyChangeListener OnHierarchyChangeListener;

		ViewGroup(jobject jobj)
		: cpp_object<ViewGroup>(jobj)
		{
		}

		cpp_int getDescendantFocusability();
		void setDescendantFocusability(cpp_int const&);
		void requestChildFocus(local_ref< android::view::View > const&, local_ref< android::view::View > const&);
		void focusableViewAvailable(local_ref< android::view::View > const&);
		cpp_boolean showContextMenuForChild(local_ref< android::view::View > const&);
		local_ref< android::view::View > focusSearch(local_ref< android::view::View > const&, cpp_int const&);
		cpp_boolean requestChildRectangleOnScreen(local_ref< android::view::View > const&, local_ref< android::graphics::Rect > const&, cpp_boolean const&);
		cpp_boolean dispatchUnhandledMove(local_ref< android::view::View > const&, cpp_int const&);
		void clearChildFocus(local_ref< android::view::View > const&);
		void clearFocus();
		local_ref< android::view::View > getFocusedChild();
		cpp_boolean hasFocus();
		local_ref< android::view::View > findFocus();
		cpp_boolean hasFocusable();
		void addFocusables(local_ref< java::util::ArrayList > const&, cpp_int const&);
		void addFocusables(local_ref< java::util::ArrayList > const&, cpp_int const&, cpp_int const&);
		void dispatchWindowFocusChanged(cpp_boolean const&);
		void addTouchables(local_ref< java::util::ArrayList > const&);
		void dispatchDisplayHint(cpp_int const&);
		void dispatchWindowVisibilityChanged(cpp_int const&);
		void dispatchConfigurationChanged(local_ref< android::content::res::Configuration > const&);
		void recomputeViewAttributes(local_ref< android::view::View > const&);
		void bringChildToFront(local_ref< android::view::View > const&);
		cpp_boolean dispatchKeyEventPreIme(local_ref< android::view::KeyEvent > const&);
		cpp_boolean dispatchKeyEvent(local_ref< android::view::KeyEvent > const&);
		cpp_boolean dispatchKeyShortcutEvent(local_ref< android::view::KeyEvent > const&);
		cpp_boolean dispatchTrackballEvent(local_ref< android::view::MotionEvent > const&);
		cpp_boolean dispatchTouchEvent(local_ref< android::view::MotionEvent > const&);
		void requestDisallowInterceptTouchEvent(cpp_boolean const&);
		cpp_boolean onInterceptTouchEvent(local_ref< android::view::MotionEvent > const&);
		cpp_boolean requestFocus(cpp_int const&, local_ref< android::graphics::Rect > const&);
		cpp_boolean dispatchPopulateAccessibilityEvent(local_ref< android::view::accessibility::AccessibilityEvent > const&);
		void setPadding(cpp_int const&, cpp_int const&, cpp_int const&, cpp_int const&);
		void setClipChildren(cpp_boolean const&);
		void setClipToPadding(cpp_boolean const&);
		void dispatchSetSelected(cpp_boolean const&);
		void addView(local_ref< android::view::View > const&);
		void addView(local_ref< android::view::View > const&, cpp_int const&);
		void addView(local_ref< android::view::View > const&, cpp_int const&, cpp_int const&);
		void addView(local_ref< android::view::View > const&, local_ref< android::view::ViewGroup_::LayoutParams > const&);
		void addView(local_ref< android::view::View > const&, cpp_int const&, local_ref< android::view::ViewGroup_::LayoutParams > const&);
		void updateViewLayout(local_ref< android::view::View > const&, local_ref< android::view::ViewGroup_::LayoutParams > const&);
		void setOnHierarchyChangeListener(local_ref< android::view::ViewGroup_::OnHierarchyChangeListener > const&);
		void removeView(local_ref< android::view::View > const&);
		void removeViewInLayout(local_ref< android::view::View > const&);
		void removeViewsInLayout(cpp_int const&, cpp_int const&);
		void removeViewAt(cpp_int const&);
		void removeViews(cpp_int const&, cpp_int const&);
		void removeAllViews();
		void removeAllViewsInLayout();
		void invalidateChild(local_ref< android::view::View > const&, local_ref< android::graphics::Rect > const&);
		local_ref< android::view::ViewParent > invalidateChildInParent(local_ref< cpp_int_array<1> > const&, local_ref< android::graphics::Rect > const&);
		void offsetDescendantRectToMyCoords(local_ref< android::view::View > const&, local_ref< android::graphics::Rect > const&);
		void offsetRectIntoDescendantCoords(local_ref< android::view::View > const&, local_ref< android::graphics::Rect > const&);
		cpp_boolean getChildVisibleRect(local_ref< android::view::View > const&, local_ref< android::graphics::Rect > const&, local_ref< android::graphics::Point > const&);
		void startLayoutAnimation();
		void scheduleLayoutAnimation();
		void setLayoutAnimation(local_ref< android::view::animation::LayoutAnimationController > const&);
		local_ref< android::view::animation::LayoutAnimationController > getLayoutAnimation();
		cpp_boolean isAnimationCacheEnabled();
		void setAnimationCacheEnabled(cpp_boolean const&);
		cpp_boolean isAlwaysDrawnWithCacheEnabled();
		void setAlwaysDrawnWithCacheEnabled(cpp_boolean const&);
		cpp_int getPersistentDrawingCache();
		void setPersistentDrawingCache(cpp_int const&);
		local_ref< android::view::ViewGroup_::LayoutParams > generateLayoutParams(local_ref< android::util::AttributeSet > const&);
		cpp_int indexOfChild(local_ref< android::view::View > const&);
		cpp_int getChildCount();
		local_ref< android::view::View > getChildAt(cpp_int const&);
		static cpp_int getChildMeasureSpec(cpp_int const&, cpp_int const&, cpp_int const&);
		void clearDisappearingChildren();
		cpp_boolean gatherTransparentRegion(local_ref< android::graphics::Region > const&);
		void requestTransparentRegion(local_ref< android::view::View > const&);
		local_ref< android::view::animation::Animation_::AnimationListener > getLayoutAnimationListener();
		void setAddStatesFromChildren(cpp_boolean const&);
		cpp_boolean addStatesFromChildren();
		void childDrawableStateChanged(local_ref< android::view::View > const&);
		void setLayoutAnimationListener(local_ref< android::view::animation::Animation_::AnimationListener > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > FOCUS_BEFORE_DESCENDANTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > FOCUS_AFTER_DESCENDANTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > FOCUS_BLOCK_DESCENDANTS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > PERSISTENT_NO_CACHE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > PERSISTENT_ANIMATION_CACHE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > PERSISTENT_SCROLLING_CACHE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), cpp_int > PERSISTENT_ALL_CACHES;
	}; //class ViewGroup

} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_VIEWGROUP_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_VIEWGROUP_HPP_IMPL
#define J2CPP_ANDROID_VIEW_VIEWGROUP_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::view::ViewGroup_::MarginLayoutParams > create< android::view::ViewGroup_::MarginLayoutParams>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
{
	return local_ref< android::view::ViewGroup_::MarginLayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_NAME(0), android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup_::MarginLayoutParams > create< android::view::ViewGroup_::MarginLayoutParams>(cpp_int const &a0, cpp_int const &a1)
{
	return local_ref< android::view::ViewGroup_::MarginLayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_NAME(1), android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup_::MarginLayoutParams > create< android::view::ViewGroup_::MarginLayoutParams>(local_ref< android::view::ViewGroup_::MarginLayoutParams > const &a0)
{
	return local_ref< android::view::ViewGroup_::MarginLayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_NAME(2), android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup_::MarginLayoutParams > create< android::view::ViewGroup_::MarginLayoutParams>(local_ref< android::view::ViewGroup_::LayoutParams > const &a0)
{
	return local_ref< android::view::ViewGroup_::MarginLayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::MarginLayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_NAME(3), android::view::ViewGroup_::MarginLayoutParams::J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup_::MarginLayoutParams::setMargins(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::view::ViewGroup_::MarginLayoutParams,"android/view/ViewGroup$MarginLayoutParams")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::MarginLayoutParams,0,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::MarginLayoutParams,1,"<init>","(II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::MarginLayoutParams,2,"<init>","(Landroid/view/ViewGroup$MarginLayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::MarginLayoutParams,3,"<init>","(Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::MarginLayoutParams,4,"setMargins","(IIII)V")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::MarginLayoutParams,0,"leftMargin","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::MarginLayoutParams,1,"topMargin","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::MarginLayoutParams,2,"rightMargin","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::MarginLayoutParams,3,"bottomMargin","I")

template <>
local_ref< android::view::ViewGroup_::LayoutParams > create< android::view::ViewGroup_::LayoutParams>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
{
	return local_ref< android::view::ViewGroup_::LayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::LayoutParams::J2CPP_METHOD_NAME(0), android::view::ViewGroup_::LayoutParams::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup_::LayoutParams > create< android::view::ViewGroup_::LayoutParams>(cpp_int const &a0, cpp_int const &a1)
{
	return local_ref< android::view::ViewGroup_::LayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::LayoutParams::J2CPP_METHOD_NAME(1), android::view::ViewGroup_::LayoutParams::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup_::LayoutParams > create< android::view::ViewGroup_::LayoutParams>(local_ref< android::view::ViewGroup_::LayoutParams > const &a0)
{
	return local_ref< android::view::ViewGroup_::LayoutParams >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME, android::view::ViewGroup_::LayoutParams::J2CPP_METHOD_NAME(2), android::view::ViewGroup_::LayoutParams::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}



static_field<
	android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME,
	android::view::ViewGroup_::LayoutParams::J2CPP_FIELD_NAME(0),
	android::view::ViewGroup_::LayoutParams::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::view::ViewGroup_::LayoutParams::FILL_PARENT;

static_field<
	android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME,
	android::view::ViewGroup_::LayoutParams::J2CPP_FIELD_NAME(1),
	android::view::ViewGroup_::LayoutParams::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::view::ViewGroup_::LayoutParams::MATCH_PARENT;

static_field<
	android::view::ViewGroup_::LayoutParams::J2CPP_CLASS_NAME,
	android::view::ViewGroup_::LayoutParams::J2CPP_FIELD_NAME(2),
	android::view::ViewGroup_::LayoutParams::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::view::ViewGroup_::LayoutParams::WRAP_CONTENT;


J2CPP_DEFINE_CLASS(android::view::ViewGroup_::LayoutParams,"android/view/ViewGroup$LayoutParams")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::LayoutParams,0,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::LayoutParams,1,"<init>","(II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::LayoutParams,2,"<init>","(Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::LayoutParams,3,"setBaseAttributes","(Landroid/content/res/TypedArray;II)V")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::LayoutParams,0,"FILL_PARENT","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::LayoutParams,1,"MATCH_PARENT","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::LayoutParams,2,"WRAP_CONTENT","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::LayoutParams,3,"width","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::LayoutParams,4,"height","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup_::LayoutParams,5,"layoutAnimationParameters","Landroid/view/animation/LayoutAnimationController$AnimationParameters;")

void android::view::ViewGroup_::OnHierarchyChangeListener::onChildViewAdded(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup_::OnHierarchyChangeListener::onChildViewRemoved(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::view::ViewGroup_::OnHierarchyChangeListener,"android/view/ViewGroup$OnHierarchyChangeListener")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::OnHierarchyChangeListener,0,"onChildViewAdded","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup_::OnHierarchyChangeListener,1,"onChildViewRemoved","(Landroid/view/View;Landroid/view/View;)V")


template <>
local_ref< android::view::ViewGroup > create< android::view::ViewGroup>(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::view::ViewGroup >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup::J2CPP_CLASS_NAME, android::view::ViewGroup::J2CPP_METHOD_NAME(0), android::view::ViewGroup::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup > create< android::view::ViewGroup>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
{
	return local_ref< android::view::ViewGroup >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup::J2CPP_CLASS_NAME, android::view::ViewGroup::J2CPP_METHOD_NAME(1), android::view::ViewGroup::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::view::ViewGroup > create< android::view::ViewGroup>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, cpp_int const &a2)
{
	return local_ref< android::view::ViewGroup >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::ViewGroup::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::ViewGroup::J2CPP_CLASS_NAME, android::view::ViewGroup::J2CPP_METHOD_NAME(2), android::view::ViewGroup::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::view::ViewGroup::getDescendantFocusability()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::view::ViewGroup::setDescendantFocusability(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::requestChildFocus(local_ref< android::view::View > const &a0, local_ref< android::view::View > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::focusableViewAvailable(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::showContextMenuForChild(local_ref< android::view::View > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::view::View > android::view::ViewGroup::focusSearch(local_ref< android::view::View > const &a0, cpp_int const &a1)
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::requestChildRectangleOnScreen(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1, cpp_boolean const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::dispatchUnhandledMove(local_ref< android::view::View > const &a0, cpp_int const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::clearChildFocus(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::clearFocus()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>()
		)
	);
}

local_ref< android::view::View > android::view::ViewGroup::getFocusedChild()
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

cpp_boolean android::view::ViewGroup::hasFocus()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

local_ref< android::view::View > android::view::ViewGroup::findFocus()
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

cpp_boolean android::view::ViewGroup::hasFocusable()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

void android::view::ViewGroup::addFocusables(local_ref< java::util::ArrayList > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::addFocusables(local_ref< java::util::ArrayList > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::ViewGroup::dispatchWindowFocusChanged(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::addTouchables(local_ref< java::util::ArrayList > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::dispatchDisplayHint(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), false>(),
			a0.get_jtype()
		)
	);
}


void android::view::ViewGroup::dispatchWindowVisibilityChanged(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::dispatchConfigurationChanged(local_ref< android::content::res::Configuration > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::recomputeViewAttributes(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::bringChildToFront(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::dispatchKeyEventPreIme(local_ref< android::view::KeyEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::dispatchKeyEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::dispatchKeyShortcutEvent(local_ref< android::view::KeyEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::dispatchTrackballEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::dispatchTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(31), J2CPP_METHOD_SIGNATURE(31), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::requestDisallowInterceptTouchEvent(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(32), J2CPP_METHOD_SIGNATURE(32), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::onInterceptTouchEvent(local_ref< android::view::MotionEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(33), J2CPP_METHOD_SIGNATURE(33), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::requestFocus(cpp_int const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(34), J2CPP_METHOD_SIGNATURE(34), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


cpp_boolean android::view::ViewGroup::dispatchPopulateAccessibilityEvent(local_ref< android::view::accessibility::AccessibilityEvent > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(36), J2CPP_METHOD_SIGNATURE(36), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::setPadding(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2, cpp_int const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(37), J2CPP_METHOD_SIGNATURE(37), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}











void android::view::ViewGroup::setClipChildren(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(48), J2CPP_METHOD_SIGNATURE(48), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::setClipToPadding(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(49), J2CPP_METHOD_SIGNATURE(49), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::dispatchSetSelected(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(50), J2CPP_METHOD_SIGNATURE(50), false>(),
			a0.get_jtype()
		)
	);
}




void android::view::ViewGroup::addView(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(54), J2CPP_METHOD_SIGNATURE(54), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::addView(local_ref< android::view::View > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(55), J2CPP_METHOD_SIGNATURE(55), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::addView(local_ref< android::view::View > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(56), J2CPP_METHOD_SIGNATURE(56), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::ViewGroup::addView(local_ref< android::view::View > const &a0, local_ref< android::view::ViewGroup_::LayoutParams > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(57), J2CPP_METHOD_SIGNATURE(57), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::addView(local_ref< android::view::View > const &a0, cpp_int const &a1, local_ref< android::view::ViewGroup_::LayoutParams > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(58), J2CPP_METHOD_SIGNATURE(58), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::ViewGroup::updateViewLayout(local_ref< android::view::View > const &a0, local_ref< android::view::ViewGroup_::LayoutParams > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(59), J2CPP_METHOD_SIGNATURE(59), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


void android::view::ViewGroup::setOnHierarchyChangeListener(local_ref< android::view::ViewGroup_::OnHierarchyChangeListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(61), J2CPP_METHOD_SIGNATURE(61), false>(),
			a0.get_jtype()
		)
	);
}





void android::view::ViewGroup::removeView(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(66), J2CPP_METHOD_SIGNATURE(66), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::removeViewInLayout(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(67), J2CPP_METHOD_SIGNATURE(67), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::removeViewsInLayout(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(68), J2CPP_METHOD_SIGNATURE(68), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::removeViewAt(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(69), J2CPP_METHOD_SIGNATURE(69), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::removeViews(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(70), J2CPP_METHOD_SIGNATURE(70), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::removeAllViews()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(71), J2CPP_METHOD_SIGNATURE(71), false>()
		)
	);
}

void android::view::ViewGroup::removeAllViewsInLayout()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(72), J2CPP_METHOD_SIGNATURE(72), false>()
		)
	);
}







void android::view::ViewGroup::invalidateChild(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(79), J2CPP_METHOD_SIGNATURE(79), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::view::ViewParent > android::view::ViewGroup::invalidateChildInParent(local_ref< cpp_int_array<1> > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return local_ref< android::view::ViewParent >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(80), J2CPP_METHOD_SIGNATURE(80), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::offsetDescendantRectToMyCoords(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(81), J2CPP_METHOD_SIGNATURE(81), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::view::ViewGroup::offsetRectIntoDescendantCoords(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(82), J2CPP_METHOD_SIGNATURE(82), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::getChildVisibleRect(local_ref< android::view::View > const &a0, local_ref< android::graphics::Rect > const &a1, local_ref< android::graphics::Point > const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(83), J2CPP_METHOD_SIGNATURE(83), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}



void android::view::ViewGroup::startLayoutAnimation()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(86), J2CPP_METHOD_SIGNATURE(86), false>()
		)
	);
}

void android::view::ViewGroup::scheduleLayoutAnimation()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(87), J2CPP_METHOD_SIGNATURE(87), false>()
		)
	);
}

void android::view::ViewGroup::setLayoutAnimation(local_ref< android::view::animation::LayoutAnimationController > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(88), J2CPP_METHOD_SIGNATURE(88), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::view::animation::LayoutAnimationController > android::view::ViewGroup::getLayoutAnimation()
{
	return local_ref< android::view::animation::LayoutAnimationController >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(89), J2CPP_METHOD_SIGNATURE(89), false>()
		)
	);
}

cpp_boolean android::view::ViewGroup::isAnimationCacheEnabled()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(90), J2CPP_METHOD_SIGNATURE(90), false>()
		)
	);
}

void android::view::ViewGroup::setAnimationCacheEnabled(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(91), J2CPP_METHOD_SIGNATURE(91), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::isAlwaysDrawnWithCacheEnabled()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(92), J2CPP_METHOD_SIGNATURE(92), false>()
		)
	);
}

void android::view::ViewGroup::setAlwaysDrawnWithCacheEnabled(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(93), J2CPP_METHOD_SIGNATURE(93), false>(),
			a0.get_jtype()
		)
	);
}





cpp_int android::view::ViewGroup::getPersistentDrawingCache()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(98), J2CPP_METHOD_SIGNATURE(98), false>()
		)
	);
}

void android::view::ViewGroup::setPersistentDrawingCache(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(99), J2CPP_METHOD_SIGNATURE(99), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< android::view::ViewGroup_::LayoutParams > android::view::ViewGroup::generateLayoutParams(local_ref< android::util::AttributeSet > const &a0)
{
	return local_ref< android::view::ViewGroup_::LayoutParams >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(100), J2CPP_METHOD_SIGNATURE(100), false>(),
			a0.get_jtype()
		)
	);
}




cpp_int android::view::ViewGroup::indexOfChild(local_ref< android::view::View > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(104), J2CPP_METHOD_SIGNATURE(104), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::view::ViewGroup::getChildCount()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(105), J2CPP_METHOD_SIGNATURE(105), false>()
		)
	);
}

local_ref< android::view::View > android::view::ViewGroup::getChildAt(cpp_int const &a0)
{
	return local_ref< android::view::View >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(106), J2CPP_METHOD_SIGNATURE(106), false>(),
			a0.get_jtype()
		)
	);
}




cpp_int android::view::ViewGroup::getChildMeasureSpec(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(110), J2CPP_METHOD_SIGNATURE(110), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::view::ViewGroup::clearDisappearingChildren()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(111), J2CPP_METHOD_SIGNATURE(111), false>()
		)
	);
}

cpp_boolean android::view::ViewGroup::gatherTransparentRegion(local_ref< android::graphics::Region > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(112), J2CPP_METHOD_SIGNATURE(112), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::requestTransparentRegion(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(113), J2CPP_METHOD_SIGNATURE(113), false>(),
			a0.get_jtype()
		)
	);
}


local_ref< android::view::animation::Animation_::AnimationListener > android::view::ViewGroup::getLayoutAnimationListener()
{
	return local_ref< android::view::animation::Animation_::AnimationListener >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(115), J2CPP_METHOD_SIGNATURE(115), false>()
		)
	);
}



void android::view::ViewGroup::setAddStatesFromChildren(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(118), J2CPP_METHOD_SIGNATURE(118), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::view::ViewGroup::addStatesFromChildren()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(119), J2CPP_METHOD_SIGNATURE(119), false>()
		)
	);
}

void android::view::ViewGroup::childDrawableStateChanged(local_ref< android::view::View > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(120), J2CPP_METHOD_SIGNATURE(120), false>(),
			a0.get_jtype()
		)
	);
}

void android::view::ViewGroup::setLayoutAnimationListener(local_ref< android::view::animation::Animation_::AnimationListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(121), J2CPP_METHOD_SIGNATURE(121), false>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(0),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::view::ViewGroup::FOCUS_BEFORE_DESCENDANTS;

static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(1),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::view::ViewGroup::FOCUS_AFTER_DESCENDANTS;

static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(2),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::view::ViewGroup::FOCUS_BLOCK_DESCENDANTS;

static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(3),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::view::ViewGroup::PERSISTENT_NO_CACHE;

static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(4),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::view::ViewGroup::PERSISTENT_ANIMATION_CACHE;

static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(5),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(5),
	cpp_int
> android::view::ViewGroup::PERSISTENT_SCROLLING_CACHE;

static_field<
	android::view::ViewGroup::J2CPP_CLASS_NAME,
	android::view::ViewGroup::J2CPP_FIELD_NAME(6),
	android::view::ViewGroup::J2CPP_FIELD_SIGNATURE(6),
	cpp_int
> android::view::ViewGroup::PERSISTENT_ALL_CACHES;


J2CPP_DEFINE_CLASS(android::view::ViewGroup,"android/view/ViewGroup")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,3,"getDescendantFocusability","()I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,4,"setDescendantFocusability","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,5,"requestChildFocus","(Landroid/view/View;Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,6,"focusableViewAvailable","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,7,"showContextMenuForChild","(Landroid/view/View;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,8,"focusSearch","(Landroid/view/View;I)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,9,"requestChildRectangleOnScreen","(Landroid/view/View;Landroid/graphics/Rect;Z)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,10,"dispatchUnhandledMove","(Landroid/view/View;I)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,11,"clearChildFocus","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,12,"clearFocus","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,13,"getFocusedChild","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,14,"hasFocus","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,15,"findFocus","()Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,16,"hasFocusable","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,17,"addFocusables","(Ljava/util/ArrayList;I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,18,"addFocusables","(Ljava/util/ArrayList;II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,19,"dispatchWindowFocusChanged","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,20,"addTouchables","(Ljava/util/ArrayList;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,21,"dispatchDisplayHint","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,22,"dispatchVisibilityChanged","(Landroid/view/View;I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,23,"dispatchWindowVisibilityChanged","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,24,"dispatchConfigurationChanged","(Landroid/content/res/Configuration;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,25,"recomputeViewAttributes","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,26,"bringChildToFront","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,27,"dispatchKeyEventPreIme","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,28,"dispatchKeyEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,29,"dispatchKeyShortcutEvent","(Landroid/view/KeyEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,30,"dispatchTrackballEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,31,"dispatchTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,32,"requestDisallowInterceptTouchEvent","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,33,"onInterceptTouchEvent","(Landroid/view/MotionEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,34,"requestFocus","(ILandroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,35,"onRequestFocusInDescendants","(ILandroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,36,"dispatchPopulateAccessibilityEvent","(Landroid/view/accessibility/AccessibilityEvent;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,37,"setPadding","(IIII)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,38,"dispatchSaveInstanceState","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,39,"dispatchFreezeSelfOnly","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,40,"dispatchRestoreInstanceState","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,41,"dispatchThawSelfOnly","(Landroid/util/SparseArray;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,42,"setChildrenDrawingCacheEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,43,"onAnimationStart","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,44,"onAnimationEnd","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,45,"dispatchDraw","(Landroid/graphics/Canvas;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,46,"getChildDrawingOrder","(II)I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,47,"drawChild","(Landroid/graphics/Canvas;Landroid/view/View;J)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,48,"setClipChildren","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,49,"setClipToPadding","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,50,"dispatchSetSelected","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,51,"dispatchSetPressed","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,52,"setStaticTransformationsEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,53,"getChildStaticTransformation","(Landroid/view/View;Landroid/view/animation/Transformation;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,54,"addView","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,55,"addView","(Landroid/view/View;I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,56,"addView","(Landroid/view/View;II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,57,"addView","(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,58,"addView","(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,59,"updateViewLayout","(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,60,"checkLayoutParams","(Landroid/view/ViewGroup$LayoutParams;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,61,"setOnHierarchyChangeListener","(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,62,"addViewInLayout","(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,63,"addViewInLayout","(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;Z)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,64,"cleanupLayoutState","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,65,"attachLayoutAnimationParameters","(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,66,"removeView","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,67,"removeViewInLayout","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,68,"removeViewsInLayout","(II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,69,"removeViewAt","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,70,"removeViews","(II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,71,"removeAllViews","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,72,"removeAllViewsInLayout","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,73,"removeDetachedView","(Landroid/view/View;Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,74,"attachViewToParent","(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,75,"detachViewFromParent","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,76,"detachViewFromParent","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,77,"detachViewsFromParent","(II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,78,"detachAllViewsFromParent","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,79,"invalidateChild","(Landroid/view/View;Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,80,"invalidateChildInParent","([ILandroid/graphics/Rect;)Landroid/view/ViewParent;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,81,"offsetDescendantRectToMyCoords","(Landroid/view/View;Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,82,"offsetRectIntoDescendantCoords","(Landroid/view/View;Landroid/graphics/Rect;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,83,"getChildVisibleRect","(Landroid/view/View;Landroid/graphics/Rect;Landroid/graphics/Point;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,84,"onLayout","(ZIIII)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,85,"canAnimate","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,86,"startLayoutAnimation","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,87,"scheduleLayoutAnimation","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,88,"setLayoutAnimation","(Landroid/view/animation/LayoutAnimationController;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,89,"getLayoutAnimation","()Landroid/view/animation/LayoutAnimationController;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,90,"isAnimationCacheEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,91,"setAnimationCacheEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,92,"isAlwaysDrawnWithCacheEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,93,"setAlwaysDrawnWithCacheEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,94,"isChildrenDrawnWithCacheEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,95,"setChildrenDrawnWithCacheEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,96,"isChildrenDrawingOrderEnabled","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,97,"setChildrenDrawingOrderEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,98,"getPersistentDrawingCache","()I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,99,"setPersistentDrawingCache","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,100,"generateLayoutParams","(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,101,"generateLayoutParams","(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,102,"generateDefaultLayoutParams","()Landroid/view/ViewGroup$LayoutParams;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,103,"debug","(I)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,104,"indexOfChild","(Landroid/view/View;)I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,105,"getChildCount","()I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,106,"getChildAt","(I)Landroid/view/View;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,107,"measureChildren","(II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,108,"measureChild","(Landroid/view/View;II)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,109,"measureChildWithMargins","(Landroid/view/View;IIII)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,110,"getChildMeasureSpec","(III)I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,111,"clearDisappearingChildren","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,112,"gatherTransparentRegion","(Landroid/graphics/Region;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,113,"requestTransparentRegion","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,114,"fitSystemWindows","(Landroid/graphics/Rect;)Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,115,"getLayoutAnimationListener","()Landroid/view/animation/Animation$AnimationListener;")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,116,"drawableStateChanged","()V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,117,"onCreateDrawableState","(I)[I")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,118,"setAddStatesFromChildren","(Z)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,119,"addStatesFromChildren","()Z")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,120,"childDrawableStateChanged","(Landroid/view/View;)V")
J2CPP_DEFINE_METHOD(android::view::ViewGroup,121,"setLayoutAnimationListener","(Landroid/view/animation/Animation$AnimationListener;)V")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,0,"FOCUS_BEFORE_DESCENDANTS","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,1,"FOCUS_AFTER_DESCENDANTS","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,2,"FOCUS_BLOCK_DESCENDANTS","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,3,"PERSISTENT_NO_CACHE","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,4,"PERSISTENT_ANIMATION_CACHE","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,5,"PERSISTENT_SCROLLING_CACHE","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,6,"PERSISTENT_ALL_CACHES","I")
J2CPP_DEFINE_FIELD(android::view::ViewGroup,7,"CLIP_TO_PADDING_MASK","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_VIEWGROUP_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
