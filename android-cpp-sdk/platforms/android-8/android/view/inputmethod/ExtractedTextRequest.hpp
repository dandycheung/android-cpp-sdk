/*================================================================================
  code generated by: java2cpp
  class: android.view.inputmethod.ExtractedTextRequest
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXTREQUEST_HPP_DECL
#define J2CPP_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXTREQUEST_HPP_DECL


namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }


#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>


namespace j2cpp {

namespace android { namespace view { namespace inputmethod {

	class ExtractedTextRequest;
	class ExtractedTextRequest
		: public cpp_object<ExtractedTextRequest>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)

		ExtractedTextRequest(jobject jobj)
		: cpp_object<ExtractedTextRequest>(jobj)
		, token(jobj)
		, flags(jobj)
		, hintMaxLines(jobj)
		, hintMaxChars(jobj)
		{
		}

		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);
		cpp_int describeContents();

		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > token;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > flags;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > hintMaxLines;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > hintMaxChars;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class ExtractedTextRequest

} //namespace inputmethod
} //namespace view
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXTREQUEST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXTREQUEST_HPP_IMPL
#define J2CPP_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXTREQUEST_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::view::inputmethod::ExtractedTextRequest > create< android::view::inputmethod::ExtractedTextRequest>()
{
	return local_ref< android::view::inputmethod::ExtractedTextRequest >(
		environment::get().get_jenv()->NewObject(
			get_class<android::view::inputmethod::ExtractedTextRequest::J2CPP_CLASS_NAME>(),
			get_method_id<android::view::inputmethod::ExtractedTextRequest::J2CPP_CLASS_NAME, android::view::inputmethod::ExtractedTextRequest::J2CPP_METHOD_NAME(0), android::view::inputmethod::ExtractedTextRequest::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::view::inputmethod::ExtractedTextRequest::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::view::inputmethod::ExtractedTextRequest::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


static_field<
	android::view::inputmethod::ExtractedTextRequest::J2CPP_CLASS_NAME,
	android::view::inputmethod::ExtractedTextRequest::J2CPP_FIELD_NAME(4),
	android::view::inputmethod::ExtractedTextRequest::J2CPP_FIELD_SIGNATURE(4),
	local_ref< android::os::Parcelable_::Creator >
> android::view::inputmethod::ExtractedTextRequest::CREATOR;


J2CPP_DEFINE_CLASS(android::view::inputmethod::ExtractedTextRequest,"android/view/inputmethod/ExtractedTextRequest")
J2CPP_DEFINE_METHOD(android::view::inputmethod::ExtractedTextRequest,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::ExtractedTextRequest,1,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::view::inputmethod::ExtractedTextRequest,2,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::view::inputmethod::ExtractedTextRequest,3,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::view::inputmethod::ExtractedTextRequest,0,"token","I")
J2CPP_DEFINE_FIELD(android::view::inputmethod::ExtractedTextRequest,1,"flags","I")
J2CPP_DEFINE_FIELD(android::view::inputmethod::ExtractedTextRequest,2,"hintMaxLines","I")
J2CPP_DEFINE_FIELD(android::view::inputmethod::ExtractedTextRequest,3,"hintMaxChars","I")
J2CPP_DEFINE_FIELD(android::view::inputmethod::ExtractedTextRequest,4,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXTREQUEST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
