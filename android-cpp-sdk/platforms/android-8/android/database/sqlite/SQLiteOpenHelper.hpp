/*================================================================================
  code generated by: java2cpp
  class: android.database.sqlite.SQLiteOpenHelper
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_SQLITE_SQLITEOPENHELPER_HPP_DECL
#define J2CPP_ANDROID_DATABASE_SQLITE_SQLITEOPENHELPER_HPP_DECL


namespace j2cpp { namespace android { namespace database { namespace sqlite { class SQLiteDatabase; } } } }
namespace j2cpp { namespace android { namespace database { namespace sqlite { namespace SQLiteDatabase_ { class CursorFactory; } } } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <android/content/Context.hpp>
#include <android/database/sqlite/SQLiteDatabase.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace database { namespace sqlite {

	class SQLiteOpenHelper;
	class SQLiteOpenHelper
		: public cpp_object<SQLiteOpenHelper>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		SQLiteOpenHelper(jobject jobj)
		: cpp_object<SQLiteOpenHelper>(jobj)
		{
		}

		local_ref< android::database::sqlite::SQLiteDatabase > getWritableDatabase();
		local_ref< android::database::sqlite::SQLiteDatabase > getReadableDatabase();
		void close();
		void onCreate(local_ref< android::database::sqlite::SQLiteDatabase > const&);
		void onUpgrade(local_ref< android::database::sqlite::SQLiteDatabase > const&, cpp_int const&, cpp_int const&);
		void onOpen(local_ref< android::database::sqlite::SQLiteDatabase > const&);
	}; //class SQLiteOpenHelper

} //namespace sqlite
} //namespace database
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_SQLITE_SQLITEOPENHELPER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_SQLITE_SQLITEOPENHELPER_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_SQLITE_SQLITEOPENHELPER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::database::sqlite::SQLiteOpenHelper > create< android::database::sqlite::SQLiteOpenHelper>(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::database::sqlite::SQLiteDatabase_::CursorFactory > const &a2, cpp_int const &a3)
{
	return local_ref< android::database::sqlite::SQLiteOpenHelper >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::sqlite::SQLiteOpenHelper::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::sqlite::SQLiteOpenHelper::J2CPP_CLASS_NAME, android::database::sqlite::SQLiteOpenHelper::J2CPP_METHOD_NAME(0), android::database::sqlite::SQLiteOpenHelper::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< android::database::sqlite::SQLiteDatabase > android::database::sqlite::SQLiteOpenHelper::getWritableDatabase()
{
	return local_ref< android::database::sqlite::SQLiteDatabase >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< android::database::sqlite::SQLiteDatabase > android::database::sqlite::SQLiteOpenHelper::getReadableDatabase()
{
	return local_ref< android::database::sqlite::SQLiteDatabase >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void android::database::sqlite::SQLiteOpenHelper::close()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::database::sqlite::SQLiteOpenHelper::onCreate(local_ref< android::database::sqlite::SQLiteDatabase > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteOpenHelper::onUpgrade(local_ref< android::database::sqlite::SQLiteDatabase > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::database::sqlite::SQLiteOpenHelper::onOpen(local_ref< android::database::sqlite::SQLiteDatabase > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::database::sqlite::SQLiteOpenHelper,"android/database/sqlite/SQLiteOpenHelper")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,0,"<init>","(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,1,"getWritableDatabase","()Landroid/database/sqlite/SQLiteDatabase;")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,2,"getReadableDatabase","()Landroid/database/sqlite/SQLiteDatabase;")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,3,"close","()V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,4,"onCreate","(Landroid/database/sqlite/SQLiteDatabase;)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,5,"onUpgrade","(Landroid/database/sqlite/SQLiteDatabase;II)V")
J2CPP_DEFINE_METHOD(android::database::sqlite::SQLiteOpenHelper,6,"onOpen","(Landroid/database/sqlite/SQLiteDatabase;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_SQLITE_SQLITEOPENHELPER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
