/*================================================================================
  code generated by: java2cpp
  class: android.database.ContentObservable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_CONTENTOBSERVABLE_HPP_DECL
#define J2CPP_ANDROID_DATABASE_CONTENTOBSERVABLE_HPP_DECL


namespace j2cpp { namespace android { namespace database { class ContentObserver; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/database/ContentObserver.hpp>
#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace database {

	class ContentObservable;
	class ContentObservable
		: public cpp_object<ContentObservable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)

		ContentObservable(jobject jobj)
		: cpp_object<ContentObservable>(jobj)
		{
		}

		void registerObserver(local_ref< android::database::ContentObserver > const&);
		void dispatchChange(cpp_boolean const&);
		void notifyChange(cpp_boolean const&);
		void registerObserver(local_ref< java::lang::Object > const&);
	}; //class ContentObservable

} //namespace database
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_CONTENTOBSERVABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_DATABASE_CONTENTOBSERVABLE_HPP_IMPL
#define J2CPP_ANDROID_DATABASE_CONTENTOBSERVABLE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::database::ContentObservable > create< android::database::ContentObservable>()
{
	return local_ref< android::database::ContentObservable >(
		environment::get().get_jenv()->NewObject(
			get_class<android::database::ContentObservable::J2CPP_CLASS_NAME>(),
			get_method_id<android::database::ContentObservable::J2CPP_CLASS_NAME, android::database::ContentObservable::J2CPP_METHOD_NAME(0), android::database::ContentObservable::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::database::ContentObservable::registerObserver(local_ref< android::database::ContentObserver > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::ContentObservable::dispatchChange(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::ContentObservable::notifyChange(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::database::ContentObservable::registerObserver(local_ref< java::lang::Object > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::database::ContentObservable,"android/database/ContentObservable")
J2CPP_DEFINE_METHOD(android::database::ContentObservable,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::database::ContentObservable,1,"registerObserver","(Landroid/database/ContentObserver;)V")
J2CPP_DEFINE_METHOD(android::database::ContentObservable,2,"dispatchChange","(Z)V")
J2CPP_DEFINE_METHOD(android::database::ContentObservable,3,"notifyChange","(Z)V")
J2CPP_DEFINE_METHOD(android::database::ContentObservable,4,"registerObserver","(Ljava/lang/Object;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_DATABASE_CONTENTOBSERVABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
