/*================================================================================
  code generated by: java2cpp
  class: android.graphics.ColorMatrix
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_COLORMATRIX_HPP_DECL
#define J2CPP_ANDROID_GRAPHICS_COLORMATRIX_HPP_DECL






namespace j2cpp {

namespace android { namespace graphics {

	class ColorMatrix;
	class ColorMatrix
		: public cpp_object<ColorMatrix>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)

		ColorMatrix(jobject jobj)
		: cpp_object<ColorMatrix>(jobj)
		{
		}

		local_ref< cpp_float_array<1> > getArray();
		void reset();
		void set(local_ref< android::graphics::ColorMatrix > const&);
		void set(local_ref< cpp_float_array<1> > const&);
		void setScale(cpp_float const&, cpp_float const&, cpp_float const&, cpp_float const&);
		void setRotate(cpp_int const&, cpp_float const&);
		void setConcat(local_ref< android::graphics::ColorMatrix > const&, local_ref< android::graphics::ColorMatrix > const&);
		void preConcat(local_ref< android::graphics::ColorMatrix > const&);
		void postConcat(local_ref< android::graphics::ColorMatrix > const&);
		void setSaturation(cpp_float const&);
		void setRGB2YUV();
		void setYUV2RGB();
	}; //class ColorMatrix

} //namespace graphics
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_COLORMATRIX_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_GRAPHICS_COLORMATRIX_HPP_IMPL
#define J2CPP_ANDROID_GRAPHICS_COLORMATRIX_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::graphics::ColorMatrix > create< android::graphics::ColorMatrix>()
{
	return local_ref< android::graphics::ColorMatrix >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::ColorMatrix::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::ColorMatrix::J2CPP_CLASS_NAME, android::graphics::ColorMatrix::J2CPP_METHOD_NAME(0), android::graphics::ColorMatrix::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< android::graphics::ColorMatrix > create< android::graphics::ColorMatrix>(local_ref< cpp_float_array<1> > const &a0)
{
	return local_ref< android::graphics::ColorMatrix >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::ColorMatrix::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::ColorMatrix::J2CPP_CLASS_NAME, android::graphics::ColorMatrix::J2CPP_METHOD_NAME(1), android::graphics::ColorMatrix::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::graphics::ColorMatrix > create< android::graphics::ColorMatrix>(local_ref< android::graphics::ColorMatrix > const &a0)
{
	return local_ref< android::graphics::ColorMatrix >(
		environment::get().get_jenv()->NewObject(
			get_class<android::graphics::ColorMatrix::J2CPP_CLASS_NAME>(),
			get_method_id<android::graphics::ColorMatrix::J2CPP_CLASS_NAME, android::graphics::ColorMatrix::J2CPP_METHOD_NAME(2), android::graphics::ColorMatrix::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_float_array<1> > android::graphics::ColorMatrix::getArray()
{
	return local_ref< cpp_float_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void android::graphics::ColorMatrix::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::graphics::ColorMatrix::set(local_ref< android::graphics::ColorMatrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::set(local_ref< cpp_float_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::setScale(cpp_float const &a0, cpp_float const &a1, cpp_float const &a2, cpp_float const &a3)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::setRotate(cpp_int const &a0, cpp_float const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::setConcat(local_ref< android::graphics::ColorMatrix > const &a0, local_ref< android::graphics::ColorMatrix > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::preConcat(local_ref< android::graphics::ColorMatrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::postConcat(local_ref< android::graphics::ColorMatrix > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::setSaturation(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

void android::graphics::ColorMatrix::setRGB2YUV()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

void android::graphics::ColorMatrix::setYUV2RGB()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::graphics::ColorMatrix,"android/graphics/ColorMatrix")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,1,"<init>","([F)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,2,"<init>","(Landroid/graphics/ColorMatrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,3,"getArray","()[F")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,4,"reset","()V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,5,"set","(Landroid/graphics/ColorMatrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,6,"set","([F)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,7,"setScale","(FFFF)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,8,"setRotate","(IF)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,9,"setConcat","(Landroid/graphics/ColorMatrix;Landroid/graphics/ColorMatrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,10,"preConcat","(Landroid/graphics/ColorMatrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,11,"postConcat","(Landroid/graphics/ColorMatrix;)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,12,"setSaturation","(F)V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,13,"setRGB2YUV","()V")
J2CPP_DEFINE_METHOD(android::graphics::ColorMatrix,14,"setYUV2RGB","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_GRAPHICS_COLORMATRIX_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
