/*================================================================================
  code generated by: java2cpp
  class: android.widget.TimePicker
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_DECL
#define J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_DECL


namespace j2cpp { namespace android { namespace widget { namespace TimePicker_ { class OnTimeChangedListener; } } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace android { namespace util { class AttributeSet; } } }
namespace j2cpp { namespace java { namespace lang { class Integer; } } }
namespace j2cpp { namespace java { namespace lang { class Boolean; } } }


#include <android/content/Context.hpp>
#include <android/util/AttributeSet.hpp>
#include <android/widget/TimePicker.hpp>
#include <java/lang/Boolean.hpp>
#include <java/lang/Integer.hpp>


namespace j2cpp {

namespace android { namespace widget {

	class TimePicker;
	namespace TimePicker_ {

		class OnTimeChangedListener;
		class OnTimeChangedListener
			: public cpp_object<OnTimeChangedListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			OnTimeChangedListener(jobject jobj)
			: cpp_object<OnTimeChangedListener>(jobj)
			{
			}

			void onTimeChanged(local_ref< android::widget::TimePicker > const&, cpp_int const&, cpp_int const&);
		}; //class OnTimeChangedListener

	} //namespace TimePicker_

	class TimePicker
		: public cpp_object<TimePicker>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)

		typedef TimePicker_::OnTimeChangedListener OnTimeChangedListener;

		TimePicker(jobject jobj)
		: cpp_object<TimePicker>(jobj)
		{
		}

		void setEnabled(cpp_boolean const&);
		void setOnTimeChangedListener(local_ref< android::widget::TimePicker_::OnTimeChangedListener > const&);
		local_ref< java::lang::Integer > getCurrentHour();
		void setCurrentHour(local_ref< java::lang::Integer > const&);
		void setIs24HourView(local_ref< java::lang::Boolean > const&);
		cpp_boolean is24HourView();
		local_ref< java::lang::Integer > getCurrentMinute();
		void setCurrentMinute(local_ref< java::lang::Integer > const&);
		cpp_int getBaseline();
	}; //class TimePicker

} //namespace widget
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_IMPL
#define J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_IMPL

namespace j2cpp {



void android::widget::TimePicker_::OnTimeChangedListener::onTimeChanged(local_ref< android::widget::TimePicker > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::widget::TimePicker_::OnTimeChangedListener,"android/widget/TimePicker$OnTimeChangedListener")
J2CPP_DEFINE_METHOD(android::widget::TimePicker_::OnTimeChangedListener,0,"onTimeChanged","(Landroid/widget/TimePicker;II)V")


template <>
local_ref< android::widget::TimePicker > create< android::widget::TimePicker>(local_ref< android::content::Context > const &a0)
{
	return local_ref< android::widget::TimePicker >(
		environment::get().get_jenv()->NewObject(
			get_class<android::widget::TimePicker::J2CPP_CLASS_NAME>(),
			get_method_id<android::widget::TimePicker::J2CPP_CLASS_NAME, android::widget::TimePicker::J2CPP_METHOD_NAME(0), android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< android::widget::TimePicker > create< android::widget::TimePicker>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1)
{
	return local_ref< android::widget::TimePicker >(
		environment::get().get_jenv()->NewObject(
			get_class<android::widget::TimePicker::J2CPP_CLASS_NAME>(),
			get_method_id<android::widget::TimePicker::J2CPP_CLASS_NAME, android::widget::TimePicker::J2CPP_METHOD_NAME(1), android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

template <>
local_ref< android::widget::TimePicker > create< android::widget::TimePicker>(local_ref< android::content::Context > const &a0, local_ref< android::util::AttributeSet > const &a1, cpp_int const &a2)
{
	return local_ref< android::widget::TimePicker >(
		environment::get().get_jenv()->NewObject(
			get_class<android::widget::TimePicker::J2CPP_CLASS_NAME>(),
			get_method_id<android::widget::TimePicker::J2CPP_CLASS_NAME, android::widget::TimePicker::J2CPP_METHOD_NAME(2), android::widget::TimePicker::J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::widget::TimePicker::setEnabled(cpp_boolean const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}



void android::widget::TimePicker::setOnTimeChangedListener(local_ref< android::widget::TimePicker_::OnTimeChangedListener > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Integer > android::widget::TimePicker::getCurrentHour()
{
	return local_ref< java::lang::Integer >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

void android::widget::TimePicker::setCurrentHour(local_ref< java::lang::Integer > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

void android::widget::TimePicker::setIs24HourView(local_ref< java::lang::Boolean > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::widget::TimePicker::is24HourView()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>()
		)
	);
}

local_ref< java::lang::Integer > android::widget::TimePicker::getCurrentMinute()
{
	return local_ref< java::lang::Integer >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

void android::widget::TimePicker::setCurrentMinute(local_ref< java::lang::Integer > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::widget::TimePicker::getBaseline()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::widget::TimePicker,"android/widget/TimePicker")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,0,"<init>","(Landroid/content/Context;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,1,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,2,"<init>","(Landroid/content/Context;Landroid/util/AttributeSet;I)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,3,"setEnabled","(Z)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,4,"onSaveInstanceState","()Landroid/os/Parcelable;")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,5,"onRestoreInstanceState","(Landroid/os/Parcelable;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,6,"setOnTimeChangedListener","(Landroid/widget/TimePicker$OnTimeChangedListener;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,7,"getCurrentHour","()Ljava/lang/Integer;")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,8,"setCurrentHour","(Ljava/lang/Integer;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,9,"setIs24HourView","(Ljava/lang/Boolean;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,10,"is24HourView","()Z")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,11,"getCurrentMinute","()Ljava/lang/Integer;")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,12,"setCurrentMinute","(Ljava/lang/Integer;)V")
J2CPP_DEFINE_METHOD(android::widget::TimePicker,13,"getBaseline","()I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_WIDGET_TIMEPICKER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
