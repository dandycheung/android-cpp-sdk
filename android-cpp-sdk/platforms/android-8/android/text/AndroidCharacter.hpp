/*================================================================================
  code generated by: java2cpp
  class: android.text.AndroidCharacter
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_DECL
#define J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_DECL






namespace j2cpp {

namespace android { namespace text {

	class AndroidCharacter;
	class AndroidCharacter
		: public cpp_object<AndroidCharacter>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)

		AndroidCharacter(jobject jobj)
		: cpp_object<AndroidCharacter>(jobj)
		{
		}

		static void getDirectionalities(local_ref< cpp_char_array<1> > const&, local_ref< cpp_byte_array<1> > const&, cpp_int const&);
		static cpp_int getEastAsianWidth(cpp_char const&);
		static void getEastAsianWidths(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&, local_ref< cpp_byte_array<1> > const&);
		static cpp_boolean mirror(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&);
		static cpp_char getMirror(cpp_char const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_int > EAST_ASIAN_WIDTH_NEUTRAL;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > EAST_ASIAN_WIDTH_AMBIGUOUS;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > EAST_ASIAN_WIDTH_HALF_WIDTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > EAST_ASIAN_WIDTH_FULL_WIDTH;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > EAST_ASIAN_WIDTH_NARROW;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > EAST_ASIAN_WIDTH_WIDE;
	}; //class AndroidCharacter

} //namespace text
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_IMPL
#define J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::text::AndroidCharacter > create< android::text::AndroidCharacter>()
{
	return local_ref< android::text::AndroidCharacter >(
		environment::get().get_jenv()->NewObject(
			get_class<android::text::AndroidCharacter::J2CPP_CLASS_NAME>(),
			get_method_id<android::text::AndroidCharacter::J2CPP_CLASS_NAME, android::text::AndroidCharacter::J2CPP_METHOD_NAME(0), android::text::AndroidCharacter::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void android::text::AndroidCharacter::getDirectionalities(local_ref< cpp_char_array<1> > const &a0, local_ref< cpp_byte_array<1> > const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::text::AndroidCharacter::getEastAsianWidth(cpp_char const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}

void android::text::AndroidCharacter::getEastAsianWidths(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2, local_ref< cpp_byte_array<1> > const &a3)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_boolean android::text::AndroidCharacter::mirror(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_char android::text::AndroidCharacter::getMirror(cpp_char const &a0)
{
	return cpp_char(
		environment::get().get_jenv()->CallStaticCharMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(0),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(0),
	cpp_int
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_NEUTRAL;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(1),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_AMBIGUOUS;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(2),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_HALF_WIDTH;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(3),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_FULL_WIDTH;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(4),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_NARROW;

static_field<
	android::text::AndroidCharacter::J2CPP_CLASS_NAME,
	android::text::AndroidCharacter::J2CPP_FIELD_NAME(5),
	android::text::AndroidCharacter::J2CPP_FIELD_SIGNATURE(5),
	cpp_int
> android::text::AndroidCharacter::EAST_ASIAN_WIDTH_WIDE;


J2CPP_DEFINE_CLASS(android::text::AndroidCharacter,"android/text/AndroidCharacter")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,1,"getDirectionalities","([C[BI)V")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,2,"getEastAsianWidth","(C)I")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,3,"getEastAsianWidths","([CII[B)V")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,4,"mirror","([CII)Z")
J2CPP_DEFINE_METHOD(android::text::AndroidCharacter,5,"getMirror","(C)C")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,0,"EAST_ASIAN_WIDTH_NEUTRAL","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,1,"EAST_ASIAN_WIDTH_AMBIGUOUS","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,2,"EAST_ASIAN_WIDTH_HALF_WIDTH","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,3,"EAST_ASIAN_WIDTH_FULL_WIDTH","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,4,"EAST_ASIAN_WIDTH_NARROW","I")
J2CPP_DEFINE_FIELD(android::text::AndroidCharacter,5,"EAST_ASIAN_WIDTH_WIDE","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TEXT_ANDROIDCHARACTER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
