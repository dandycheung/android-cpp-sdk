/*================================================================================
  code generated by: java2cpp
  class: android.media.FaceDetector
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_FACEDETECTOR_HPP_DECL
#define J2CPP_ANDROID_MEDIA_FACEDETECTOR_HPP_DECL


namespace j2cpp { namespace android { namespace media { namespace FaceDetector_ { class Face; } } } }
namespace j2cpp { namespace android { namespace graphics { class PointF; } } }
namespace j2cpp { namespace android { namespace graphics { class Bitmap; } } }


#include <android/graphics/Bitmap.hpp>
#include <android/graphics/PointF.hpp>
#include <android/media/FaceDetector.hpp>


namespace j2cpp {

namespace android { namespace media {

	class FaceDetector;
	namespace FaceDetector_ {

		class Face;
		class Face
			: public cpp_object<Face>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_FIELD(0)
			J2CPP_DECLARE_FIELD(1)
			J2CPP_DECLARE_FIELD(2)
			J2CPP_DECLARE_FIELD(3)
			J2CPP_DECLARE_FIELD(4)

			Face(jobject jobj)
			: cpp_object<Face>(jobj)
			{
			}

			cpp_float confidence();
			void getMidPoint(local_ref< android::graphics::PointF > const&);
			cpp_float eyesDistance();
			cpp_float pose(cpp_int const&);

			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_float > CONFIDENCE_THRESHOLD;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_int > EULER_X;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_int > EULER_Y;
			static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > EULER_Z;
		}; //class Face

	} //namespace FaceDetector_

	class FaceDetector
		: public cpp_object<FaceDetector>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		typedef FaceDetector_::Face Face;

		FaceDetector(jobject jobj)
		: cpp_object<FaceDetector>(jobj)
		{
		}

		cpp_int findFaces(local_ref< android::graphics::Bitmap > const&, local_ref< cpp_object_array<android::media::FaceDetector_::Face, 1> > const&);
	}; //class FaceDetector

} //namespace media
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_FACEDETECTOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_MEDIA_FACEDETECTOR_HPP_IMPL
#define J2CPP_ANDROID_MEDIA_FACEDETECTOR_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::media::FaceDetector_::Face > create< android::media::FaceDetector_::Face>(local_ref< android::media::FaceDetector > const &a0)
{
	return local_ref< android::media::FaceDetector_::Face >(
		environment::get().get_jenv()->NewObject(
			get_class<android::media::FaceDetector_::Face::J2CPP_CLASS_NAME>(),
			get_method_id<android::media::FaceDetector_::Face::J2CPP_CLASS_NAME, android::media::FaceDetector_::Face::J2CPP_METHOD_NAME(0), android::media::FaceDetector_::Face::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::media::FaceDetector_::Face::confidence()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::media::FaceDetector_::Face::getMidPoint(local_ref< android::graphics::PointF > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

cpp_float android::media::FaceDetector_::Face::eyesDistance()
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_float android::media::FaceDetector_::Face::pose(cpp_int const &a0)
{
	return cpp_float(
		environment::get().get_jenv()->CallFloatMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::media::FaceDetector_::Face::J2CPP_CLASS_NAME,
	android::media::FaceDetector_::Face::J2CPP_FIELD_NAME(0),
	android::media::FaceDetector_::Face::J2CPP_FIELD_SIGNATURE(0),
	cpp_float
> android::media::FaceDetector_::Face::CONFIDENCE_THRESHOLD;

static_field<
	android::media::FaceDetector_::Face::J2CPP_CLASS_NAME,
	android::media::FaceDetector_::Face::J2CPP_FIELD_NAME(1),
	android::media::FaceDetector_::Face::J2CPP_FIELD_SIGNATURE(1),
	cpp_int
> android::media::FaceDetector_::Face::EULER_X;

static_field<
	android::media::FaceDetector_::Face::J2CPP_CLASS_NAME,
	android::media::FaceDetector_::Face::J2CPP_FIELD_NAME(2),
	android::media::FaceDetector_::Face::J2CPP_FIELD_SIGNATURE(2),
	cpp_int
> android::media::FaceDetector_::Face::EULER_Y;

static_field<
	android::media::FaceDetector_::Face::J2CPP_CLASS_NAME,
	android::media::FaceDetector_::Face::J2CPP_FIELD_NAME(3),
	android::media::FaceDetector_::Face::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::media::FaceDetector_::Face::EULER_Z;


J2CPP_DEFINE_CLASS(android::media::FaceDetector_::Face,"android/media/FaceDetector$Face")
J2CPP_DEFINE_METHOD(android::media::FaceDetector_::Face,0,"<init>","(Landroid/media/FaceDetector;)V")
J2CPP_DEFINE_METHOD(android::media::FaceDetector_::Face,1,"confidence","()F")
J2CPP_DEFINE_METHOD(android::media::FaceDetector_::Face,2,"getMidPoint","(Landroid/graphics/PointF;)V")
J2CPP_DEFINE_METHOD(android::media::FaceDetector_::Face,3,"eyesDistance","()F")
J2CPP_DEFINE_METHOD(android::media::FaceDetector_::Face,4,"pose","(I)F")
J2CPP_DEFINE_FIELD(android::media::FaceDetector_::Face,0,"CONFIDENCE_THRESHOLD","F")
J2CPP_DEFINE_FIELD(android::media::FaceDetector_::Face,1,"EULER_X","I")
J2CPP_DEFINE_FIELD(android::media::FaceDetector_::Face,2,"EULER_Y","I")
J2CPP_DEFINE_FIELD(android::media::FaceDetector_::Face,3,"EULER_Z","I")
J2CPP_DEFINE_FIELD(android::media::FaceDetector_::Face,4,"this$0","Landroid/media/FaceDetector;")


template <>
local_ref< android::media::FaceDetector > create< android::media::FaceDetector>(cpp_int const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return local_ref< android::media::FaceDetector >(
		environment::get().get_jenv()->NewObject(
			get_class<android::media::FaceDetector::J2CPP_CLASS_NAME>(),
			get_method_id<android::media::FaceDetector::J2CPP_CLASS_NAME, android::media::FaceDetector::J2CPP_METHOD_NAME(0), android::media::FaceDetector::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_int android::media::FaceDetector::findFaces(local_ref< android::graphics::Bitmap > const &a0, local_ref< cpp_object_array<android::media::FaceDetector_::Face, 1> > const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}



J2CPP_DEFINE_CLASS(android::media::FaceDetector,"android/media/FaceDetector")
J2CPP_DEFINE_METHOD(android::media::FaceDetector,0,"<init>","(III)V")
J2CPP_DEFINE_METHOD(android::media::FaceDetector,1,"findFaces","(Landroid/graphics/Bitmap;[android.media.FaceDetector.Face)I")
J2CPP_DEFINE_METHOD(android::media::FaceDetector,2,"finalize","()V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_MEDIA_FACEDETECTOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
