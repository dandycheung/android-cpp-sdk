/*================================================================================
  code generated by: java2cpp
  class: android.app.TimePickerDialog
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_APP_TIMEPICKERDIALOG_HPP_DECL
#define J2CPP_ANDROID_APP_TIMEPICKERDIALOG_HPP_DECL


namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace app { namespace TimePickerDialog_ { class OnTimeSetListener; } } } }
namespace j2cpp { namespace android { namespace widget { class TimePicker; } } }
namespace j2cpp { namespace android { namespace content { class DialogInterface; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }


#include <android/app/TimePickerDialog.hpp>
#include <android/content/Context.hpp>
#include <android/content/DialogInterface.hpp>
#include <android/os/Bundle.hpp>
#include <android/widget/TimePicker.hpp>


namespace j2cpp {

namespace android { namespace app {

	class TimePickerDialog;
	namespace TimePickerDialog_ {

		class OnTimeSetListener;
		class OnTimeSetListener
			: public cpp_object<OnTimeSetListener>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)

			OnTimeSetListener(jobject jobj)
			: cpp_object<OnTimeSetListener>(jobj)
			{
			}

			void onTimeSet(local_ref< android::widget::TimePicker > const&, cpp_int const&, cpp_int const&);
		}; //class OnTimeSetListener

	} //namespace TimePickerDialog_

	class TimePickerDialog
		: public cpp_object<TimePickerDialog>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)

		typedef TimePickerDialog_::OnTimeSetListener OnTimeSetListener;

		TimePickerDialog(jobject jobj)
		: cpp_object<TimePickerDialog>(jobj)
		{
		}

		void onClick(local_ref< android::content::DialogInterface > const&, cpp_int const&);
		void onTimeChanged(local_ref< android::widget::TimePicker > const&, cpp_int const&, cpp_int const&);
		void updateTime(cpp_int const&, cpp_int const&);
		local_ref< android::os::Bundle > onSaveInstanceState();
		void onRestoreInstanceState(local_ref< android::os::Bundle > const&);
	}; //class TimePickerDialog

} //namespace app
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_APP_TIMEPICKERDIALOG_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_APP_TIMEPICKERDIALOG_HPP_IMPL
#define J2CPP_ANDROID_APP_TIMEPICKERDIALOG_HPP_IMPL

namespace j2cpp {



void android::app::TimePickerDialog_::OnTimeSetListener::onTimeSet(local_ref< android::widget::TimePicker > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::app::TimePickerDialog_::OnTimeSetListener,"android/app/TimePickerDialog$OnTimeSetListener")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog_::OnTimeSetListener,0,"onTimeSet","(Landroid/widget/TimePicker;II)V")


template <>
local_ref< android::app::TimePickerDialog > create< android::app::TimePickerDialog>(local_ref< android::content::Context > const &a0, local_ref< android::app::TimePickerDialog_::OnTimeSetListener > const &a1, cpp_int const &a2, cpp_int const &a3, cpp_boolean const &a4)
{
	return local_ref< android::app::TimePickerDialog >(
		environment::get().get_jenv()->NewObject(
			get_class<android::app::TimePickerDialog::J2CPP_CLASS_NAME>(),
			get_method_id<android::app::TimePickerDialog::J2CPP_CLASS_NAME, android::app::TimePickerDialog::J2CPP_METHOD_NAME(0), android::app::TimePickerDialog::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

template <>
local_ref< android::app::TimePickerDialog > create< android::app::TimePickerDialog>(local_ref< android::content::Context > const &a0, cpp_int const &a1, local_ref< android::app::TimePickerDialog_::OnTimeSetListener > const &a2, cpp_int const &a3, cpp_int const &a4, cpp_boolean const &a5)
{
	return local_ref< android::app::TimePickerDialog >(
		environment::get().get_jenv()->NewObject(
			get_class<android::app::TimePickerDialog::J2CPP_CLASS_NAME>(),
			get_method_id<android::app::TimePickerDialog::J2CPP_CLASS_NAME, android::app::TimePickerDialog::J2CPP_METHOD_NAME(1), android::app::TimePickerDialog::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype(), a5.get_jtype()
		)
	);
}

void android::app::TimePickerDialog::onClick(local_ref< android::content::DialogInterface > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::app::TimePickerDialog::onTimeChanged(local_ref< android::widget::TimePicker > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void android::app::TimePickerDialog::updateTime(cpp_int const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< android::os::Bundle > android::app::TimePickerDialog::onSaveInstanceState()
{
	return local_ref< android::os::Bundle >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

void android::app::TimePickerDialog::onRestoreInstanceState(local_ref< android::os::Bundle > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::app::TimePickerDialog,"android/app/TimePickerDialog")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,0,"<init>","(Landroid/content/Context;Landroid/app/TimePickerDialog$OnTimeSetListener;IIZ)V")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,1,"<init>","(Landroid/content/Context;ILandroid/app/TimePickerDialog$OnTimeSetListener;IIZ)V")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,2,"onClick","(Landroid/content/DialogInterface;I)V")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,3,"onTimeChanged","(Landroid/widget/TimePicker;II)V")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,4,"updateTime","(II)V")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,5,"onSaveInstanceState","()Landroid/os/Bundle;")
J2CPP_DEFINE_METHOD(android::app::TimePickerDialog,6,"onRestoreInstanceState","(Landroid/os/Bundle;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_APP_TIMEPICKERDIALOG_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
