/*================================================================================
  code generated by: java2cpp
  class: android.util.DebugUtils
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_DEBUGUTILS_HPP_DECL
#define J2CPP_ANDROID_UTIL_DEBUGUTILS_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <java/lang/Object.hpp>


namespace j2cpp {

namespace android { namespace util {

	class DebugUtils;
	class DebugUtils
		: public cpp_object<DebugUtils>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		DebugUtils(jobject jobj)
		: cpp_object<DebugUtils>(jobj)
		{
		}

		static cpp_boolean isObjectSelected(local_ref< java::lang::Object > const&);
	}; //class DebugUtils

} //namespace util
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_DEBUGUTILS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_DEBUGUTILS_HPP_IMPL
#define J2CPP_ANDROID_UTIL_DEBUGUTILS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::util::DebugUtils > create< android::util::DebugUtils>()
{
	return local_ref< android::util::DebugUtils >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::DebugUtils::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::DebugUtils::J2CPP_CLASS_NAME, android::util::DebugUtils::J2CPP_METHOD_NAME(0), android::util::DebugUtils::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean android::util::DebugUtils::isObjectSelected(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::util::DebugUtils,"android/util/DebugUtils")
J2CPP_DEFINE_METHOD(android::util::DebugUtils,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::DebugUtils,1,"isObjectSelected","(Ljava/lang/Object;)Z")

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_DEBUGUTILS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
