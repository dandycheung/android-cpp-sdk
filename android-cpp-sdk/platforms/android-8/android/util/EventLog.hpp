/*================================================================================
  code generated by: java2cpp
  class: android.util.EventLog
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_EVENTLOG_HPP_DECL
#define J2CPP_ANDROID_UTIL_EVENTLOG_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace util { class Collection; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/util/Collection.hpp>


namespace j2cpp {

namespace android { namespace util {

	class EventLog;
	namespace EventLog_ {

		class Event;
		class Event
			: public cpp_object<Event>
		{
		public:

			J2CPP_DECLARE_CLASS

			J2CPP_DECLARE_METHOD(0)
			J2CPP_DECLARE_METHOD(1)
			J2CPP_DECLARE_METHOD(2)
			J2CPP_DECLARE_METHOD(3)
			J2CPP_DECLARE_METHOD(4)
			J2CPP_DECLARE_METHOD(5)

			Event(jobject jobj)
			: cpp_object<Event>(jobj)
			{
			}

			cpp_int getProcessId();
			cpp_int getThreadId();
			cpp_long getTimeNanos();
			cpp_int getTag();
			local_ref< java::lang::Object > getData();
		}; //class Event

	} //namespace EventLog_

	class EventLog
		: public cpp_object<EventLog>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)

		typedef EventLog_::Event Event;

		EventLog(jobject jobj)
		: cpp_object<EventLog>(jobj)
		{
		}

		static cpp_int writeEvent(cpp_int const&, cpp_int const&);
		static cpp_int writeEvent(cpp_int const&, cpp_long const&);
		static cpp_int writeEvent(cpp_int const&, local_ref< java::lang::String > const&);
		static cpp_int writeEvent(cpp_int const&, local_ref< cpp_object_array<java::lang::Object, 1> > const&);
		static void readEvents(local_ref< cpp_int_array<1> > const&, local_ref< java::util::Collection > const&);
		static local_ref< java::lang::String > getTagName(cpp_int const&);
		static cpp_int getTagCode(local_ref< java::lang::String > const&);
	}; //class EventLog

} //namespace util
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_EVENTLOG_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_UTIL_EVENTLOG_HPP_IMPL
#define J2CPP_ANDROID_UTIL_EVENTLOG_HPP_IMPL

namespace j2cpp {



template <>
local_ref< android::util::EventLog_::Event > create< android::util::EventLog_::Event>()
{
	return local_ref< android::util::EventLog_::Event >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::EventLog_::Event::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::EventLog_::Event::J2CPP_CLASS_NAME, android::util::EventLog_::Event::J2CPP_METHOD_NAME(0), android::util::EventLog_::Event::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_int android::util::EventLog_::Event::getProcessId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

cpp_int android::util::EventLog_::Event::getThreadId()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_long android::util::EventLog_::Event::getTimeNanos()
{
	return cpp_long(
		environment::get().get_jenv()->CallLongMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_int android::util::EventLog_::Event::getTag()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::Object > android::util::EventLog_::Event::getData()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(android::util::EventLog_::Event,"android/util/EventLog$Event")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,1,"getProcessId","()I")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,2,"getThreadId","()I")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,3,"getTimeNanos","()J")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,4,"getTag","()I")
J2CPP_DEFINE_METHOD(android::util::EventLog_::Event,5,"getData","()Ljava/lang/Object;")


template <>
local_ref< android::util::EventLog > create< android::util::EventLog>()
{
	return local_ref< android::util::EventLog >(
		environment::get().get_jenv()->NewObject(
			get_class<android::util::EventLog::J2CPP_CLASS_NAME>(),
			get_method_id<android::util::EventLog::J2CPP_CLASS_NAME, android::util::EventLog::J2CPP_METHOD_NAME(0), android::util::EventLog::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_int android::util::EventLog::writeEvent(cpp_int const &a0, cpp_int const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::util::EventLog::writeEvent(cpp_int const &a0, cpp_long const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::util::EventLog::writeEvent(cpp_int const &a0, local_ref< java::lang::String > const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::util::EventLog::writeEvent(cpp_int const &a0, local_ref< cpp_object_array<java::lang::Object, 1> > const &a1)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::util::EventLog::readEvents(local_ref< cpp_int_array<1> > const &a0, local_ref< java::util::Collection > const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::util::EventLog::getTagName(cpp_int const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::util::EventLog::getTagCode(local_ref< java::lang::String > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::util::EventLog,"android/util/EventLog")
J2CPP_DEFINE_METHOD(android::util::EventLog,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::util::EventLog,1,"writeEvent","(II)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,2,"writeEvent","(IJ)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,3,"writeEvent","(ILjava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,4,"writeEvent","(I[java.lang.Object)I")
J2CPP_DEFINE_METHOD(android::util::EventLog,5,"readEvents","([ILjava/util/Collection;)V")
J2CPP_DEFINE_METHOD(android::util::EventLog,6,"getTagName","(I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::util::EventLog,7,"getTagCode","(Ljava/lang/String;)I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_UTIL_EVENTLOG_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
