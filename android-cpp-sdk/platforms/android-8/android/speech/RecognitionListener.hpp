/*================================================================================
  code generated by: java2cpp
  class: android.speech.RecognitionListener
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_SPEECH_RECOGNITIONLISTENER_HPP_DECL
#define J2CPP_ANDROID_SPEECH_RECOGNITIONLISTENER_HPP_DECL


namespace j2cpp { namespace android { namespace os { class Bundle; } } }


#include <android/os/Bundle.hpp>


namespace j2cpp {

namespace android { namespace speech {

	class RecognitionListener;
	class RecognitionListener
		: public cpp_object<RecognitionListener>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)

		RecognitionListener(jobject jobj)
		: cpp_object<RecognitionListener>(jobj)
		{
		}

		void onReadyForSpeech(local_ref< android::os::Bundle > const&);
		void onBeginningOfSpeech();
		void onRmsChanged(cpp_float const&);
		void onBufferReceived(local_ref< cpp_byte_array<1> > const&);
		void onEndOfSpeech();
		void onError(cpp_int const&);
		void onResults(local_ref< android::os::Bundle > const&);
		void onPartialResults(local_ref< android::os::Bundle > const&);
		void onEvent(cpp_int const&, local_ref< android::os::Bundle > const&);
	}; //class RecognitionListener

} //namespace speech
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_SPEECH_RECOGNITIONLISTENER_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_SPEECH_RECOGNITIONLISTENER_HPP_IMPL
#define J2CPP_ANDROID_SPEECH_RECOGNITIONLISTENER_HPP_IMPL

namespace j2cpp {


void android::speech::RecognitionListener::onReadyForSpeech(local_ref< android::os::Bundle > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

void android::speech::RecognitionListener::onBeginningOfSpeech()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::speech::RecognitionListener::onRmsChanged(cpp_float const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void android::speech::RecognitionListener::onBufferReceived(local_ref< cpp_byte_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void android::speech::RecognitionListener::onEndOfSpeech()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void android::speech::RecognitionListener::onError(cpp_int const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void android::speech::RecognitionListener::onResults(local_ref< android::os::Bundle > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void android::speech::RecognitionListener::onPartialResults(local_ref< android::os::Bundle > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

void android::speech::RecognitionListener::onEvent(cpp_int const &a0, local_ref< android::os::Bundle > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(android::speech::RecognitionListener,"android/speech/RecognitionListener")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,0,"onReadyForSpeech","(Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,1,"onBeginningOfSpeech","()V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,2,"onRmsChanged","(F)V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,3,"onBufferReceived","([B)V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,4,"onEndOfSpeech","()V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,5,"onError","(I)V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,6,"onResults","(Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,7,"onPartialResults","(Landroid/os/Bundle;)V")
J2CPP_DEFINE_METHOD(android::speech::RecognitionListener,8,"onEvent","(ILandroid/os/Bundle;)V")

} //namespace j2cpp

#endif //J2CPP_ANDROID_SPEECH_RECOGNITIONLISTENER_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
