/*================================================================================
  code generated by: java2cpp
  class: android.content.PeriodicSync
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_PERIODICSYNC_HPP_DECL
#define J2CPP_ANDROID_CONTENT_PERIODICSYNC_HPP_DECL


namespace j2cpp { namespace android { namespace os { namespace Parcelable_ { class Creator; } } } }
namespace j2cpp { namespace android { namespace os { class Parcel; } } }
namespace j2cpp { namespace android { namespace os { class Bundle; } } }
namespace j2cpp { namespace android { namespace accounts { class Account; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }


#include <android/accounts/Account.hpp>
#include <android/os/Bundle.hpp>
#include <android/os/Parcel.hpp>
#include <android/os/Parcelable.hpp>
#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>


namespace j2cpp {

namespace android { namespace content {

	class PeriodicSync;
	class PeriodicSync
		: public cpp_object<PeriodicSync>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)

		PeriodicSync(jobject jobj)
		: cpp_object<PeriodicSync>(jobj)
		, account(jobj)
		, authority(jobj)
		, extras(jobj)
		, period(jobj)
		{
		}

		cpp_int describeContents();
		void writeToParcel(local_ref< android::os::Parcel > const&, cpp_int const&);
		cpp_boolean equals(local_ref< java::lang::Object > const&);

		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< android::accounts::Account > > account;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), local_ref< java::lang::String > > authority;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), local_ref< android::os::Bundle > > extras;
		field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_long > period;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), local_ref< android::os::Parcelable_::Creator > > CREATOR;
	}; //class PeriodicSync

} //namespace content
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_PERIODICSYNC_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_CONTENT_PERIODICSYNC_HPP_IMPL
#define J2CPP_ANDROID_CONTENT_PERIODICSYNC_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::content::PeriodicSync > create< android::content::PeriodicSync>(local_ref< android::accounts::Account > const &a0, local_ref< java::lang::String > const &a1, local_ref< android::os::Bundle > const &a2, cpp_long const &a3)
{
	return local_ref< android::content::PeriodicSync >(
		environment::get().get_jenv()->NewObject(
			get_class<android::content::PeriodicSync::J2CPP_CLASS_NAME>(),
			get_method_id<android::content::PeriodicSync::J2CPP_CLASS_NAME, android::content::PeriodicSync::J2CPP_METHOD_NAME(0), android::content::PeriodicSync::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

cpp_int android::content::PeriodicSync::describeContents()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void android::content::PeriodicSync::writeToParcel(local_ref< android::os::Parcel > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::content::PeriodicSync::equals(local_ref< java::lang::Object > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::content::PeriodicSync::J2CPP_CLASS_NAME,
	android::content::PeriodicSync::J2CPP_FIELD_NAME(4),
	android::content::PeriodicSync::J2CPP_FIELD_SIGNATURE(4),
	local_ref< android::os::Parcelable_::Creator >
> android::content::PeriodicSync::CREATOR;


J2CPP_DEFINE_CLASS(android::content::PeriodicSync,"android/content/PeriodicSync")
J2CPP_DEFINE_METHOD(android::content::PeriodicSync,0,"<init>","(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V")
J2CPP_DEFINE_METHOD(android::content::PeriodicSync,1,"describeContents","()I")
J2CPP_DEFINE_METHOD(android::content::PeriodicSync,2,"writeToParcel","(Landroid/os/Parcel;I)V")
J2CPP_DEFINE_METHOD(android::content::PeriodicSync,3,"equals","(Ljava/lang/Object;)Z")
J2CPP_DEFINE_METHOD(android::content::PeriodicSync,4,"<clinit>","()V")
J2CPP_DEFINE_FIELD(android::content::PeriodicSync,0,"account","Landroid/accounts/Account;")
J2CPP_DEFINE_FIELD(android::content::PeriodicSync,1,"authority","Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::content::PeriodicSync,2,"extras","Landroid/os/Bundle;")
J2CPP_DEFINE_FIELD(android::content::PeriodicSync,3,"period","J")
J2CPP_DEFINE_FIELD(android::content::PeriodicSync,4,"CREATOR","Landroid/os/Parcelable$Creator;")

} //namespace j2cpp

#endif //J2CPP_ANDROID_CONTENT_PERIODICSYNC_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
