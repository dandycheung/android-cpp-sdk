/*================================================================================
  code generated by: java2cpp
  class: android.telephony.PhoneNumberUtils
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TELEPHONY_PHONENUMBERUTILS_HPP_DECL
#define J2CPP_ANDROID_TELEPHONY_PHONENUMBERUTILS_HPP_DECL


namespace j2cpp { namespace android { namespace text { class Editable; } } }
namespace j2cpp { namespace android { namespace content { class Intent; } } }
namespace j2cpp { namespace android { namespace content { class Context; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace util { class Locale; } } }


#include <android/content/Context.hpp>
#include <android/content/Intent.hpp>
#include <android/text/Editable.hpp>
#include <java/lang/String.hpp>
#include <java/util/Locale.hpp>


namespace j2cpp {

namespace android { namespace telephony {

	class PhoneNumberUtils;
	class PhoneNumberUtils
		: public cpp_object<PhoneNumberUtils>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)
		J2CPP_DECLARE_METHOD(18)
		J2CPP_DECLARE_METHOD(19)
		J2CPP_DECLARE_METHOD(20)
		J2CPP_DECLARE_METHOD(21)
		J2CPP_DECLARE_METHOD(22)
		J2CPP_DECLARE_METHOD(23)
		J2CPP_DECLARE_METHOD(24)
		J2CPP_DECLARE_METHOD(25)
		J2CPP_DECLARE_METHOD(26)
		J2CPP_DECLARE_METHOD(27)
		J2CPP_DECLARE_METHOD(28)
		J2CPP_DECLARE_METHOD(29)
		J2CPP_DECLARE_METHOD(30)
		J2CPP_DECLARE_FIELD(0)
		J2CPP_DECLARE_FIELD(1)
		J2CPP_DECLARE_FIELD(2)
		J2CPP_DECLARE_FIELD(3)
		J2CPP_DECLARE_FIELD(4)
		J2CPP_DECLARE_FIELD(5)
		J2CPP_DECLARE_FIELD(6)
		J2CPP_DECLARE_FIELD(7)

		PhoneNumberUtils(jobject jobj)
		: cpp_object<PhoneNumberUtils>(jobj)
		{
		}

		static cpp_boolean isISODigit(cpp_char const&);
		static cpp_boolean is12Key(cpp_char const&);
		static cpp_boolean isDialable(cpp_char const&);
		static cpp_boolean isReallyDialable(cpp_char const&);
		static cpp_boolean isNonSeparator(cpp_char const&);
		static cpp_boolean isStartsPostDial(cpp_char const&);
		static local_ref< java::lang::String > getNumberFromIntent(local_ref< android::content::Intent > const&, local_ref< android::content::Context > const&);
		static local_ref< java::lang::String > extractNetworkPortion(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > stripSeparators(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > extractPostDialPortion(local_ref< java::lang::String > const&);
		static cpp_boolean compare(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		static cpp_boolean compare(local_ref< android::content::Context > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > toCallerIDMinMatch(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > getStrippedReversed(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > stringFromStringAndTOA(local_ref< java::lang::String > const&, cpp_int const&);
		static cpp_int toaFromString(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > calledPartyBCDToString(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
		static local_ref< java::lang::String > calledPartyBCDFragmentToString(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
		static cpp_boolean isWellFormedSmsAddress(local_ref< java::lang::String > const&);
		static cpp_boolean isGlobalPhoneNumber(local_ref< java::lang::String > const&);
		static local_ref< cpp_byte_array<1> > networkPortionToCalledPartyBCD(local_ref< java::lang::String > const&);
		static local_ref< cpp_byte_array<1> > networkPortionToCalledPartyBCDWithLength(local_ref< java::lang::String > const&);
		static local_ref< cpp_byte_array<1> > numberToCalledPartyBCD(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > formatNumber(local_ref< java::lang::String > const&);
		static cpp_int getFormatTypeForLocale(local_ref< java::util::Locale > const&);
		static void formatNumber(local_ref< android::text::Editable > const&, cpp_int const&);
		static void formatNanpNumber(local_ref< android::text::Editable > const&);
		static void formatJapaneseNumber(local_ref< android::text::Editable > const&);
		static cpp_boolean isEmergencyNumber(local_ref< java::lang::String > const&);
		static local_ref< java::lang::String > convertKeypadLettersToDigits(local_ref< java::lang::String > const&);

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), cpp_char > PAUSE;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(1), J2CPP_FIELD_SIGNATURE(1), cpp_char > WAIT;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(2), J2CPP_FIELD_SIGNATURE(2), cpp_char > WILD;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(3), J2CPP_FIELD_SIGNATURE(3), cpp_int > TOA_International;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(4), J2CPP_FIELD_SIGNATURE(4), cpp_int > TOA_Unknown;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(5), J2CPP_FIELD_SIGNATURE(5), cpp_int > FORMAT_UNKNOWN;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(6), J2CPP_FIELD_SIGNATURE(6), cpp_int > FORMAT_NANP;
		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(7), J2CPP_FIELD_SIGNATURE(7), cpp_int > FORMAT_JAPAN;
	}; //class PhoneNumberUtils

} //namespace telephony
} //namespace android


} //namespace j2cpp

#endif //J2CPP_ANDROID_TELEPHONY_PHONENUMBERUTILS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ANDROID_TELEPHONY_PHONENUMBERUTILS_HPP_IMPL
#define J2CPP_ANDROID_TELEPHONY_PHONENUMBERUTILS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< android::telephony::PhoneNumberUtils > create< android::telephony::PhoneNumberUtils>()
{
	return local_ref< android::telephony::PhoneNumberUtils >(
		environment::get().get_jenv()->NewObject(
			get_class<android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME>(),
			get_method_id<android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME, android::telephony::PhoneNumberUtils::J2CPP_METHOD_NAME(0), android::telephony::PhoneNumberUtils::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isISODigit(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::is12Key(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isDialable(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isReallyDialable(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isNonSeparator(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isStartsPostDial(cpp_char const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::getNumberFromIntent(local_ref< android::content::Intent > const &a0, local_ref< android::content::Context > const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::extractNetworkPortion(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::stripSeparators(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::extractPostDialPortion(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::compare(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::compare(local_ref< android::content::Context > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::toCallerIDMinMatch(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::getStrippedReversed(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::stringFromStringAndTOA(local_ref< java::lang::String > const &a0, cpp_int const &a1)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

cpp_int android::telephony::PhoneNumberUtils::toaFromString(local_ref< java::lang::String > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::calledPartyBCDToString(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::calledPartyBCDFragmentToString(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(18), J2CPP_METHOD_SIGNATURE(18), true>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isWellFormedSmsAddress(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(19), J2CPP_METHOD_SIGNATURE(19), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isGlobalPhoneNumber(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(20), J2CPP_METHOD_SIGNATURE(20), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > android::telephony::PhoneNumberUtils::networkPortionToCalledPartyBCD(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(21), J2CPP_METHOD_SIGNATURE(21), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > android::telephony::PhoneNumberUtils::networkPortionToCalledPartyBCDWithLength(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(22), J2CPP_METHOD_SIGNATURE(22), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > android::telephony::PhoneNumberUtils::numberToCalledPartyBCD(local_ref< java::lang::String > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(23), J2CPP_METHOD_SIGNATURE(23), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::formatNumber(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(24), J2CPP_METHOD_SIGNATURE(24), true>(),
			a0.get_jtype()
		)
	);
}

cpp_int android::telephony::PhoneNumberUtils::getFormatTypeForLocale(local_ref< java::util::Locale > const &a0)
{
	return cpp_int(
		environment::get().get_jenv()->CallStaticIntMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(25), J2CPP_METHOD_SIGNATURE(25), true>(),
			a0.get_jtype()
		)
	);
}

void android::telephony::PhoneNumberUtils::formatNumber(local_ref< android::text::Editable > const &a0, cpp_int const &a1)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(26), J2CPP_METHOD_SIGNATURE(26), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void android::telephony::PhoneNumberUtils::formatNanpNumber(local_ref< android::text::Editable > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(27), J2CPP_METHOD_SIGNATURE(27), true>(),
			a0.get_jtype()
		)
	);
}

void android::telephony::PhoneNumberUtils::formatJapaneseNumber(local_ref< android::text::Editable > const &a0)
{
	return void(
		environment::get().get_jenv()->CallStaticVoidMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(28), J2CPP_METHOD_SIGNATURE(28), true>(),
			a0.get_jtype()
		)
	);
}

cpp_boolean android::telephony::PhoneNumberUtils::isEmergencyNumber(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(29), J2CPP_METHOD_SIGNATURE(29), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > android::telephony::PhoneNumberUtils::convertKeypadLettersToDigits(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(30), J2CPP_METHOD_SIGNATURE(30), true>(),
			a0.get_jtype()
		)
	);
}


static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(0),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(0),
	cpp_char
> android::telephony::PhoneNumberUtils::PAUSE;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(1),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(1),
	cpp_char
> android::telephony::PhoneNumberUtils::WAIT;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(2),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(2),
	cpp_char
> android::telephony::PhoneNumberUtils::WILD;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(3),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(3),
	cpp_int
> android::telephony::PhoneNumberUtils::TOA_International;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(4),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(4),
	cpp_int
> android::telephony::PhoneNumberUtils::TOA_Unknown;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(5),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(5),
	cpp_int
> android::telephony::PhoneNumberUtils::FORMAT_UNKNOWN;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(6),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(6),
	cpp_int
> android::telephony::PhoneNumberUtils::FORMAT_NANP;

static_field<
	android::telephony::PhoneNumberUtils::J2CPP_CLASS_NAME,
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_NAME(7),
	android::telephony::PhoneNumberUtils::J2CPP_FIELD_SIGNATURE(7),
	cpp_int
> android::telephony::PhoneNumberUtils::FORMAT_JAPAN;


J2CPP_DEFINE_CLASS(android::telephony::PhoneNumberUtils,"android/telephony/PhoneNumberUtils")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,0,"<init>","()V")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,1,"isISODigit","(C)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,2,"is12Key","(C)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,3,"isDialable","(C)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,4,"isReallyDialable","(C)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,5,"isNonSeparator","(C)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,6,"isStartsPostDial","(C)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,7,"getNumberFromIntent","(Landroid/content/Intent;Landroid/content/Context;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,8,"extractNetworkPortion","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,9,"stripSeparators","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,10,"extractPostDialPortion","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,11,"compare","(Ljava/lang/String;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,12,"compare","(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,13,"toCallerIDMinMatch","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,14,"getStrippedReversed","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,15,"stringFromStringAndTOA","(Ljava/lang/String;I)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,16,"toaFromString","(Ljava/lang/String;)I")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,17,"calledPartyBCDToString","([BII)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,18,"calledPartyBCDFragmentToString","([BII)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,19,"isWellFormedSmsAddress","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,20,"isGlobalPhoneNumber","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,21,"networkPortionToCalledPartyBCD","(Ljava/lang/String;)[B")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,22,"networkPortionToCalledPartyBCDWithLength","(Ljava/lang/String;)[B")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,23,"numberToCalledPartyBCD","(Ljava/lang/String;)[B")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,24,"formatNumber","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,25,"getFormatTypeForLocale","(Ljava/util/Locale;)I")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,26,"formatNumber","(Landroid/text/Editable;I)V")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,27,"formatNanpNumber","(Landroid/text/Editable;)V")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,28,"formatJapaneseNumber","(Landroid/text/Editable;)V")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,29,"isEmergencyNumber","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(android::telephony::PhoneNumberUtils,30,"convertKeypadLettersToDigits","(Ljava/lang/String;)Ljava/lang/String;")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,0,"PAUSE","C")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,1,"WAIT","C")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,2,"WILD","C")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,3,"TOA_International","I")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,4,"TOA_Unknown","I")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,5,"FORMAT_UNKNOWN","I")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,6,"FORMAT_NANP","I")
J2CPP_DEFINE_FIELD(android::telephony::PhoneNumberUtils,7,"FORMAT_JAPAN","I")

} //namespace j2cpp

#endif //J2CPP_ANDROID_TELEPHONY_PHONENUMBERUTILS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
