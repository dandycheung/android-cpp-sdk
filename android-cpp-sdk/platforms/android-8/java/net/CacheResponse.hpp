/*================================================================================
  code generated by: java2cpp
  class: java.net.CacheResponse
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_CACHERESPONSE_HPP_DECL
#define J2CPP_JAVA_NET_CACHERESPONSE_HPP_DECL


namespace j2cpp { namespace java { namespace util { class Map; } } }
namespace j2cpp { namespace java { namespace io { class InputStream; } } }


#include <java/io/InputStream.hpp>
#include <java/util/Map.hpp>


namespace j2cpp {

namespace java { namespace net {

	class CacheResponse;
	class CacheResponse
		: public cpp_object<CacheResponse>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		CacheResponse(jobject jobj)
		: cpp_object<CacheResponse>(jobj)
		{
		}

		local_ref< java::io::InputStream > getBody();
		local_ref< java::util::Map > getHeaders();
	}; //class CacheResponse

} //namespace net
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_NET_CACHERESPONSE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_NET_CACHERESPONSE_HPP_IMPL
#define J2CPP_JAVA_NET_CACHERESPONSE_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::net::CacheResponse > create< java::net::CacheResponse>()
{
	return local_ref< java::net::CacheResponse >(
		environment::get().get_jenv()->NewObject(
			get_class<java::net::CacheResponse::J2CPP_CLASS_NAME>(),
			get_method_id<java::net::CacheResponse::J2CPP_CLASS_NAME, java::net::CacheResponse::J2CPP_METHOD_NAME(0), java::net::CacheResponse::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::io::InputStream > java::net::CacheResponse::getBody()
{
	return local_ref< java::io::InputStream >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::util::Map > java::net::CacheResponse::getHeaders()
{
	return local_ref< java::util::Map >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::net::CacheResponse,"java/net/CacheResponse")
J2CPP_DEFINE_METHOD(java::net::CacheResponse,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::net::CacheResponse,1,"getBody","()Ljava/io/InputStream;")
J2CPP_DEFINE_METHOD(java::net::CacheResponse,2,"getHeaders","()Ljava/util/Map;")

} //namespace j2cpp

#endif //J2CPP_JAVA_NET_CACHERESPONSE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
