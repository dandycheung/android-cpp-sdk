/*================================================================================
  code generated by: java2cpp
  class: java.security.cert.CertPathBuilderSpi
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_CERT_CERTPATHBUILDERSPI_HPP_DECL
#define J2CPP_JAVA_SECURITY_CERT_CERTPATHBUILDERSPI_HPP_DECL


namespace j2cpp { namespace java { namespace security { namespace cert { class CertPathBuilderResult; } } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class CertPathParameters; } } } }


#include <java/security/cert/CertPathBuilderResult.hpp>
#include <java/security/cert/CertPathParameters.hpp>


namespace j2cpp {

namespace java { namespace security { namespace cert {

	class CertPathBuilderSpi;
	class CertPathBuilderSpi
		: public cpp_object<CertPathBuilderSpi>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		CertPathBuilderSpi(jobject jobj)
		: cpp_object<CertPathBuilderSpi>(jobj)
		{
		}

		local_ref< java::security::cert::CertPathBuilderResult > engineBuild(local_ref< java::security::cert::CertPathParameters > const&);
	}; //class CertPathBuilderSpi

} //namespace cert
} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_CERT_CERTPATHBUILDERSPI_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_CERT_CERTPATHBUILDERSPI_HPP_IMPL
#define J2CPP_JAVA_SECURITY_CERT_CERTPATHBUILDERSPI_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::security::cert::CertPathBuilderSpi > create< java::security::cert::CertPathBuilderSpi>()
{
	return local_ref< java::security::cert::CertPathBuilderSpi >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::cert::CertPathBuilderSpi::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::cert::CertPathBuilderSpi::J2CPP_CLASS_NAME, java::security::cert::CertPathBuilderSpi::J2CPP_METHOD_NAME(0), java::security::cert::CertPathBuilderSpi::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::security::cert::CertPathBuilderResult > java::security::cert::CertPathBuilderSpi::engineBuild(local_ref< java::security::cert::CertPathParameters > const &a0)
{
	return local_ref< java::security::cert::CertPathBuilderResult >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::cert::CertPathBuilderSpi,"java/security/cert/CertPathBuilderSpi")
J2CPP_DEFINE_METHOD(java::security::cert::CertPathBuilderSpi,0,"<init>","()V")
J2CPP_DEFINE_METHOD(java::security::cert::CertPathBuilderSpi,1,"engineBuild","(Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathBuilderResult;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_CERT_CERTPATHBUILDERSPI_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
