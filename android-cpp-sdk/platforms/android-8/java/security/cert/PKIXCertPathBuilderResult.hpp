/*================================================================================
  code generated by: java2cpp
  class: java.security.cert.PKIXCertPathBuilderResult
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_CERT_PKIXCERTPATHBUILDERRESULT_HPP_DECL
#define J2CPP_JAVA_SECURITY_CERT_PKIXCERTPATHBUILDERRESULT_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace security { class PublicKey; } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class CertPath; } } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class TrustAnchor; } } } }
namespace j2cpp { namespace java { namespace security { namespace cert { class PolicyNode; } } } }


#include <java/lang/String.hpp>
#include <java/security/PublicKey.hpp>
#include <java/security/cert/CertPath.hpp>
#include <java/security/cert/PolicyNode.hpp>
#include <java/security/cert/TrustAnchor.hpp>


namespace j2cpp {

namespace java { namespace security { namespace cert {

	class PKIXCertPathBuilderResult;
	class PKIXCertPathBuilderResult
		: public cpp_object<PKIXCertPathBuilderResult>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		PKIXCertPathBuilderResult(jobject jobj)
		: cpp_object<PKIXCertPathBuilderResult>(jobj)
		{
		}

		local_ref< java::security::cert::CertPath > getCertPath();
		local_ref< java::lang::String > toString();
	}; //class PKIXCertPathBuilderResult

} //namespace cert
} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_CERT_PKIXCERTPATHBUILDERRESULT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_CERT_PKIXCERTPATHBUILDERRESULT_HPP_IMPL
#define J2CPP_JAVA_SECURITY_CERT_PKIXCERTPATHBUILDERRESULT_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::security::cert::PKIXCertPathBuilderResult > create< java::security::cert::PKIXCertPathBuilderResult>(local_ref< java::security::cert::CertPath > const &a0, local_ref< java::security::cert::TrustAnchor > const &a1, local_ref< java::security::cert::PolicyNode > const &a2, local_ref< java::security::PublicKey > const &a3)
{
	return local_ref< java::security::cert::PKIXCertPathBuilderResult >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::cert::PKIXCertPathBuilderResult::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::cert::PKIXCertPathBuilderResult::J2CPP_CLASS_NAME, java::security::cert::PKIXCertPathBuilderResult::J2CPP_METHOD_NAME(0), java::security::cert::PKIXCertPathBuilderResult::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::security::cert::CertPath > java::security::cert::PKIXCertPathBuilderResult::getCertPath()
{
	return local_ref< java::security::cert::CertPath >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::String > java::security::cert::PKIXCertPathBuilderResult::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::cert::PKIXCertPathBuilderResult,"java/security/cert/PKIXCertPathBuilderResult")
J2CPP_DEFINE_METHOD(java::security::cert::PKIXCertPathBuilderResult,0,"<init>","(Ljava/security/cert/CertPath;Ljava/security/cert/TrustAnchor;Ljava/security/cert/PolicyNode;Ljava/security/PublicKey;)V")
J2CPP_DEFINE_METHOD(java::security::cert::PKIXCertPathBuilderResult,1,"getCertPath","()Ljava/security/cert/CertPath;")
J2CPP_DEFINE_METHOD(java::security::cert::PKIXCertPathBuilderResult,2,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_CERT_PKIXCERTPATHBUILDERRESULT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
