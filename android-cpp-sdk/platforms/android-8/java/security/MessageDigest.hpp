/*================================================================================
  code generated by: java2cpp
  class: java.security.MessageDigest
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_MESSAGEDIGEST_HPP_DECL
#define J2CPP_JAVA_SECURITY_MESSAGEDIGEST_HPP_DECL


namespace j2cpp { namespace java { namespace nio { class ByteBuffer; } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace java { namespace security { class Provider; } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <java/nio/ByteBuffer.hpp>
#include <java/security/Provider.hpp>


namespace j2cpp {

namespace java { namespace security {

	class MessageDigest;
	class MessageDigest
		: public cpp_object<MessageDigest>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)
		J2CPP_DECLARE_METHOD(15)
		J2CPP_DECLARE_METHOD(16)
		J2CPP_DECLARE_METHOD(17)

		MessageDigest(jobject jobj)
		: cpp_object<MessageDigest>(jobj)
		{
		}

		static local_ref< java::security::MessageDigest > getInstance(local_ref< java::lang::String > const&);
		static local_ref< java::security::MessageDigest > getInstance(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		static local_ref< java::security::MessageDigest > getInstance(local_ref< java::lang::String > const&, local_ref< java::security::Provider > const&);
		void reset();
		void update(cpp_byte const&);
		void update(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
		void update(local_ref< cpp_byte_array<1> > const&);
		local_ref< cpp_byte_array<1> > digest();
		cpp_int digest(local_ref< cpp_byte_array<1> > const&, cpp_int const&, cpp_int const&);
		local_ref< cpp_byte_array<1> > digest(local_ref< cpp_byte_array<1> > const&);
		local_ref< java::lang::String > toString();
		static cpp_boolean isEqual(local_ref< cpp_byte_array<1> > const&, local_ref< cpp_byte_array<1> > const&);
		local_ref< java::lang::String > getAlgorithm();
		local_ref< java::security::Provider > getProvider();
		cpp_int getDigestLength();
		local_ref< java::lang::Object > clone();
		void update(local_ref< java::nio::ByteBuffer > const&);
	}; //class MessageDigest

} //namespace security
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_MESSAGEDIGEST_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_SECURITY_MESSAGEDIGEST_HPP_IMPL
#define J2CPP_JAVA_SECURITY_MESSAGEDIGEST_HPP_IMPL

namespace j2cpp {


template <>
local_ref< java::security::MessageDigest > create< java::security::MessageDigest>(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::security::MessageDigest >(
		environment::get().get_jenv()->NewObject(
			get_class<java::security::MessageDigest::J2CPP_CLASS_NAME>(),
			get_method_id<java::security::MessageDigest::J2CPP_CLASS_NAME, java::security::MessageDigest::J2CPP_METHOD_NAME(0), java::security::MessageDigest::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::security::MessageDigest > java::security::MessageDigest::getInstance(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::security::MessageDigest >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::security::MessageDigest > java::security::MessageDigest::getInstance(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< java::security::MessageDigest >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::security::MessageDigest > java::security::MessageDigest::getInstance(local_ref< java::lang::String > const &a0, local_ref< java::security::Provider > const &a1)
{
	return local_ref< java::security::MessageDigest >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void java::security::MessageDigest::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void java::security::MessageDigest::update(cpp_byte const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void java::security::MessageDigest::update(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void java::security::MessageDigest::update(local_ref< cpp_byte_array<1> > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > java::security::MessageDigest::digest()
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>()
		)
	);
}

cpp_int java::security::MessageDigest::digest(local_ref< cpp_byte_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

local_ref< cpp_byte_array<1> > java::security::MessageDigest::digest(local_ref< cpp_byte_array<1> > const &a0)
{
	return local_ref< cpp_byte_array<1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::security::MessageDigest::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>()
		)
	);
}

cpp_boolean java::security::MessageDigest::isEqual(local_ref< cpp_byte_array<1> > const &a0, local_ref< cpp_byte_array<1> > const &a1)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallStaticBooleanMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), true>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::String > java::security::MessageDigest::getAlgorithm()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>()
		)
	);
}

local_ref< java::security::Provider > java::security::MessageDigest::getProvider()
{
	return local_ref< java::security::Provider >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>()
		)
	);
}

cpp_int java::security::MessageDigest::getDigestLength()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(15), J2CPP_METHOD_SIGNATURE(15), false>()
		)
	);
}

local_ref< java::lang::Object > java::security::MessageDigest::clone()
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(16), J2CPP_METHOD_SIGNATURE(16), false>()
		)
	);
}

void java::security::MessageDigest::update(local_ref< java::nio::ByteBuffer > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(17), J2CPP_METHOD_SIGNATURE(17), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(java::security::MessageDigest,"java/security/MessageDigest")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,1,"getInstance","(Ljava/lang/String;)Ljava/security/MessageDigest;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,2,"getInstance","(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,3,"getInstance","(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,4,"reset","()V")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,5,"update","(B)V")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,6,"update","([BII)V")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,7,"update","([B)V")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,8,"digest","()[B")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,9,"digest","([BII)I")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,10,"digest","([B)[B")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,11,"toString","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,12,"isEqual","([B[B)Z")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,13,"getAlgorithm","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,14,"getProvider","()Ljava/security/Provider;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,15,"getDigestLength","()I")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,16,"clone","()Ljava/lang/Object;")
J2CPP_DEFINE_METHOD(java::security::MessageDigest,17,"update","(Ljava/nio/ByteBuffer;)V")

} //namespace j2cpp

#endif //J2CPP_JAVA_SECURITY_MESSAGEDIGEST_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
