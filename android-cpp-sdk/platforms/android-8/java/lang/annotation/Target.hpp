/*================================================================================
  code generated by: java2cpp
  class: java.lang.annotation.Target
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_ANNOTATION_TARGET_HPP_DECL
#define J2CPP_JAVA_LANG_ANNOTATION_TARGET_HPP_DECL


namespace j2cpp { namespace java { namespace lang { namespace annotation { class ElementType; } } } }


#include <java/lang/annotation/ElementType.hpp>


namespace j2cpp {

namespace java { namespace lang { namespace annotation {

	class Target;
	class Target
		: public cpp_object<Target>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		Target(jobject jobj)
		: cpp_object<Target>(jobj)
		{
		}

		local_ref< cpp_object_array<java::lang::annotation::ElementType, 1> > value();
	}; //class Target

} //namespace annotation
} //namespace lang
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_ANNOTATION_TARGET_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_ANNOTATION_TARGET_HPP_IMPL
#define J2CPP_JAVA_LANG_ANNOTATION_TARGET_HPP_IMPL

namespace j2cpp {


local_ref< cpp_object_array<java::lang::annotation::ElementType, 1> > java::lang::annotation::Target::value()
{
	return local_ref< cpp_object_array<java::lang::annotation::ElementType, 1> >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::lang::annotation::Target,"java/lang/annotation/Target")
J2CPP_DEFINE_METHOD(java::lang::annotation::Target,0,"value","()[java.lang.annotation.ElementType")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_ANNOTATION_TARGET_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
