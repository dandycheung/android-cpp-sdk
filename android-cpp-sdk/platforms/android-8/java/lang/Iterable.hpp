/*================================================================================
  code generated by: java2cpp
  class: java.lang.Iterable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_ITERABLE_HPP_DECL
#define J2CPP_JAVA_LANG_ITERABLE_HPP_DECL


namespace j2cpp { namespace java { namespace util { class Iterator; } } }


#include <java/util/Iterator.hpp>


namespace j2cpp {

namespace java { namespace lang {

	class Iterable;
	class Iterable
		: public cpp_object<Iterable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		Iterable(jobject jobj)
		: cpp_object<Iterable>(jobj)
		{
		}

		local_ref< java::util::Iterator > iterator();
	}; //class Iterable

} //namespace lang
} //namespace java


} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_ITERABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVA_LANG_ITERABLE_HPP_IMPL
#define J2CPP_JAVA_LANG_ITERABLE_HPP_IMPL

namespace j2cpp {


local_ref< java::util::Iterator > java::lang::Iterable::iterator()
{
	return local_ref< java::util::Iterator >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(java::lang::Iterable,"java/lang/Iterable")
J2CPP_DEFINE_METHOD(java::lang::Iterable,0,"iterator","()Ljava/util/Iterator;")

} //namespace j2cpp

#endif //J2CPP_JAVA_LANG_ITERABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
