/*================================================================================
  code generated by: java2cpp
  class: org.apache.http.cookie.CookieOrigin
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_DECL
#define J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace apache { namespace http { namespace cookie {

	class CookieOrigin;
	class CookieOrigin
		: public cpp_object<CookieOrigin>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		CookieOrigin(jobject jobj)
		: cpp_object<CookieOrigin>(jobj)
		{
		}

		local_ref< java::lang::String > getHost();
		local_ref< java::lang::String > getPath();
		cpp_int getPort();
		cpp_boolean isSecure();
		local_ref< java::lang::String > toString();
	}; //class CookieOrigin

} //namespace cookie
} //namespace http
} //namespace apache
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_IMPL
#define J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::apache::http::cookie::CookieOrigin > create< org::apache::http::cookie::CookieOrigin>(local_ref< java::lang::String > const &a0, cpp_int const &a1, local_ref< java::lang::String > const &a2, cpp_boolean const &a3)
{
	return local_ref< org::apache::http::cookie::CookieOrigin >(
		environment::get().get_jenv()->NewObject(
			get_class<org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME>(),
			get_method_id<org::apache::http::cookie::CookieOrigin::J2CPP_CLASS_NAME, org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_NAME(0), org::apache::http::cookie::CookieOrigin::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< java::lang::String > org::apache::http::cookie::CookieOrigin::getHost()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

local_ref< java::lang::String > org::apache::http::cookie::CookieOrigin::getPath()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

cpp_int org::apache::http::cookie::CookieOrigin::getPort()
{
	return cpp_int(
		environment::get().get_jenv()->CallIntMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

cpp_boolean org::apache::http::cookie::CookieOrigin::isSecure()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

local_ref< java::lang::String > org::apache::http::cookie::CookieOrigin::toString()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(org::apache::http::cookie::CookieOrigin,"org/apache/http/cookie/CookieOrigin")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,0,"<init>","(Ljava/lang/String;ILjava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,1,"getHost","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,2,"getPath","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,3,"getPort","()I")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,4,"isSecure","()Z")
J2CPP_DEFINE_METHOD(org::apache::http::cookie::CookieOrigin,5,"toString","()Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_ORG_APACHE_HTTP_COOKIE_COOKIEORIGIN_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
