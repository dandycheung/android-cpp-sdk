/*================================================================================
  code generated by: java2cpp
  class: org.xml.sax.helpers.ParserFactory
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XML_SAX_HELPERS_PARSERFACTORY_HPP_DECL
#define J2CPP_ORG_XML_SAX_HELPERS_PARSERFACTORY_HPP_DECL


namespace j2cpp { namespace org { namespace xml { namespace sax { class Parser; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>
#include <org/xml/sax/Parser.hpp>


namespace j2cpp {

namespace org { namespace xml { namespace sax { namespace helpers {

	class ParserFactory;
	class ParserFactory
		: public cpp_object<ParserFactory>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		ParserFactory(jobject jobj)
		: cpp_object<ParserFactory>(jobj)
		{
		}

		static local_ref< org::xml::sax::Parser > makeParser();
		static local_ref< org::xml::sax::Parser > makeParser(local_ref< java::lang::String > const&);
	}; //class ParserFactory

} //namespace helpers
} //namespace sax
} //namespace xml
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_XML_SAX_HELPERS_PARSERFACTORY_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XML_SAX_HELPERS_PARSERFACTORY_HPP_IMPL
#define J2CPP_ORG_XML_SAX_HELPERS_PARSERFACTORY_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::xml::sax::helpers::ParserFactory > create< org::xml::sax::helpers::ParserFactory>()
{
	return local_ref< org::xml::sax::helpers::ParserFactory >(
		environment::get().get_jenv()->NewObject(
			get_class<org::xml::sax::helpers::ParserFactory::J2CPP_CLASS_NAME>(),
			get_method_id<org::xml::sax::helpers::ParserFactory::J2CPP_CLASS_NAME, org::xml::sax::helpers::ParserFactory::J2CPP_METHOD_NAME(0), org::xml::sax::helpers::ParserFactory::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< org::xml::sax::Parser > org::xml::sax::helpers::ParserFactory::makeParser()
{
	return local_ref< org::xml::sax::Parser >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), true>()
		)
	);
}

local_ref< org::xml::sax::Parser > org::xml::sax::helpers::ParserFactory::makeParser(local_ref< java::lang::String > const &a0)
{
	return local_ref< org::xml::sax::Parser >(
		environment::get().get_jenv()->CallStaticObjectMethod(
			get_class<J2CPP_CLASS_NAME>(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), true>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::xml::sax::helpers::ParserFactory,"org/xml/sax/helpers/ParserFactory")
J2CPP_DEFINE_METHOD(org::xml::sax::helpers::ParserFactory,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::xml::sax::helpers::ParserFactory,1,"makeParser","()Lorg/xml/sax/Parser;")
J2CPP_DEFINE_METHOD(org::xml::sax::helpers::ParserFactory,2,"makeParser","(Ljava/lang/String;)Lorg/xml/sax/Parser;")

} //namespace j2cpp

#endif //J2CPP_ORG_XML_SAX_HELPERS_PARSERFACTORY_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
