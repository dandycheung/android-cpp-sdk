/*================================================================================
  code generated by: java2cpp
  class: org.xml.sax.ext.DefaultHandler2
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XML_SAX_EXT_DEFAULTHANDLER2_HPP_DECL
#define J2CPP_ORG_XML_SAX_EXT_DEFAULTHANDLER2_HPP_DECL


namespace j2cpp { namespace org { namespace xml { namespace sax { class InputSource; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>
#include <org/xml/sax/InputSource.hpp>


namespace j2cpp {

namespace org { namespace xml { namespace sax { namespace ext {

	class DefaultHandler2;
	class DefaultHandler2
		: public cpp_object<DefaultHandler2>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)
		J2CPP_DECLARE_METHOD(12)
		J2CPP_DECLARE_METHOD(13)
		J2CPP_DECLARE_METHOD(14)

		DefaultHandler2(jobject jobj)
		: cpp_object<DefaultHandler2>(jobj)
		{
		}

		void startCDATA();
		void endCDATA();
		void startDTD(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void endDTD();
		void startEntity(local_ref< java::lang::String > const&);
		void endEntity(local_ref< java::lang::String > const&);
		void comment(local_ref< cpp_char_array<1> > const&, cpp_int const&, cpp_int const&);
		void attributeDecl(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void elementDecl(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void externalEntityDecl(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		void internalEntityDecl(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		local_ref< org::xml::sax::InputSource > getExternalSubset(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		local_ref< org::xml::sax::InputSource > resolveEntity(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
		local_ref< org::xml::sax::InputSource > resolveEntity(local_ref< java::lang::String > const&, local_ref< java::lang::String > const&);
	}; //class DefaultHandler2

} //namespace ext
} //namespace sax
} //namespace xml
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_XML_SAX_EXT_DEFAULTHANDLER2_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_XML_SAX_EXT_DEFAULTHANDLER2_HPP_IMPL
#define J2CPP_ORG_XML_SAX_EXT_DEFAULTHANDLER2_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::xml::sax::ext::DefaultHandler2 > create< org::xml::sax::ext::DefaultHandler2>()
{
	return local_ref< org::xml::sax::ext::DefaultHandler2 >(
		environment::get().get_jenv()->NewObject(
			get_class<org::xml::sax::ext::DefaultHandler2::J2CPP_CLASS_NAME>(),
			get_method_id<org::xml::sax::ext::DefaultHandler2::J2CPP_CLASS_NAME, org::xml::sax::ext::DefaultHandler2::J2CPP_METHOD_NAME(0), org::xml::sax::ext::DefaultHandler2::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::startCDATA()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::endCDATA()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::startDTD(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::endDTD()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::startEntity(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::endEntity(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::comment(local_ref< cpp_char_array<1> > const &a0, cpp_int const &a1, cpp_int const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::attributeDecl(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3, local_ref< java::lang::String > const &a4)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype(), a4.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::elementDecl(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::externalEntityDecl(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype()
		)
	);
}

void org::xml::sax::ext::DefaultHandler2::internalEntityDecl(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< org::xml::sax::InputSource > org::xml::sax::ext::DefaultHandler2::getExternalSubset(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< org::xml::sax::InputSource >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(12), J2CPP_METHOD_SIGNATURE(12), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< org::xml::sax::InputSource > org::xml::sax::ext::DefaultHandler2::resolveEntity(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1, local_ref< java::lang::String > const &a2, local_ref< java::lang::String > const &a3)
{
	return local_ref< org::xml::sax::InputSource >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(13), J2CPP_METHOD_SIGNATURE(13), false>(),
			a0.get_jtype(), a1.get_jtype(), a2.get_jtype(), a3.get_jtype()
		)
	);
}

local_ref< org::xml::sax::InputSource > org::xml::sax::ext::DefaultHandler2::resolveEntity(local_ref< java::lang::String > const &a0, local_ref< java::lang::String > const &a1)
{
	return local_ref< org::xml::sax::InputSource >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(14), J2CPP_METHOD_SIGNATURE(14), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::xml::sax::ext::DefaultHandler2,"org/xml/sax/ext/DefaultHandler2")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,0,"<init>","()V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,1,"startCDATA","()V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,2,"endCDATA","()V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,3,"startDTD","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,4,"endDTD","()V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,5,"startEntity","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,6,"endEntity","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,7,"comment","([CII)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,8,"attributeDecl","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,9,"elementDecl","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,10,"externalEntityDecl","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,11,"internalEntityDecl","(Ljava/lang/String;Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,12,"getExternalSubset","(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,13,"resolveEntity","(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;")
J2CPP_DEFINE_METHOD(org::xml::sax::ext::DefaultHandler2,14,"resolveEntity","(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;")

} //namespace j2cpp

#endif //J2CPP_ORG_XML_SAX_EXT_DEFAULTHANDLER2_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
