/*================================================================================
  code generated by: java2cpp
  class: org.w3c.dom.ProcessingInstruction
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_W3C_DOM_PROCESSINGINSTRUCTION_HPP_DECL
#define J2CPP_ORG_W3C_DOM_PROCESSINGINSTRUCTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace w3c { namespace dom {

	class ProcessingInstruction;
	class ProcessingInstruction
		: public cpp_object<ProcessingInstruction>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)

		ProcessingInstruction(jobject jobj)
		: cpp_object<ProcessingInstruction>(jobj)
		{
		}

		local_ref< java::lang::String > getTarget();
		local_ref< java::lang::String > getData();
		void setData(local_ref< java::lang::String > const&);
	}; //class ProcessingInstruction

} //namespace dom
} //namespace w3c
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_W3C_DOM_PROCESSINGINSTRUCTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_W3C_DOM_PROCESSINGINSTRUCTION_HPP_IMPL
#define J2CPP_ORG_W3C_DOM_PROCESSINGINSTRUCTION_HPP_IMPL

namespace j2cpp {


local_ref< java::lang::String > org::w3c::dom::ProcessingInstruction::getTarget()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

local_ref< java::lang::String > org::w3c::dom::ProcessingInstruction::getData()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void org::w3c::dom::ProcessingInstruction::setData(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::w3c::dom::ProcessingInstruction,"org/w3c/dom/ProcessingInstruction")
J2CPP_DEFINE_METHOD(org::w3c::dom::ProcessingInstruction,0,"getTarget","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::w3c::dom::ProcessingInstruction,1,"getData","()Ljava/lang/String;")
J2CPP_DEFINE_METHOD(org::w3c::dom::ProcessingInstruction,2,"setData","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ORG_W3C_DOM_PROCESSINGINSTRUCTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
