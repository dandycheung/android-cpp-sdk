/*================================================================================
  code generated by: java2cpp
  class: org.json.JSONException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_JSON_JSONEXCEPTION_HPP_DECL
#define J2CPP_ORG_JSON_JSONEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>


namespace j2cpp {

namespace org { namespace json {

	class JSONException;
	class JSONException
		: public cpp_object<JSONException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)

		JSONException(jobject jobj)
		: cpp_object<JSONException>(jobj)
		{
		}

	}; //class JSONException

} //namespace json
} //namespace org


} //namespace j2cpp

#endif //J2CPP_ORG_JSON_JSONEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_ORG_JSON_JSONEXCEPTION_HPP_IMPL
#define J2CPP_ORG_JSON_JSONEXCEPTION_HPP_IMPL

namespace j2cpp {


template <>
local_ref< org::json::JSONException > create< org::json::JSONException>(local_ref< java::lang::String > const &a0)
{
	return local_ref< org::json::JSONException >(
		environment::get().get_jenv()->NewObject(
			get_class<org::json::JSONException::J2CPP_CLASS_NAME>(),
			get_method_id<org::json::JSONException::J2CPP_CLASS_NAME, org::json::JSONException::J2CPP_METHOD_NAME(0), org::json::JSONException::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(org::json::JSONException,"org/json/JSONException")
J2CPP_DEFINE_METHOD(org::json::JSONException,0,"<init>","(Ljava/lang/String;)V")

} //namespace j2cpp

#endif //J2CPP_ORG_JSON_JSONEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
