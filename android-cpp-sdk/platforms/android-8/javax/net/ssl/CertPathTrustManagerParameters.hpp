/*================================================================================
  code generated by: java2cpp
  class: javax.net.ssl.CertPathTrustManagerParameters
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_DECL
#define J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_DECL


namespace j2cpp { namespace java { namespace security { namespace cert { class CertPathParameters; } } } }


#include <java/security/cert/CertPathParameters.hpp>


namespace j2cpp {

namespace javax { namespace net { namespace ssl {

	class CertPathTrustManagerParameters;
	class CertPathTrustManagerParameters
		: public cpp_object<CertPathTrustManagerParameters>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		CertPathTrustManagerParameters(jobject jobj)
		: cpp_object<CertPathTrustManagerParameters>(jobj)
		{
		}

		local_ref< java::security::cert::CertPathParameters > getParameters();
	}; //class CertPathTrustManagerParameters

} //namespace ssl
} //namespace net
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_IMPL
#define J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::net::ssl::CertPathTrustManagerParameters > create< javax::net::ssl::CertPathTrustManagerParameters>(local_ref< java::security::cert::CertPathParameters > const &a0)
{
	return local_ref< javax::net::ssl::CertPathTrustManagerParameters >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::net::ssl::CertPathTrustManagerParameters::J2CPP_CLASS_NAME>(),
			get_method_id<javax::net::ssl::CertPathTrustManagerParameters::J2CPP_CLASS_NAME, javax::net::ssl::CertPathTrustManagerParameters::J2CPP_METHOD_NAME(0), javax::net::ssl::CertPathTrustManagerParameters::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::security::cert::CertPathParameters > javax::net::ssl::CertPathTrustManagerParameters::getParameters()
{
	return local_ref< java::security::cert::CertPathParameters >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::net::ssl::CertPathTrustManagerParameters,"javax/net/ssl/CertPathTrustManagerParameters")
J2CPP_DEFINE_METHOD(javax::net::ssl::CertPathTrustManagerParameters,0,"<init>","(Ljava/security/cert/CertPathParameters;)V")
J2CPP_DEFINE_METHOD(javax::net::ssl::CertPathTrustManagerParameters,1,"getParameters","()Ljava/security/cert/CertPathParameters;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_NET_SSL_CERTPATHTRUSTMANAGERPARAMETERS_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
