/*================================================================================
  code generated by: java2cpp
  class: javax.xml.validation.Validator
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_VALIDATION_VALIDATOR_HPP_DECL
#define J2CPP_JAVAX_XML_VALIDATION_VALIDATOR_HPP_DECL


namespace j2cpp { namespace org { namespace w3c { namespace dom { namespace ls { class LSResourceResolver; } } } } }
namespace j2cpp { namespace org { namespace xml { namespace sax { class ErrorHandler; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Object; } } }
namespace j2cpp { namespace javax { namespace xml { namespace transform { class Result; } } } }
namespace j2cpp { namespace javax { namespace xml { namespace transform { class Source; } } } }


#include <java/lang/Object.hpp>
#include <java/lang/String.hpp>
#include <javax/xml/transform/Result.hpp>
#include <javax/xml/transform/Source.hpp>
#include <org/w3c/dom/ls/LSResourceResolver.hpp>
#include <org/xml/sax/ErrorHandler.hpp>


namespace j2cpp {

namespace javax { namespace xml { namespace validation {

	class Validator;
	class Validator
		: public cpp_object<Validator>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_METHOD(8)
		J2CPP_DECLARE_METHOD(9)
		J2CPP_DECLARE_METHOD(10)
		J2CPP_DECLARE_METHOD(11)

		Validator(jobject jobj)
		: cpp_object<Validator>(jobj)
		{
		}

		void reset();
		void validate(local_ref< javax::xml::transform::Source > const&);
		void validate(local_ref< javax::xml::transform::Source > const&, local_ref< javax::xml::transform::Result > const&);
		void setErrorHandler(local_ref< org::xml::sax::ErrorHandler > const&);
		local_ref< org::xml::sax::ErrorHandler > getErrorHandler();
		void setResourceResolver(local_ref< org::w3c::dom::ls::LSResourceResolver > const&);
		local_ref< org::w3c::dom::ls::LSResourceResolver > getResourceResolver();
		cpp_boolean getFeature(local_ref< java::lang::String > const&);
		void setFeature(local_ref< java::lang::String > const&, cpp_boolean const&);
		void setProperty(local_ref< java::lang::String > const&, local_ref< java::lang::Object > const&);
		local_ref< java::lang::Object > getProperty(local_ref< java::lang::String > const&);
	}; //class Validator

} //namespace validation
} //namespace xml
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_VALIDATION_VALIDATOR_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_VALIDATION_VALIDATOR_HPP_IMPL
#define J2CPP_JAVAX_XML_VALIDATION_VALIDATOR_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::xml::validation::Validator > create< javax::xml::validation::Validator>()
{
	return local_ref< javax::xml::validation::Validator >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::xml::validation::Validator::J2CPP_CLASS_NAME>(),
			get_method_id<javax::xml::validation::Validator::J2CPP_CLASS_NAME, javax::xml::validation::Validator::J2CPP_METHOD_NAME(0), javax::xml::validation::Validator::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

void javax::xml::validation::Validator::reset()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}

void javax::xml::validation::Validator::validate(local_ref< javax::xml::transform::Source > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::validation::Validator::validate(local_ref< javax::xml::transform::Source > const &a0, local_ref< javax::xml::transform::Result > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void javax::xml::validation::Validator::setErrorHandler(local_ref< org::xml::sax::ErrorHandler > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< org::xml::sax::ErrorHandler > javax::xml::validation::Validator::getErrorHandler()
{
	return local_ref< org::xml::sax::ErrorHandler >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

void javax::xml::validation::Validator::setResourceResolver(local_ref< org::w3c::dom::ls::LSResourceResolver > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< org::w3c::dom::ls::LSResourceResolver > javax::xml::validation::Validator::getResourceResolver()
{
	return local_ref< org::w3c::dom::ls::LSResourceResolver >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}

cpp_boolean javax::xml::validation::Validator::getFeature(local_ref< java::lang::String > const &a0)
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(8), J2CPP_METHOD_SIGNATURE(8), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::validation::Validator::setFeature(local_ref< java::lang::String > const &a0, cpp_boolean const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(9), J2CPP_METHOD_SIGNATURE(9), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

void javax::xml::validation::Validator::setProperty(local_ref< java::lang::String > const &a0, local_ref< java::lang::Object > const &a1)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(10), J2CPP_METHOD_SIGNATURE(10), false>(),
			a0.get_jtype(), a1.get_jtype()
		)
	);
}

local_ref< java::lang::Object > javax::xml::validation::Validator::getProperty(local_ref< java::lang::String > const &a0)
{
	return local_ref< java::lang::Object >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(11), J2CPP_METHOD_SIGNATURE(11), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::xml::validation::Validator,"javax/xml/validation/Validator")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,1,"reset","()V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,2,"validate","(Ljavax/xml/transform/Source;)V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,3,"validate","(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,4,"setErrorHandler","(Lorg/xml/sax/ErrorHandler;)V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,5,"getErrorHandler","()Lorg/xml/sax/ErrorHandler;")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,6,"setResourceResolver","(Lorg/w3c/dom/ls/LSResourceResolver;)V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,7,"getResourceResolver","()Lorg/w3c/dom/ls/LSResourceResolver;")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,8,"getFeature","(Ljava/lang/String;)Z")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,9,"setFeature","(Ljava/lang/String;Z)V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,10,"setProperty","(Ljava/lang/String;Ljava/lang/Object;)V")
J2CPP_DEFINE_METHOD(javax::xml::validation::Validator,11,"getProperty","(Ljava/lang/String;)Ljava/lang/Object;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_VALIDATION_VALIDATOR_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
