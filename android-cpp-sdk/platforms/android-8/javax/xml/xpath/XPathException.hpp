/*================================================================================
  code generated by: java2cpp
  class: javax.xml.xpath.XPathException
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_XPATH_XPATHEXCEPTION_HPP_DECL
#define J2CPP_JAVAX_XML_XPATH_XPATHEXCEPTION_HPP_DECL


namespace j2cpp { namespace java { namespace lang { class String; } } }
namespace j2cpp { namespace java { namespace lang { class Throwable; } } }
namespace j2cpp { namespace java { namespace io { class PrintStream; } } }
namespace j2cpp { namespace java { namespace io { class PrintWriter; } } }


#include <java/io/PrintStream.hpp>
#include <java/io/PrintWriter.hpp>
#include <java/lang/String.hpp>
#include <java/lang/Throwable.hpp>


namespace j2cpp {

namespace javax { namespace xml { namespace xpath {

	class XPathException;
	class XPathException
		: public cpp_object<XPathException>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)

		XPathException(jobject jobj)
		: cpp_object<XPathException>(jobj)
		{
		}

		local_ref< java::lang::Throwable > getCause();
		void printStackTrace(local_ref< java::io::PrintStream > const&);
		void printStackTrace();
		void printStackTrace(local_ref< java::io::PrintWriter > const&);
	}; //class XPathException

} //namespace xpath
} //namespace xml
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_XPATH_XPATHEXCEPTION_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_XPATH_XPATHEXCEPTION_HPP_IMPL
#define J2CPP_JAVAX_XML_XPATH_XPATHEXCEPTION_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::xml::xpath::XPathException > create< javax::xml::xpath::XPathException>(local_ref< java::lang::String > const &a0)
{
	return local_ref< javax::xml::xpath::XPathException >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::xml::xpath::XPathException::J2CPP_CLASS_NAME>(),
			get_method_id<javax::xml::xpath::XPathException::J2CPP_CLASS_NAME, javax::xml::xpath::XPathException::J2CPP_METHOD_NAME(0), javax::xml::xpath::XPathException::J2CPP_METHOD_SIGNATURE(0), false>(),
			a0.get_jtype()
		)
	);
}

template <>
local_ref< javax::xml::xpath::XPathException > create< javax::xml::xpath::XPathException>(local_ref< java::lang::Throwable > const &a0)
{
	return local_ref< javax::xml::xpath::XPathException >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::xml::xpath::XPathException::J2CPP_CLASS_NAME>(),
			get_method_id<javax::xml::xpath::XPathException::J2CPP_CLASS_NAME, javax::xml::xpath::XPathException::J2CPP_METHOD_NAME(1), javax::xml::xpath::XPathException::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::Throwable > javax::xml::xpath::XPathException::getCause()
{
	return local_ref< java::lang::Throwable >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>()
		)
	);
}

void javax::xml::xpath::XPathException::printStackTrace(local_ref< java::io::PrintStream > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::xpath::XPathException::printStackTrace()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>()
		)
	);
}

void javax::xml::xpath::XPathException::printStackTrace(local_ref< java::io::PrintWriter > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>(),
			a0.get_jtype()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::xml::xpath::XPathException,"javax/xml/xpath/XPathException")
J2CPP_DEFINE_METHOD(javax::xml::xpath::XPathException,0,"<init>","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::xml::xpath::XPathException,1,"<init>","(Ljava/lang/Throwable;)V")
J2CPP_DEFINE_METHOD(javax::xml::xpath::XPathException,2,"getCause","()Ljava/lang/Throwable;")
J2CPP_DEFINE_METHOD(javax::xml::xpath::XPathException,3,"printStackTrace","(Ljava/io/PrintStream;)V")
J2CPP_DEFINE_METHOD(javax::xml::xpath::XPathException,4,"printStackTrace","()V")
J2CPP_DEFINE_METHOD(javax::xml::xpath::XPathException,5,"printStackTrace","(Ljava/io/PrintWriter;)V")

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_XPATH_XPATHEXCEPTION_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
