/*================================================================================
  code generated by: java2cpp
  class: javax.xml.transform.sax.SAXResult
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_TRANSFORM_SAX_SAXRESULT_HPP_DECL
#define J2CPP_JAVAX_XML_TRANSFORM_SAX_SAXRESULT_HPP_DECL


namespace j2cpp { namespace org { namespace xml { namespace sax { namespace ext { class LexicalHandler; } } } } }
namespace j2cpp { namespace org { namespace xml { namespace sax { class ContentHandler; } } } }
namespace j2cpp { namespace java { namespace lang { class String; } } }


#include <java/lang/String.hpp>
#include <org/xml/sax/ContentHandler.hpp>
#include <org/xml/sax/ext/LexicalHandler.hpp>


namespace j2cpp {

namespace javax { namespace xml { namespace transform { namespace sax {

	class SAXResult;
	class SAXResult
		: public cpp_object<SAXResult>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)
		J2CPP_DECLARE_METHOD(2)
		J2CPP_DECLARE_METHOD(3)
		J2CPP_DECLARE_METHOD(4)
		J2CPP_DECLARE_METHOD(5)
		J2CPP_DECLARE_METHOD(6)
		J2CPP_DECLARE_METHOD(7)
		J2CPP_DECLARE_FIELD(0)

		SAXResult(jobject jobj)
		: cpp_object<SAXResult>(jobj)
		{
		}

		void setHandler(local_ref< org::xml::sax::ContentHandler > const&);
		local_ref< org::xml::sax::ContentHandler > getHandler();
		void setLexicalHandler(local_ref< org::xml::sax::ext::LexicalHandler > const&);
		local_ref< org::xml::sax::ext::LexicalHandler > getLexicalHandler();
		void setSystemId(local_ref< java::lang::String > const&);
		local_ref< java::lang::String > getSystemId();

		static static_field< J2CPP_CLASS_NAME, J2CPP_FIELD_NAME(0), J2CPP_FIELD_SIGNATURE(0), local_ref< java::lang::String > > FEATURE;
	}; //class SAXResult

} //namespace sax
} //namespace transform
} //namespace xml
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_TRANSFORM_SAX_SAXRESULT_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_XML_TRANSFORM_SAX_SAXRESULT_HPP_IMPL
#define J2CPP_JAVAX_XML_TRANSFORM_SAX_SAXRESULT_HPP_IMPL

namespace j2cpp {


template <>
local_ref< javax::xml::transform::sax::SAXResult > create< javax::xml::transform::sax::SAXResult>()
{
	return local_ref< javax::xml::transform::sax::SAXResult >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::xml::transform::sax::SAXResult::J2CPP_CLASS_NAME>(),
			get_method_id<javax::xml::transform::sax::SAXResult::J2CPP_CLASS_NAME, javax::xml::transform::sax::SAXResult::J2CPP_METHOD_NAME(0), javax::xml::transform::sax::SAXResult::J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

template <>
local_ref< javax::xml::transform::sax::SAXResult > create< javax::xml::transform::sax::SAXResult>(local_ref< org::xml::sax::ContentHandler > const &a0)
{
	return local_ref< javax::xml::transform::sax::SAXResult >(
		environment::get().get_jenv()->NewObject(
			get_class<javax::xml::transform::sax::SAXResult::J2CPP_CLASS_NAME>(),
			get_method_id<javax::xml::transform::sax::SAXResult::J2CPP_CLASS_NAME, javax::xml::transform::sax::SAXResult::J2CPP_METHOD_NAME(1), javax::xml::transform::sax::SAXResult::J2CPP_METHOD_SIGNATURE(1), false>(),
			a0.get_jtype()
		)
	);
}

void javax::xml::transform::sax::SAXResult::setHandler(local_ref< org::xml::sax::ContentHandler > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(2), J2CPP_METHOD_SIGNATURE(2), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< org::xml::sax::ContentHandler > javax::xml::transform::sax::SAXResult::getHandler()
{
	return local_ref< org::xml::sax::ContentHandler >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(3), J2CPP_METHOD_SIGNATURE(3), false>()
		)
	);
}

void javax::xml::transform::sax::SAXResult::setLexicalHandler(local_ref< org::xml::sax::ext::LexicalHandler > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(4), J2CPP_METHOD_SIGNATURE(4), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< org::xml::sax::ext::LexicalHandler > javax::xml::transform::sax::SAXResult::getLexicalHandler()
{
	return local_ref< org::xml::sax::ext::LexicalHandler >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(5), J2CPP_METHOD_SIGNATURE(5), false>()
		)
	);
}

void javax::xml::transform::sax::SAXResult::setSystemId(local_ref< java::lang::String > const &a0)
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(6), J2CPP_METHOD_SIGNATURE(6), false>(),
			a0.get_jtype()
		)
	);
}

local_ref< java::lang::String > javax::xml::transform::sax::SAXResult::getSystemId()
{
	return local_ref< java::lang::String >(
		environment::get().get_jenv()->CallObjectMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(7), J2CPP_METHOD_SIGNATURE(7), false>()
		)
	);
}


static_field<
	javax::xml::transform::sax::SAXResult::J2CPP_CLASS_NAME,
	javax::xml::transform::sax::SAXResult::J2CPP_FIELD_NAME(0),
	javax::xml::transform::sax::SAXResult::J2CPP_FIELD_SIGNATURE(0),
	local_ref< java::lang::String >
> javax::xml::transform::sax::SAXResult::FEATURE;


J2CPP_DEFINE_CLASS(javax::xml::transform::sax::SAXResult,"javax/xml/transform/sax/SAXResult")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,0,"<init>","()V")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,1,"<init>","(Lorg/xml/sax/ContentHandler;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,2,"setHandler","(Lorg/xml/sax/ContentHandler;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,3,"getHandler","()Lorg/xml/sax/ContentHandler;")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,4,"setLexicalHandler","(Lorg/xml/sax/ext/LexicalHandler;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,5,"getLexicalHandler","()Lorg/xml/sax/ext/LexicalHandler;")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,6,"setSystemId","(Ljava/lang/String;)V")
J2CPP_DEFINE_METHOD(javax::xml::transform::sax::SAXResult,7,"getSystemId","()Ljava/lang/String;")
J2CPP_DEFINE_FIELD(javax::xml::transform::sax::SAXResult,0,"FEATURE","Ljava/lang/String;")

} //namespace j2cpp

#endif //J2CPP_JAVAX_XML_TRANSFORM_SAX_SAXRESULT_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
