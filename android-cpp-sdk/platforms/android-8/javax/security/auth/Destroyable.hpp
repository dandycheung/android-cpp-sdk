/*================================================================================
  code generated by: java2cpp
  class: javax.security.auth.Destroyable
================================================================================*/


#ifndef J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SECURITY_AUTH_DESTROYABLE_HPP_DECL
#define J2CPP_JAVAX_SECURITY_AUTH_DESTROYABLE_HPP_DECL






namespace j2cpp {

namespace javax { namespace security { namespace auth {

	class Destroyable;
	class Destroyable
		: public cpp_object<Destroyable>
	{
	public:

		J2CPP_DECLARE_CLASS

		J2CPP_DECLARE_METHOD(0)
		J2CPP_DECLARE_METHOD(1)

		Destroyable(jobject jobj)
		: cpp_object<Destroyable>(jobj)
		{
		}

		void destroy();
		cpp_boolean isDestroyed();
	}; //class Destroyable

} //namespace auth
} //namespace security
} //namespace javax


} //namespace j2cpp

#endif //J2CPP_JAVAX_SECURITY_AUTH_DESTROYABLE_HPP_DECL

#else //J2CPP_INCLUDE_IMPLEMENTATION

#ifndef J2CPP_JAVAX_SECURITY_AUTH_DESTROYABLE_HPP_IMPL
#define J2CPP_JAVAX_SECURITY_AUTH_DESTROYABLE_HPP_IMPL

namespace j2cpp {


void javax::security::auth::Destroyable::destroy()
{
	return void(
		environment::get().get_jenv()->CallVoidMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(0), J2CPP_METHOD_SIGNATURE(0), false>()
		)
	);
}

cpp_boolean javax::security::auth::Destroyable::isDestroyed()
{
	return cpp_boolean(
		environment::get().get_jenv()->CallBooleanMethod(
			get_jtype(),
			get_method_id<J2CPP_CLASS_NAME, J2CPP_METHOD_NAME(1), J2CPP_METHOD_SIGNATURE(1), false>()
		)
	);
}


J2CPP_DEFINE_CLASS(javax::security::auth::Destroyable,"javax/security/auth/Destroyable")
J2CPP_DEFINE_METHOD(javax::security::auth::Destroyable,0,"destroy","()V")
J2CPP_DEFINE_METHOD(javax::security::auth::Destroyable,1,"isDestroyed","()Z")

} //namespace j2cpp

#endif //J2CPP_JAVAX_SECURITY_AUTH_DESTROYABLE_HPP_IMPL

#endif //J2CPP_INCLUDE_IMPLEMENTATION
